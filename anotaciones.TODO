-*Dieron un finiquito a un empleado, le desconto lo que debia en un prestamo, despues lo dieron de alta de nuevo y en la nomina le sigio descontando
-*De repente tienen problemas al agregar incapacidades y faltas no las toma en la nomina, creo q es cuando se cruzan 2 semanas
-*Poner un consecutivo para los empleados de cada empresa, q se incremente solo cuando se inserte uno nuevo, cambiar en los reportes de nomina poner ese campo en lugar del id
-*Historial de modificaciones en empleados, sueldos, altas, bajas, etc, checar si al despedir (finiquito) se registra la fecha de salida, al activar cambiar la fecha de entrada y de salida ponerla en null, los sueldos se modifica tambien en apartado de sueldos


-Traspaso de productos entre empresas, el reporte de seguimiento x producto las salidas
  tipo traspaso que no afecte el precio solo la existencia, imprimir una orden de donde salio
  y adonde entro, con una descripcion
-Incapacidades dobles en una misma semana, empleados nomina
-Facturacion productos certificados
-Ordenes de requisicion hacerlo como la señora quiere
-Archivo Dim Aun no pasa nada
-Orden de servicio agregar orden de compra
-*Caja chica agregar nomenclaturas
-*Remisiones los productos que cargue el iva e impuestos si tiene
-*Checar pago masivo de limon en tarjetas debito banamex, y cambiar la funcion de obtener apellidos, y de error del nombre
-*Reporte de historial de nivelacion que ponga, como estaba, la fisica y como quedo
-*Poliza de diario de ventas los productos sin costo en la factura salen q no salgan
-*Caja chica que ordene los registros como se agregaron.
-*En pallets poner presentacion directo en modificar y que se imprima ese en el recibo
-*Pallets En los clientes autocomplete ponerle la ciudad para diferenciarlo
-*Pago masivo si le quitan la cuenta q la deje en blanco
-*En banco movimientos ordenar x fecha y id_mov
-*cambiar fecha de la factura 20498 por 2 de julio blanca



Furby:
  ✔ Agregar factura proveedor, en empresa cargar por default la marcada default @done (13-09-09 11:14)
  ✔ Al gregar los tickets a la factura, al ir dando enter se queda en el select de calidad, al dar enter en el select que pase el foco al btn "cargar" y al dar enter en ese btn que se agregue el ticket, y que regrese el foco al campo ticket si se agrego bien o si marco error @done (13-09-09 11:18)
  ☐ Las facturas de los proveedores ponerlas en otro directorio, y que se agrupen por proveedor (la carpeta padre sea el id del proveedor), esas no se copian a documentos ni nada
  ✔ Al agregar una factura no se quita el borrador previamente guardado, se siguen cargando los datos, cuando se timbre que se borre el borrador ya no se ocupa @done (13-09-09 11:47)
  ✔ Al agregar una factura validar que no exeda el limite x proveedor, en proveedores_facturacion_model hay un metodo getLimiteProveedores(), regresa limite y facturado, si facturado+total_new_factura<=limite? si guardar: no guardar; @done (13-09-09 12:44)
  ✔ El logo de las facturas no hay q ponercelo, en facturacion (ventas) falto que fuera de la empresa seleccionada no fijo el de sanjorge @done (13-09-09 12:00)

2013-09-02
  ✔ Agregar cuenta de compaq en calidades, poner default la de limon fruta de compras @done (13-09-03 18:31)
  ☐ SQL:

      CREATE TABLE nomina_salarios_minimos
      (
        id serial NOT NULL,
        zona_a real,
        zona_b real,
        zona_c real,
        CONSTRAINT nomina_salarios_minimos_pkey PRIMARY KEY (id)
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE nomina_salarios_minimos OWNER TO programa;
      INSERT INTO nomina_salarios_minimos   (zona_a, zona_b, zona_c) VALUES (64.76, 61.38, 61.38);

      cuenta_cpi character varying(12) NOT NULL DEFAULT 43000010,
      COMMENT ON COLUMN calidades.cuenta_cpi IS 'cuenta afectable del contpaqi';
      limon 43000010
      piña 43000011
      coco 43000013

      Productos piña:
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL(#5)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL(#6)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL(#7)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL(#8)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #5(PLASTICO)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #5(CARTON)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #6(PLASTICO)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #6(CARTON)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #7(PLASTICO)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL#7(CARTON)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #8(PLASTICO)', '41080000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'PIÑA MIEL #8(CARTON)', '41080000' );
      otros:
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'TAMARINDO DE PRIMERA', '41060000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'TAMARINDO DE SEGUNDA', '41060000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'SEGURO', '42200100' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'AJUSTE PRECIO', '41050000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'TARIMA NACIONAL', '42200103' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'ARPILLAS 18KG', '41040000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'COMISION AUTO-VENTA', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'SUPERVISOR DE CARGAS', '42200102' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'TARIMA CERTIFICADA', '42200103' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'CERTIFICADO FITOSANITARIO', '42200101' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'CERTIFICADO DE ORIGEN', '42200101' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'CONCRETO HID C/RESISTENCIA 250', '42200500' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'AJUSTE DE PRECIO', '41050000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'COCO DESTOPADO', '41070000' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'FIRCO', '42200105' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'TUBO ALCANTARILLADO', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'CEMENTO', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'HRS RETRO EXCAVADORA', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'HORAS VIBRO COMPACTADOR', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'ARENA', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'GRAVA', '42200400' );
        INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'BALASTRE', '42200400' );


SQL
  Tabla facturacion:
    poliza_diario boolean NOT NULL DEFAULT false,
    COMMENT ON COLUMN facturacion.poliza_diario IS 'si es false no se a registrado, si es true ya se registro, tambien depende de si esta cancelada o pendiente';

    CREATE TABLE banco_cuentas
    (
      id_cuenta serial NOT NULL,
      numero character varying(20),
      alias character varying(80) NOT NULL,
      cuenta_cpi character varying(12), -- cuenta afectable del contpaqi
      status character varying(2) NOT NULL DEFAULT 'ac'::character varying, -- ac:activo, e:eliminado
      CONSTRAINT banco_cuentas_pkey PRIMARY KEY (id_cuenta)
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE banco_cuentas OWNER TO programa;
    COMMENT ON COLUMN banco_cuentas.cuenta_cpi IS 'cuenta afectable del contpaqi';
    COMMENT ON COLUMN banco_cuentas.status IS 'ac:activo, e:eliminado';
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('AFIRME CTA 1114100..', '11200013');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BAJIO CTA 702014', '11200007');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BANAMEX CTA 514166..', '11200011');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BANAMEX PRODUCTIVA..', '11200012');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BANAMEX SA CTA 514..', '11200002');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BANCOMER CTA 92214', '11200001');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('BANORTE CTA 33360', '11200006');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('HSBC CTA 0763', '11200005');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('HSBC CTA 4202', '11200010');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('SANTANDER CTA 2202', '11200008');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('SANTANDER CTA 5250..', '11200003');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('SANTANDER CTA 6117', '11200009');
    INSERT INTO banco_cuentas (alias, cuenta_cpi) VALUES ('SANTANDER NUEVA 98..', '11200004');

    Tabla facturacion_abonos:
      poliza_ingreso boolean NOT NULL DEFAULT false,
      id_cuenta integer NOT NULL
      COMMENT ON COLUMN facturacion_abonos.poliza_ingreso IS 'si es false no se a registrado, si es true ya se registro (exportado al contpaq)';

    Nuevos inserts de clasificaciones:
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE S/EXTRA (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE S/EXTRA (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE S/EXTRA (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE S/EXTRA (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE EXTRA (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE EXTRA (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE EXTRA (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE EXTRA (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE PREMIUM (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE PREMIUM (CAJA DE CARTON)', '' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE PREMIUM  (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE PREMIUM (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE MIXTO (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE MIXTO (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 300 (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 300 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE MIXTO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE SE(CAJA MADERA 24K)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 4 Y 5 (CAJA MADERA 24K)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 400 (MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 400 ( PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 5 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 5 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 5 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 5 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3  (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3  (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2  (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2  (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2  (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2  (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECONOMICO  (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECONOMICO  (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECONOMICO  (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECONOMICO  (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2,3 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2,3 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2,3 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 2,3 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3,4 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3,4 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3,4 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 3,4 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4,5 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 400 ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4,5 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4,5 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No. 4,5 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE BOLICON (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE CANICA ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 600 ( MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 600 ( PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ESPECIAL (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 350 ( PLASTICO )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ESPECIAL (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ESPECIAL (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ESPECIAL (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO 4 Y 5 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 500 ( MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO 400 (CAJA DE MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO 400 ( CAJA DE PLASTICO )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 350 ( MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO VERDE ECONOMICO ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 350 ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 300 ( MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'ALIMONADO CLARO ECONOMICO ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE No.600 ARPILLITA(PLASTICO_)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO MIXTO (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO MIXTO (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO MIXTO (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO MIXTO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO PREMIUM (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO PREMIUM (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO PREMIUM (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO PREMIUM (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO CLARO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO VERDE (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO VERDE ( CAJA DE MADERA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 5 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 5 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 5 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 5 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 4 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 4 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 4 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 4 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 3 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 3 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 3 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 3 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 2 (CAJA DE MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 2 (CAJA DE CARTON)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 2 (CAJA DE PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO No. 2 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO ESPECIAL (MADERA))', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO ECON.(ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO ECONOMICO NO. 2 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECON No. 3 ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECON. No. 4  ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE ECON. No. 5 ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ALIMONADO VERDE ( PLASTICO )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 500 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO No. 5 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO MIXTO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO ECONOMICO (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO ECON.(ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO VERDE (ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO CLARO ( ARPILLA )', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 600 (ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON COLIMA PLASTICO', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON ARPILLA', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS. LIMON VERDE NO. 2', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS. DE LIMON INDUSTRIAL', '41050000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS. DE LIMON AMARILLO INDUSTRIAL', '41050000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'BONIFICACION LIMON INDUSTRIAL (KGS)', '41050000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS. DE LIMON DE SUELO', '41050000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE #3 ARPILLITA (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE #2 ARPILLITA (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 500(PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 700 (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS.LIMON VERDE 500(PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS LIMON VERDE 400(PLASTICO)', '0' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'KGS LIMON VERDE 400(PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE MIXTO 300 (MADERA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 700(ARPILLA)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON AMARILLO (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 550 (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE N0. 550 ARPILLITA (PLASTICO)', '41040000' );
      INSERT INTO cuentas_contpaq (id_area, nombre, cuenta_cpi) VALUES (1, 'LIMON VERDE 550 ARPILLA', '41040000' );



EMPRESAS:
        ☐ Cuando agrego una empresa y la modifico cambiando los archivos .CER y .KEY la clave la cambia como "aaa" y aparte que no agrega los nuevos archivos .CER y .KEY


2013-07-24
  DOCUMENTOS:

    ✔ Directorio donde guardar los documentos. @done (13-07-24 12:10)
          documentos/{$cliente}/año/mes/folio_{$folio}/

    ✔ Manifiesto de chofer @done (13-07-24 17:52)
          ✔ El importe es de la factura guardada @done (13-07-23 23:47)
          ✔ Autocomplete de lineas @done (13-07-23 23:47)
          ✔ Al poner el ticket de pesada cargar los datos del chofer y del camion @done (13-07-23 23:47)
          ✔ la fecha del dia @done (13-07-23 23:47)
          ✔ al cargar el chofer verificar si ya tiene la ife y licencia, si la tiene copearlas a un directorio @done (13-07-24 12:10)
          ✔ si no tiene licencia y/o ife poner un msg, si las tiene y vuelve a cargar otras las reemplazaria en el directorio donde se guardan. @done (13-07-24 14:04)

     ✔ Foto. usar un input oculto para enviar el base64. usar las funciones que estan en Upload. @done (13-07-24 17:52)

     Privilegios:

         "Doc Manifiesto Chofer";70;FALSE;"documentos/manifiesto_chofer/";"copy";FALSE
         "Doc Chofer Foto Firma Manifiesto";70;FALSE;"documentos/chofer_foto_firma_manifiesto/";"copy";FALSE

2013-07-20
  ☐ SQL:
    Privilegios:
      "Ventas remisión";69;TRUE;"ventas/";"list-alt";FALSE
      "Agregar remisión";74;TRUE;"ventas/agregar/";"plus";FALSE
      "Cancelar";74;FALSE;"ventas/cancelar/";"remove";FALSE
      "Pagar";74;FALSE;"ventas/pagar/";"money";FALSE
      "Imprimir";74;FALSE;"ventas/imprimir/";"print";FALSE
      "Lineas transporte";69;TRUE;"lineas_transporte/";"truck";FALSE
      "Agregar linea";79;TRUE;"lineas_transporte/agregar/";"plus";FALSE
      "Modificar";79;FALSE;"lineas_transporte/modificar/";"edit";FALSE
      "Eliminar";79;FALSE;"lineas_transporte/eliminar/";"remove";FALSE
      "Activar";79;FALSE;"lineas_transporte/activar/";"ok";FALSE

    CREATE TABLE facturacion_ventas_remision
    (
      id_venta bigserial NOT NULL,
      id_cliente bigint NOT NULL,
      id_empresa integer NOT NULL,
      folio bigint NOT NULL,
      fecha timestamp with time zone NOT NULL DEFAULT now(),
      subtotal double precision NOT NULL DEFAULT 0,
      importe_iva double precision NOT NULL DEFAULT 0,
      total double precision NOT NULL DEFAULT 0,
      total_letra character varying(250) NOT NULL,
      forma_pago character varying(80) NOT NULL DEFAULT 'Pago en una sola exhibición'::character varying,
      condicion_pago character varying(2) NOT NULL DEFAULT 'co'::character varying,
      plazo_credito integer NOT NULL DEFAULT 0,
      observaciones text NOT NULL DEFAULT ''::text,
      status character varying(2) NOT NULL DEFAULT 'pa'::character varying,
      metodo_pago character varying(40) NOT NULL DEFAULT 'efectivo'::character varying, -- cheque, tarjeta de crédito o debito, depósito en cuenta
      CONSTRAINT facturacion_ventas_remision_pkey PRIMARY KEY (id_venta),
      CONSTRAINT facturacion_ventas_remision_id_cliente_fkey FOREIGN KEY (id_cliente)
          REFERENCES clientes (id_cliente) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT facturacion_ventas_remision_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE facturacion_ventas_remision OWNER TO programa;
    COMMENT ON COLUMN facturacion_ventas_remision.metodo_pago IS 'cheque, tarjeta de crédito o debito, depósito en cuenta';

    CREATE TABLE facturacion_ventas_remision_cliente
    (
      id_venta bigint NOT NULL,
      nombre character varying(130),
      rfc character varying(13),
      calle character varying(60),
      no_exterior character varying(7),
      no_interior character varying(7),
      colonia character varying(60),
      localidad character varying(45),
      municipio character varying(45),
      estado character varying(45),
      cp character varying(10),
      pais character varying(60),
      CONSTRAINT facturacion_ventas_remision_productos_pkey PRIMARY KEY (id_venta),
      CONSTRAINT facturacion_ventas_remision_productos_id_venta_fkey FOREIGN KEY (id_venta)
          REFERENCES facturacion_ventas_remision (id_venta) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE facturacion_ventas_remision_cliente OWNER TO programa;

    CREATE TABLE facturacion_ventas_remision_productos
    (
      id_venta bigint NOT NULL,
      id_clasificacion integer,
      num_row integer NOT NULL DEFAULT 0,
      cantidad real NOT NULL DEFAULT 0,
      descripcion text,
      precio_unitario double precision NOT NULL DEFAULT 0,
      importe double precision NOT NULL,
      unidad character varying(15) DEFAULT 'No aplica'::character varying,
      CONSTRAINT facturacion_ventas_remision_productos_pkey1 PRIMARY KEY (id_venta, num_row),
      CONSTRAINT facturacion_ventas_remision_productos_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT facturacion_ventas_remision_productos_id_venta_fkey1 FOREIGN KEY (id_venta)
          REFERENCES facturacion_ventas_remision (id_venta) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE facturacion_ventas_remision_productos OWNER TO programa;

2013-07-19
Privilegios Facturacion:
    "Ventas";0;TRUE;"ventas/";"dollar";FALSE
    "Facturar";69;TRUE;"facturacion/agregar/";"file-text-alt";FALSE
    "Agregar Series y Folios";72;TRUE;"facturacion/agregar_serie_folio/";"plus";FALSE
    "Series y Folios";70;TRUE;"facturacion/series_folios/";"list-alt";FALSE
    "Modificar";72;FALSE;"facturacion/modificar_serie_folio/";"edit";FALSE

    "Pagar";70;FALSE;"facturacion/pagar/";"credit-card";FALSE
    "Cancelar";70;FALSE;"facturacion/cancelar/";"ban-circle";FALSE
    "Imprimir";70;FALSE;"facturacion/imprimir/";"print";FALSE

2013-07-17
      CHOFERES:
           ✔ Agregar los campos faltantes. @done (13-07-15 17:52)

                SQL:
                  telefono character varying(15),
                  id_nextel character varying(20),
                  no_licencia character varying(50),
                  no_ife character varying(30),
                  url_licencia character varying(150),
                  url_ife character varying(150),

      CAMIONES:
           ✔ Agregar los campos faltantes. @done (13-07-15 18:06)

                SQL:
                  color character varying(15),

2013-07-12
  ✔ SQL @done (13-07-19 13:31)
      -Agregar los campos en empresas
        cer_org character varying(90),
        cer character varying(90),
        key_path character varying(90),
        pass character varying(20),
        cfdi_version character varying(6) NOT NULL DEFAULT 3.2,
        cer_caduca date,

        -Agregar los campos en clientes
        dias_credito integer NOT NULL DEFAULT 0,

        CREATE TABLE lineas_transporte
        (
          id_linea serial NOT NULL,
          nombre character varying(100) NOT NULL,
          telefonos character varying(70),
          id character varying(30),
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT lineas_transporte_pkey PRIMARY KEY (id_linea)
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE lineas_transporte OWNER TO programa;

        CREATE TABLE rastria_documentos
        (
          id_documento serial NOT NULL,
          nombre character varying(100) NOT NULL,
          url_form character varying(80),
          url_print character varying(80),
          status boolean NOT NULL DEFAULT true,
          orden integer NOT NULL, -- indica la prioridad (orden) de los documentos como se tienen que ir haciendo
          CONSTRAINT rastria_documentos_pkey PRIMARY KEY (id_documento)
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE rastria_documentos OWNER TO programa;
        COMMENT ON COLUMN rastria_documentos.orden IS 'indica la prioridad (orden) de los documentos como se tienen que ir haciendo';

        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('MANIFIESTO DEL CHOFER', NULL, NULL, true, 1);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('CHOFER FOTO FIRMA MANIFIESTO', NULL, NULL, true, 2);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('ACOMODO DEL EMBARQUE', NULL, NULL, true, 3);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('CHOFER COPIA DEL IFE', NULL, NULL, true, 4);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('CHOFER COPIA LICENCIA', NULL, NULL, true, 5);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('SEGURO CAMION', NULL, NULL, true, 6);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('CERTIFICADO DE TLC', NULL, NULL, true, 7);
        INSERT INTO rastria_documentos (nombre, url_form, url_print, status, orden) VALUES ('MANIFIESTO DEL CAMION', NULL, NULL, true, 8);

        CREATE TABLE facturacion_series_folios
        (
          id_serie_folio serial NOT NULL,
          id_empresa integer NOT NULL,
          serie character varying(30),
          no_aprobacion bigint NOT NULL,
          folio_inicio bigint NOT NULL,
          folio_fin bigint NOT NULL,
          leyenda text,
          leyenda1 text,
          leyenda2 text,
          es_nota_credito boolean NOT NULL DEFAULT false, -- indica si los folios son notas de credito
          ano_aprobacion date NOT NULL,
          CONSTRAINT facturacion_series_folios_pkey PRIMARY KEY (id_serie_folio),
          CONSTRAINT facturacion_series_folios_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_series_folios OWNER TO programa;
        COMMENT ON COLUMN facturacion_series_folios.es_nota_credito IS 'indica si los folios son notas de credito';

        CREATE TABLE facturacion
        (
          id_factura bigserial NOT NULL,
          id_cliente bigint NOT NULL,
          id_empresa integer NOT NULL,
          "version" character varying(6) NOT NULL,
          serie character varying(30) NOT NULL,
          folio bigint NOT NULL,
          fecha timestamp with time zone NOT NULL DEFAULT now(),
          subtotal double precision NOT NULL DEFAULT 0,
          importe_iva double precision NOT NULL DEFAULT 0,
          total double precision NOT NULL DEFAULT 0,
          total_letra character varying(250) NOT NULL,
          no_aprobacion bigint NOT NULL,
          ano_aprobacion character varying(4) NOT NULL,
          tipo_comprobante character varying(10) NOT NULL DEFAULT 'ingreso'::character varying, -- egreso o ingreso
          forma_pago character varying(80) NOT NULL DEFAULT 'Pago en una sola exhibición'::character varying, -- Pago en una sola exhibición, Parcialidad 1 de X
          metodo_pago character varying(40) NOT NULL DEFAULT 'efectivo'::character varying, -- cheque, tarjeta de crédito o debito, depósito en cuenta
          metodo_pago_digitos character varying(20) NOT NULL DEFAULT 'No identificado'::character varying, -- Los ultimos 4 digitos del cheque, tarjeta o cuenta en metodo de pago
          no_certificado character varying(100) NOT NULL,
          cadena_original text NOT NULL,
          sello character varying(250) NOT NULL,
          certificado text NOT NULL,
          condicion_pago character varying(2) NOT NULL DEFAULT 'co'::character varying, -- Corresponde a si el documento es a cr:credito o co:contado
          plazo_credito integer NOT NULL DEFAULT 0,
          observaciones text NOT NULL DEFAULT ''::text,
          status character varying(2) NOT NULL DEFAULT 'pa'::character varying, -- Corresponde al status de la factura p:pendiente, pa:pagada, ca:cancelada
          id_nc bigint, -- es el id de la factura que esta ligada la nota de credito
          CONSTRAINT facturacion_pkey PRIMARY KEY (id_factura),
          CONSTRAINT facturacion_id_cliente_fkey FOREIGN KEY (id_cliente)
              REFERENCES clientes (id_cliente) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT facturacion_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion OWNER TO programa;
        COMMENT ON COLUMN facturacion.tipo_comprobante IS 'egreso o ingreso';
        COMMENT ON COLUMN facturacion.forma_pago IS 'Pago en una sola exhibición, Parcialidad 1 de X';
        COMMENT ON COLUMN facturacion.metodo_pago IS 'cheque, tarjeta de crédito o debito, depósito en cuenta';
        COMMENT ON COLUMN facturacion.metodo_pago_digitos IS 'Los ultimos 4 digitos del cheque, tarjeta o cuenta en metodo de pago';
        COMMENT ON COLUMN facturacion.condicion_pago IS 'Corresponde a si el documento es a cr:credito o co:contado';
        COMMENT ON COLUMN facturacion.status IS 'Corresponde al status de la factura p:pendiente, pa:pagada, ca:cancelada';
        COMMENT ON COLUMN facturacion.id_nc IS 'es el id de la factura que esta ligada la nota de credito';

        CREATE TABLE facturacion_cliente
        (
          id_factura bigint NOT NULL,
          nombre character varying(130),
          rfc character varying(13),
          calle character varying(60),
          no_exterior character varying(7),
          no_interior character varying(7),
          colonia character varying(60),
          localidad character varying(45),
          municipio character varying(45),
          estado character varying(45),
          cp character varying(10),
          pais character varying(60),
          CONSTRAINT facturacion_cliente_pkey PRIMARY KEY (id_factura),
          CONSTRAINT facturacion_cliente_id_factura_fkey FOREIGN KEY (id_factura)
              REFERENCES facturacion (id_factura) MATCH SIMPLE
              ON UPDATE NO ACTION ON DELETE NO ACTION
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_cliente OWNER TO programa;

        CREATE TABLE facturacion_productos
        (
          id_factura bigint NOT NULL,
          id_clasificacion integer,
          num_row integer NOT NULL DEFAULT 0,
          cantidad real NOT NULL DEFAULT 0,
          descripcion text,
          precio_unitario double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL,
          iva real NOT NULL DEFAULT 0,
          unidad character varying(15) DEFAULT 'No aplica'::character varying,
          retencion_iva real NOT NULL DEFAULT 0,
          CONSTRAINT facturacion_productos_pkey PRIMARY KEY (id_factura, num_row),
          CONSTRAINT facturacion_productos_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
              REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT facturacion_productos_id_factura_fkey FOREIGN KEY (id_factura)
              REFERENCES facturacion (id_factura) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_productos OWNER TO programa;

        CREATE TABLE facturacion_documentos
        (
          id_factura bigint NOT NULL,
          id_documento integer NOT NULL,
          data text,
          status boolean NOT NULL DEFAULT false,
          CONSTRAINT facturacion_documentos_pkey PRIMARY KEY (id_factura, id_documento),
          CONSTRAINT facturacion_documentos_id_documento_fkey FOREIGN KEY (id_documento)
              REFERENCES rastria_documentos (id_documento) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT facturacion_documentos_id_factura_fkey FOREIGN KEY (id_factura)
              REFERENCES facturacion (id_factura) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_documentos OWNER TO programa;

        CREATE TABLE facturacion_doc_embarque
        (
          id_embarque bigserial NOT NULL,
          id_documento integer NOT NULL,
          id_factura bigint NOT NULL,
          fecha_carga timestamp with time zone,
          fecha_embarque timestamp with time zone,
          ctrl_embarque character varying(15),
          CONSTRAINT facturacion_doc_embarque_pkey PRIMARY KEY (id_embarque),
          CONSTRAINT facturacion_doc_embarque_id_documento_fkey FOREIGN KEY (id_documento)
              REFERENCES rastria_documentos (id_documento) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT facturacion_doc_embarque_id_factura_fkey FOREIGN KEY (id_factura)
              REFERENCES facturacion (id_factura) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_doc_embarque OWNER TO programa;

        CREATE TABLE facturacion_doc_embarque_pallets
        (
          id_embarque bigint NOT NULL,
          no_posicion integer NOT NULL DEFAULT 0,
          id_pallet bigint,
          marca character varying(50),
          descripcion character varying(80), -- para cuando la posicion del trailer quede sin nada o ponga otra fruta (coco, platano, etc)
          CONSTRAINT facturacion_doc_embarque_pallets_pkey PRIMARY KEY (id_embarque, no_posicion),
          CONSTRAINT facturacion_doc_embarque_pallets_id_pallet_fkey FOREIGN KEY (id_pallet)
              REFERENCES rastria_pallets (id_pallet) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE facturacion_doc_embarque_pallets OWNER TO programa;
        COMMENT ON COLUMN facturacion_doc_embarque_pallets.descripcion IS 'para cuando la posicion del trailer quede sin nada o ponga otra fruta (coco, platano, etc)';

        CREATE TABLE clientes_documentos
        (
          id_cliente bigint NOT NULL,
          id_documento integer NOT NULL,
          CONSTRAINT clientes_documentos_pkey PRIMARY KEY (id_cliente, id_documento),
          CONSTRAINT clientes_documentos_id_cliente_fkey FOREIGN KEY (id_cliente)
              REFERENCES clientes (id_cliente) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT clientes_documentos_id_documento_fkey FOREIGN KEY (id_documento)
              REFERENCES rastria_documentos (id_documento) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE clientes_documentos OWNER TO programa;

     INSERT INTO clasificaciones(id_area, nombre)
         VALUES
           (1, 'LIMON VERDE S/EXTRA (CAJA DE MADERA)'), (1, 'LIMON VERDE S/EXTRA (CAJA DE CARTON)'), (1, 'LIMON VERDE S/EXTRA (CAJA DE PLASTICO)'), (1, 'LIMON VERDE S/EXTRA (ARPILLA)'), (1, 'LIMON VERDE EXTRA (CAJA DE MADERA)'), (1, 'LIMON VERDE EXTRA (CAJA DE CARTON)'), (1, 'LIMON VERDE EXTRA (CAJA DE PLASTICO)'), (1, 'LIMON VERDE EXTRA (ARPILLA)'), (1, 'LIMON VERDE PREMIUM (CAJA DE MADERA)'), (1, 'LIMON VERDE PREMIUM (CAJA DE CARTON)'), (1, 'LIMON VERDE PREMIUM (CAJA DE PLASTICO)'), (1, 'LIMON VERDE PREMIUM (ARPILLA)'), (1, 'LIMON VERDE MIXTO (CAJA DE MADERA)'), (1, 'LIMON VERDE MIXTO (CAJA DE PLASTICO)'), (1, 'LIMON VERDE 300 (PLASTICO)'), (1, 'LIMON VERDE 300 (ARPILLA)'), (1, 'LIMON VERDE MIXTO (ARPILLA)'), (1, 'LIMON VERDE SE(CAJA MADERA 24K)'), (1, 'LIMON VERDE 4 Y 5 (CAJA MADERA 24K)'), (1, 'LIMON VERDE 400 (MADERA )'), (1, 'LIMON VERDE 400 ( PLASTICO)'), (1, 'LIMON VERDE No. 5 (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 5 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 5 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 5 (ARPILLA)'), (1, 'LIMON VERDE No. 4 (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 4 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 4 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 4 (ARPILLA)'), (1, 'LIMON VERDE No. 3 (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 3 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 3 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 3 (ARPILLA)'), (1, 'LIMON VERDE No. 2  (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 2  (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 2  (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 2  (ARPILLA)'), (1, 'LIMON VERDE ECONOMICO  (CAJA DE MADERA)'), (1, 'LIMON VERDE ECONOMICO  (CAJA DE CARTON)'), (1, 'LIMON VERDE ECONOMICO  (CAJA DE PLASTICO)'), (1, 'LIMON VERDE ECONOMICO  (ARPILLA)'), (1, 'LIMON VERDE No. 2,3 (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 2,3 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 2,3 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 2,3 (ARPILLA)'), (1, 'LIMON VERDE No. 3,4 (CAJA DE MADERA)'), (1, 'LIMON VERDE No. 3,4 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 3,4 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 3,4 (ARPILLA)'), (1, 'LIMON VERDE No. 4,5 (CAJA DE MADERA)'), (1, 'LIMON VERDE 400 ( ARPILLA )'), (1, 'LIMON VERDE No. 4,5 (CAJA DE CARTON)'), (1, 'LIMON VERDE No. 4,5 (CAJA DE PLASTICO)'), (1, 'LIMON VERDE No. 4,5 (ARPILLA)'), (1, 'LIMON VERDE BOLICON (ARPILLA)'), (1, 'LIMON VERDE CANICA ( ARPILLA )'), (1, 'LIMON VERDE 600 ( MADERA )'), (1, 'LIMON VERDE 600 ( PLASTICO)'), (1, 'LIMON VERDE ESPECIAL (CAJA DE MADERA)'), (1, 'LIMON VERDE 350 ( PLASTICO )'), (1, 'LIMON VERDE ESPECIAL (CAJA DE CARTON)'), (1, 'LIMON VERDE ESPECIAL (CAJA DE PLASTICO)'), (1, 'LIMON VERDE ESPECIAL (ARPILLA)'), (1, 'LIMON ALIMONADO 4 Y 5 (ARPILLA)'), (1, 'LIMON VERDE 500 ( MADERA )'), (1, 'LIMON ALIMONADO 400 (CAJA DE MADERA )'), (1, 'LIMON ALIMONADO 400 ( CAJA DE PLASTICO )'), (1, 'LIMON VERDE 350 ( MADERA )'), (1, 'LIMON ALIMONADO VERDE ECONOMICO ( ARPILLA )'), (1, 'LIMON VERDE 350 ( ARPILLA )'), (1, 'LIMON VERDE 300 ( MADERA )'), (1, 'ALIMONADO CLARO ECONOMICO ( ARPILLA )'), (1, 'LIMON VERDE No.600 ARPILLITA(PLASTICO_)'), (1, 'LIMON ALIMONADO MIXTO (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO MIXTO (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO MIXTO (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO MIXTO (ARPILLA)'), (1, 'LIMON ALIMONADO PREMIUM (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO PREMIUM (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO PREMIUM (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO PREMIUM (ARPILLA)'), (1, 'LIMON ALIMONADO CLARO (ARPILLA)'), (1, 'LIMON ALIMONADO VERDE (ARPILLA)'), (1, 'LIMON ALIMONADO VERDE ( CAJA DE MADERA )'), (1, 'LIMON ALIMONADO No. 5 (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO No. 5 (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO No. 5 (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO No. 5 (ARPILLA)'), (1, 'LIMON ALIMONADO No. 4 (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO No. 4 (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO No. 4 (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO No. 4 (ARPILLA)'), (1, 'LIMON ALIMONADO No. 3 (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO No. 3 (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO No. 3 (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO No. 3 (ARPILLA)'), (1, 'LIMON ALIMONADO No. 2 (CAJA DE MADERA)'), (1, 'LIMON ALIMONADO No. 2 (CAJA DE CARTON)'), (1, 'LIMON ALIMONADO No. 2 (CAJA DE PLASTICO)'), (1, 'LIMON ALIMONADO No. 2 (ARPILLA)'), (1, 'LIMON ALIMONADO ESPECIAL (MADERA))'), (1, 'LIMON ALIMONADO ECON.(ARPILLA)'), (1, 'LIMON ALIMONADO ECONOMICO NO. 2 (ARPILLA)'), (1, 'LIMON VERDE ECON No. 3 ( ARPILLA )'), (1, 'LIMON VERDE ECON. No. 4  ( ARPILLA )'), (1, 'LIMON VERDE ECON. No. 5 ( ARPILLA )'), (1, 'LIMON ALIMONADO VERDE ( PLASTICO )'), (1, 'LIMON VERDE 500 (ARPILLA)'), (1, 'LIMON AMARILLO (ARPILLA)'), (1, 'LIMON AMARILLO No. 5 (ARPILLA)'), (1, 'LIMON AMARILLO MIXTO (ARPILLA)'), (1, 'LIMON AMARILLO ECONOMICO (ARPILLA)'), (1, 'LIMON AMARILLO ECON.(ARPILLA)'), (1, 'LIMON AMARILLO VERDE (ARPILLA )'), (1, 'LIMON AMARILLO CLARO ( ARPILLA )'), (1, 'LIMON VERDE 600 (ARPILLA)'), (1, 'LIMON COLIMA PLASTICO'), (1, 'LIMON ARPILLA'), (1, 'KGS. LIMON VERDE NO. 2'), (1, 'KGS. DE LIMON INDUSTRIAL'), (1, 'KGS. DE LIMON AMARILLO INDUSTRIAL'), (1, 'BONIFICACION LIMON INDUSTRIAL (KGS)'), (1, 'KGS. DE LIMON DE SUELO'), (1, 'LIMON VERDE #3 ARPILLITA (PLASTICO)'), (1, 'LIMON VERDE #2 ARPILLITA (PLASTICO)'), (1, 'LIMON VERDE 500(PLASTICO)'), (1, 'LIMON VERDE 700 (PLASTICO)'), (1, 'KGS.LIMON VERDE 500(PLASTICO)'), (1, 'KGS LIMON VERDE 400(PLASTICO)'), (1, 'KGS LIMON VERDE 400(PLASTICO)'), (1, 'LIMON VERDE MIXTO 300 (MADERA)'), (1, 'LIMON VERDE 700(ARPILLA)'), (1, 'LIMON AMARILLO (PLASTICO)'), (1, 'LIMON VERDE 550 (PLASTICO)'), (1, 'LIMON VERDE N0. 550 ARPILLITA (PLASTICO)'), (1, 'LIMON VERDE 550 ARPILLA');


2013-07-08
  ✔ Rastreabilidad, poner boton que salga un modal y pida No de lote y un check que indique si el chofer es el nombre del productor () va a modificar la boleta pero solo esos campos nuevos (me dices para explicarte mejor) @done (13-07-08 11:25)
  ✔ Rastreabilidad, reporte como el xls que hace rosy @done (13-07-06 14:17)
  ✔ Rastreabilidad, reporte como el del ingeniero @done (13-07-07 11:41)
  ✔ Rastreabilidad, rendimiento por lote, Es registrar cuantos cajas salen por lote de las clasificaciones, se crea un cosiecutivo de lotes por dia @done (13-07-15 18:38)
  ✔ Rastreabilidad, Armado de pallets, crear pallet de una clasificacion, agregarle las cajas disponibles de esa clasificacion hasta juntar el numero de cajas indicadas, cuandos se agregan cajas en rendimiento por lote agregar esas cajas a los pallets abiertos (que aun no acompleten sus cajas) @done (13-07-15 18:38)
  ☐ Ir viendo lo de la bitacora de operaciones
  ☐ Lo de los choferes en salidas de carros para imprimir la constancia

  ✔ SQL @done (13-07-12 16:21)
    Privilegios Rastreabilidad
    "Rastreabilidad";0;TRUE;"rastreabilidad/";"bullseye";FALSE
    "Rastreabilidad del producto";61;TRUE;"rastreabilidad/rrp/";"print";TRUE
    "Reporte Entrada de Fruta";61;TRUE;"rastreabilidad/ref/";"print";FALSE
    "Pallets";61;TRUE;"rastreabilidad_pallets/";"th-large";FALSE
    "Agregar Pallets";64;TRUE;"rastreabilidad_pallets/agregar/";"plus";FALSE
    "Modificar";64;FALSE;"rastreabilidad_pallets/modificar/";"edit";FALSE
    "Rendimiento por lote";57;TRUE;"rastreabilidad/rendimiento_lote/";"bar-chart";FALSE


    CREATE OR REPLACE VIEW rastria_cajas_libres AS
     SELECT rrc.id_rendimiento, rrc.id_clasificacion, rrc.rendimiento, COALESCE(rpr.cajas, 0::bigint) AS cajas, rrc.rendimiento - COALESCE(rpr.cajas, 0::bigint) AS libres
       FROM rastria_rendimiento_clasif rrc
       LEFT JOIN ( SELECT rastria_pallets_rendimiento.id_rendimiento, rastria_pallets_rendimiento.id_clasificacion, sum(rastria_pallets_rendimiento.cajas) AS cajas
               FROM rastria_pallets_rendimiento
              GROUP BY rastria_pallets_rendimiento.id_rendimiento, rastria_pallets_rendimiento.id_clasificacion) rpr ON rrc.id_rendimiento = rpr.id_rendimiento AND rrc.id_clasificacion = rpr.id_clasificacion
      WHERE (rrc.rendimiento - COALESCE(rpr.cajas, 0::bigint)) > 0;
    ALTER TABLE rastria_cajas_libres OWNER TO programa;

    CREATE OR REPLACE VIEW rastria_pallets_lista AS
     SELECT rp.id_pallet, rp.id_clasificacion, rp.folio, date(rp.fecha) AS fecha, rp.no_cajas, rp.status, c.nombre, COALESCE(sum(rpr.cajas), 0::bigint) AS cajas, rp.no_cajas - COALESCE(sum(rpr.cajas), 0::bigint) AS cajas_faltantes
       FROM rastria_pallets rp
       LEFT JOIN rastria_pallets_rendimiento rpr ON rp.id_pallet = rpr.id_pallet
       JOIN clasificaciones c ON c.id_clasificacion = rp.id_clasificacion
      GROUP BY rp.id_pallet, rp.id_clasificacion, rp.folio, rp.fecha, rp.no_cajas, rp.status, c.nombre
      ORDER BY rp.folio;
    ALTER TABLE rastria_pallets_lista OWNER TO programa;

3013-07-04
  ✔ Checar lo de las horas de entrada y salida en los tickets y modificar la fecha @done (13-07-05 18:13)
  ✔ Fuente del ticket un poco mas grande la parte de arriba @done (13-07-05 18:13)
  ✔ Que no salga el mensaje de que el folio no existe cuando sea una pesada diferente a la de fruta @done (13-07-05 18:13)
  ✔ En el ticket las cajas que salgan en el orden como se agregaron ordenarlas por el num_registro @done (13-07-05 08:49)
  ✔ Poder agregar varias calidades del mismo tipo en un ticket para ponerle diferente precio a las cajas @done (13-07-05 08:49)
  ✔ SQL Rastriabilidad @done (13-07-11 07:45)
    Agregar campo en tabla bascula_compra
      num_registro integer NOT NULL DEFAULT 0
      eliminar y agregar el primary key con el num_registro


      CREATE TABLE rastria_rendimiento
      (
        id_rendimiento bigserial NOT NULL,
        lote integer NOT NULL DEFAULT 1,
        fecha timestamp with time zone NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT rastria_rendimiento_pkey PRIMARY KEY (id_rendimiento)
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE rastria_rendimiento OWNER TO programa;

      CREATE TABLE rastria_rendimiento_clasif
      (
        id_rendimiento bigint NOT NULL,
        id_clasificacion integer NOT NULL,
        existente integer NOT NULL DEFAULT 0,
        linea1 integer NOT NULL DEFAULT 0,
        linea2 integer NOT NULL DEFAULT 0,
        total integer NOT NULL DEFAULT 0,
        rendimiento integer NOT NULL DEFAULT 0,
        CONSTRAINT rastria_rendimiento_clasif_pkey PRIMARY KEY (id_rendimiento, id_clasificacion),
        CONSTRAINT rastria_rendimiento_clasif_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
            REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT rastria_rendimiento_clasif_id_rendimiento_fkey FOREIGN KEY (id_rendimiento)
            REFERENCES rastria_rendimiento (id_rendimiento) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE rastria_rendimiento_clasif OWNER TO programa;

      CREATE TABLE rastria_pallets
      (
        id_pallet bigserial NOT NULL,
        id_clasificacion integer NOT NULL,
        id_cliente bigint,
        folio bigint NOT NULL,
        fecha timestamp with time zone NOT NULL DEFAULT now(),
        no_cajas integer NOT NULL DEFAULT 0,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT rastria_pallets_pkey PRIMARY KEY (id_pallet),
        CONSTRAINT rastria_pallets_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
            REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE rastria_pallets OWNER TO programa;

      CREATE TABLE rastria_pallets_rendimiento
      (
        id_pallet bigint NOT NULL,
        id_rendimiento bigint NOT NULL,
        id_clasificacion integer NOT NULL,
        fecha timestamp with time zone NOT NULL DEFAULT now(),
        cajas integer NOT NULL DEFAULT 0,
        CONSTRAINT rastria_pallets_rendimiento_pkey PRIMARY KEY (id_pallet, id_rendimiento, id_clasificacion),
        CONSTRAINT rastria_pallets_rendimiento_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
            REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT rastria_pallets_rendimiento_id_pallet_fkey FOREIGN KEY (id_pallet)
            REFERENCES rastria_pallets (id_pallet) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT rastria_pallets_rendimiento_id_rendimiento_fkey FOREIGN KEY (id_rendimiento)
            REFERENCES rastria_rendimiento (id_rendimiento) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE rastria_pallets_rendimiento OWNER TO programa;


2013-07-02
  ✔ Al calcular los kilos que no ponga decimales que se trunken @done (13-07-02 12:37)
  ✔ Poner un boton de tara para que cargue los kilos de tara (como si fuera el alt+t), en la parte de arriba, que salga solo cuando se captura el tara @done (13-07-02 17:50)
  ✔ Al modificar desde el listado que los kilos brutos y kilos tara no tengan los eventos de obtener los kilos y que en kilos brutos al perder el foco no se envie el formulario @done (13-07-02 17:57)
  ✔ folios de las boletas que puedan dejar libres que no siempre sea el consecutivo pero si validar que no se repitan -- @done (13-07-02 16:39)
  ✔ poner el boton de imprimir en la parte de abajo tambien @done (13-07-02 17:59)
  ✔ en el input de cajas prestadas si se pone . y se da guardar marca error @done (13-07-02 18:00)
  ✔ Por cada area manejan un folio diferente y si es entrada o salida tambien (preguntar) -- @done (13-07-02 17:38)
  ✔ Poder modificar el precio directamente en la tabla de cajas agregadas @done (13-07-02 18:39)
  ☐ que no deje agregar choferes si el nombre es igual
  ✔ cambiar el logo @done (13-07-02 09:21)

  ✔ SQL @done (13-07-11 07:47)
    Agregar campos en tabla bascula
    no_lote integer, -- numero de lote para rastreabilidad
    chofer_es_productor boolean NOT NULL DEFAULT false, -- Rastreabilidad; si es true el chofer es el nombre de productor, si es false es nombre de chofer


2013-06-28
 ✔ El orden de los saltos con el enter Tipo->Area->folio->Fecha->Proveedor/Cliente->Camion->Chofer->K. Bruto/Tara->Cajas prestadas->Cajas y saltar en las input de las cajas agregadas @done (13-06-28 14:20)
 ✔ Usar Esc para nueva pesada @done (13-06-28 14:20)
 ✔ Quitar todos los signos de peso en el ticket al imprimir @done (13-06-28 14:20)
 ✔ Agregarle soperte para el teclado numerico del bloqnum @done (13-06-28 14:20)
 ✔ Al picarle al boton de guardar que mande un modal de si quiere pagar la boleta si le da q si que se guarde la boleta directamente y que no mande a imprimir cuando se pague @done (13-06-28 14:20)
 ✔ Guardar la boleta en cuento se capture peso bruto @done (13-06-28 14:20)
 ✔ Guardar la boleta cuando se mande a imprimir @done (13-06-28 14:20)
 ✔ Que cargue otra boleta cuando le den enter sobre el folio siempre y cuando sea diferente a la actual, si no cambia que no cargue nada. @done (13-06-28 14:22)

2013-06-21
  ✔ Empresas poner una por default, agregar campo en la tabla empresa para poner por default, en bascula ponerla por default @done (13-06-23 11:35)
  ✔ En los enters tome en cuenta la fecha @done (13-06-23 11:38)
  ✔ Para kilos bruto y tara al tomar el foco que cargue el peso, si es nueva habilitar los brutos, si es modificar q habilite el tara, en la seccion modificar del listado pueden editar todo. @done (13-06-23 12:19)
  ✔ Agregar input para pedir numero de cajas, esas cajas se restan al total de kilos (2kg x caja) @done (13-06-23 14:21)
  ✔ Poner al inicio donde esta el de nueva pesada; Cancelar, imprimir (alt+p), Guardar, Nueva pesada @done (13-06-23 14:03)
  ✔ Editar el peso promedio de las cajas agregadas como en la hoja @done (13-06-23 16:22)
  ✔ Bonificaciones, pedir folio del ticket y cargar los datos en una pesada nueva, en las cajas es editable el precio, y poner por default 0, agregar campo id_bonificacion para relacionar la con el ticket padre @done (13-06-24 14:12)
  ✔ Reporte de pesadas del dia agrupadas por calidad, como las hojas @done (13-06-25 20:35)
  ☐ Modulo para pagar pesadas de forma masiva, un rango de fechas, proveedor, carga las pesadas no pagadas, podria pagar con metodo de pago, concepto, monto
  ✔ Si pongo cajas prestadas no se guardan, si modifico el promedio de las familias agregadas lo hace bien pero el total pone el valor de la ultima calidad agregada tiene que ser la suma de los importes @done (13-06-25 20:35)
  ✔ Ponerles las legendas (alt+p, alt+g, alt+n, etc) dentro de los botones @done (13-06-25 20:35)
  ☐ Las cajas de texto de promedio si dan enter que salte a la siguiente caja, que no se mande el form
  ✔ De bonificacion creo q no nos entendimos, yo decia los quilos del promedio no los kilos del bruto, tara, neto, cajas esos no q esten bloqueados @done (13-06-25 20:35)
  ✔ bonificacion poner un boton de nueva pesada que regrese a agregar pesada (alt+n), @done (13-06-25 20:35)
  ✔ bonificacion las pones como pagadas verdad, eso que lo puedan elejir, por q alomejor no lo pagan en efectivo, sino con trasferencia o cheque y eso es con el otro modulo, y que las puedan modificar desde el listado como cualquier pesada. @done (13-06-25 20:35)
  ✔ bonificacion Te comente que cuando se ponga 0 o nada en el precio de las calidades esas no se agreguen a bascula_compra solo las que tengan un valor, deje en blanco 1 y trono, veo que intentas insertar la que no le puse nada, que no la inserte @done (13-06-25 20:35)
        Message: Illegal string offset 'server'
        Filename: postgre/postgre_driver.php
        Line Number: 331
        ERROR: la sintaxis de entrada no es válida para tipo double precision: «» LINE 1: ...14','2','350.00','700','.5','35'), ('30','14','1','','800','... ^
        INSERT INTO "bascula_compra" ("cajas", "id_bascula", "id_calidad", "importe", "kilos", "precio", "promedio") VALUES ('20','14','2','350.00','700','.5','35'), ('30','14','1','','800','0','26.67')
   ✔ Bonificaciones se guardan los kilos de la pesada anterior, que sea los que sumen en el listado @done (13-06-26 09:45)
   ✔ Reporte quedaron visibles los campos de los id autocomplete, pone muchos decimales usara la funcion formato numero @done (13-06-26 09:45)


  ☐ Sql
    - Agregar campo en tabla empresas:
          predeterminado boolean NOT NULL DEFAULT false
    -Agregar campo en trabla bascula
          id_bonificacion bigint
    -Agregar campo en tabla bascula
          cajas_prestadas integer
    -TABLAS PARA LOS PAGOS DE LAS PESADAS
          -- DROP TABLE bascula_pagos;

            CREATE TABLE bascula_pagos
            (
              id_pago bigserial NOT NULL,
              tipo_pago character varying(20) NOT NULL,
              monto double precision NOT NULL,
              concepto character varying(254),
              status boolean NOT NULL DEFAULT true,
              CONSTRAINT bascula_pagos_pkey PRIMARY KEY (id_pago)
            )
            WITH (
              OIDS=FALSE
            );
            ALTER TABLE bascula_pagos
            OWNER TO programa;


          CREATE TABLE bascula_pagos_basculas
          (
            id_pago bigint NOT NULL,
            id_bascula bigint NOT NULL,
            CONSTRAINT bascula_pagos_basculas_pkey PRIMARY KEY (id_pago, id_bascula),
            CONSTRAINT bascula_pagos_basculas_id_bascula_fkey FOREIGN KEY (id_bascula)
                REFERENCES bascula (id_bascula) MATCH SIMPLE
                ON UPDATE CASCADE ON DELETE CASCADE,
            CONSTRAINT bascula_pagos_basculas_id_pago_fkey FOREIGN KEY (id_pago)
                REFERENCES bascula_pagos (id_pago) MATCH SIMPLE
                ON UPDATE CASCADE ON DELETE CASCADE
          )
          WITH (
            OIDS=FALSE
          );
          ALTER TABLE bascula_pagos_basculas
            OWNER TO programa;

	-

   - Nuevos Privilegios
         nombre: Bonificacion
         url: bascula/bonificacion/
         ico: money
         Padre: bascula
       -----------------------
        Nombre: Reporte Diario de Entradas
        Url accion: bascula/rde/
        icono: print
        Mostrar menu: si
        Target blank: si
        Padre: bascula
       -----------------------
        Nombre: Reporte Acumulados de Productos
        Url accion: bascula/r_acumulados/
        icono: print
        Mostrar menu: si
        Target blank: si
        Padre: bascula
	   ----------------------- 26-06-2013
       Nombre: Modificar
        Url accion: bascula/modificar_bonificacion/
        icono: edit
        Mostrar menu: no
        Target blank: no
        ---------------------- 26-06-2013
        Nombre: Movimientos de Cuenta
        Url accion: bascula/movimientos/
        icono: exchange
        Mostrar menu: si
        Target blank: si
        Padre: bascula
        ---------------------- 26-06-2013
        Nombre: Pagos Pesadas
        Url accion: bascula/pago_basculas/
        icono: usd
        Mostrar menu: no
        Target blank: no
        Padre: bascula




Detalles Bascula:
 ✔ Al entrar que el foco este en Empresas @done (13-06-18 16:53)
 ✔ los autocomplete no se ponen verdes cuando se selecciona uno @done (13-06-18 16:57)
 ✔ Texto "finalizar operacion" cambiarlo por "Pagar" @done (13-06-18 16:52)
 ✔ En las cajas el select de la calidad, creo q el evento q tiene asignado es el click, cambiarle por "change" o el que se ocupe, el chiste q cuando muevan el select con las flechas cambie el precio del seleccionado; en la casilla  de precio si preciono enter no se agrega a la lista, que se agregue @done (13-06-18 17:00)
 ✔ Los kilos netos me deja modificarlos, que este en read only tanto en agregar como en modificar @done (13-06-18 15:59)
 ✔ En el ticket donde dice "cuenta" abajo tiene que ir el nombre del proveedor o cliente, despues de la fecha de expedicion, ponerle el tipo: Entrada, Salida @done (13-06-18 15:59)
 ✔ autocomplets que sean como bichi que cambien de color y si borran no se limpie toda la caja (pero que si borre el id) @done (13-06-11 21:08)
 ✔ si le doy cargar con un folio que no existe, pone errores @done (13-06-11 21:08)
 ✔ cuando cargo un folio, ya no pone las calidades para agregar mas cajas @done (13-06-11 21:15)
 ✔ ponerle un boton de nueva pesada, por q cuando cargo una, le tengo que dar en agregar pesada en el menu, se van a pendejar las morras @done (13-06-11 21:18)
 ✔ en modificar pesada cuando le doy guardar se pone todo bloqueado, no hay q bloquear @done (13-06-11 21:27)
 ✔ en modificar pesada, en cuanto entras a alguna no pone las calidades para agregar cajas @done (13-06-11 21:27)
 ✔ en modificar pesada, no modifica las cosas, solo las cajas que quito o agrego; empresa, proveedor, chofer, camion, kilos bruto, tara y netos se se cambian, tampoco se recalculan los valores en la tabla de kilos y promedio para sacar el importe @done (13-06-11 22:47)
 ✔ en modificar pesada, si cargo otra pesada y esta finalizada se pone todo bloqueado @done (13-06-11 22:18)
 ✔ en el listado de pesadas, al entrar pone los cancelados, que no los ponga solo los activos @done (13-06-11 21:42)


Cambis BD:
  ☐ Privilegios
     ✔ 2013-06-18 @done (13-06-19 09:47)
       -Crear usuario en la pc de la bascula para conectarse, configurar en el servidor los datos de mysql del pc de la bascula
       -Agregar campo "predeterminado boolean NOT NULL DEFAULT false" en tabla areas
       -El campo "id_camion y id_chofer" de bascula quitarle el not null

     *2013-06-03
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Bascula', 0, true, 'bascula/', 'road', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Agregar', 40, true, 'bascula/agregar/', 'plus', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Modificar', 40, false, 'bascula/modificar/', 'edit', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Cancelar', 40, false, 'bascula/cancelar/', 'ban-circle', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Imprimir', 40, false, 'bascula/imprimir/', 'print', false);
      COMMENT ON COLUMN clasificaciones.precio_venta IS 'NO USADO';
      COMMENT ON COLUMN clasificaciones.cuenta_cpi IS 'NO USADO, cuenta afectable del contpaqi';
      COMMENT ON COLUMN bascula.accion IS 'en:entrada, sa:salida, f:finalisado';
      COMMENT ON COLUMN bascula.tipo IS 'en:entrada, sa:salida';
      COMMENT ON COLUMN bascula_fotos.tipo IS 'en:entrada; sa:salida, ch:chofer';

      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Empresas', 0, true, 'empresas/', 'group', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Agregar empresa', 45, true, 'empresas/agregar/', 'plus', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Modificar', 45, false, 'empresas/modificar/', 'edit', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Eliminar', 45, false, 'empresas/eliminar/', 'remove', false);
      INSERT INTO privilegios (nombre, id_padre, mostrar_menu, url_accion, url_icono, target_blank) VALUES ('Activar', 45, false, 'empresas/activar/', 'ok', false);

      CREATE TABLE empresas_fiscal
      (
        id_fiscal serial NOT NULL,
        id_empresa integer NOT NULL,
        "version" character varying(5),
        path_cer_org character varying(90),
        path_cer character varying(90),
        path_key character varying(90),
        pass_key character varying(20),
        CONSTRAINT empresas_fiscal_pkey PRIMARY KEY (id_fiscal),
        CONSTRAINT empresas_fiscal_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE empresas_fiscal OWNER TO programa;

      CREATE TABLE clientes
      (
        id_cliente bigserial NOT NULL,
        nombre_fiscal character varying(140) NOT NULL,
        calle character varying(60),
        no_exterior character varying(7),
        no_interior character varying(7),
        colonia character varying(60),
        localidad character varying(45),
        municipio character varying(45),
        estado character varying(45),
        pais character varying(25),
        cp character varying(10),
        telefono character varying(15),
        celular character varying(20),
        email character varying(70),
        pag_web character varying(80),
        status character varying(15) DEFAULT 'ac'::character varying, -- Corresponde al status ac:activo o e:eliminado
        cuenta_cpi character varying(12), -- cuenta afectable del contpaqi
        rfc character varying(20),
        curp character varying(35),
        CONSTRAINT clientes_pkey PRIMARY KEY (id_cliente)
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE clientes OWNER TO programa;
      COMMENT ON COLUMN clientes.status IS 'Corresponde al status ac:activo o e:eliminado';
      COMMENT ON COLUMN clientes.cuenta_cpi IS 'cuenta afectable del contpaqi';

      ejecutar el archivo inserts_clientes.sql