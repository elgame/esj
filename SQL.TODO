
 ✔ Bodega gdl @done (16-09-30 11:33)
   ALTER TABLE public.facturacion_series_folios ADD COLUMN default_serie boolean NOT NULL DEFAULT false;
   ALTER TABLE public.facturacion ADD COLUMN no_impresiones_tk integer NOT NULL DEFAULT 0;
 ✔ Entrega de fruta @done (16-09-30 11:33)
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_bascula bigint;
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_recibe bigint;

 ✔ No impreciones boleta recepcion @done (16-09-22 11:05)
   ALTER TABLE public.bascula ADD COLUMN no_imp_recepcion smallint NOT NULL DEFAULT 0;
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('BanCoppel','ac','137');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Inbursa','ac','36');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Bajio','ac','30');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Afirme','ac','62');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Azteca','ac','127');
   ALTER TABLE public.facturacion_productos ADD COLUMN unidad_c real;
   update facturacion_productos AS fp set unidad_c = sq.cantidad FROM (SELECT id_unidad, cantidad FROM unidades where cantidad > 0) AS sq WHERE fp.id_unidad = sq.id_unidad;
   ALTER TABLE compras_salidas_labores ADD COLUMN costo double precision NOT NULL DEFAULT 0;


 ✔ Caja bodega guadalajara @done (16-07-26 09:53)
   ALTER TABLE otros.bodega_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE otros.bodega_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE otros.bodega_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;

 ✔ Productos especiales en facturacion y reporte de cuentas x pagar @done (16-07-21 14:06)
   ALTER TABLE facturacion_seg_cert ADD COLUMN num_operacion character varying(30);
   ALTER TABLE facturacion_seg_cert ADD COLUMN nrow integer NOT NULL DEFAULT 0;
   ALTER TABLE facturacion_seg_cert DROP CONSTRAINT facturacion_seg_cert_pkey;
   ALTER TABLE facturacion_seg_cert ADD CONSTRAINT facturacion_seg_cert_pkey PRIMARY KEY(id_factura, id_clasificacion, nrow);

 ✔ Comercio exterior @done (16-07-17 10:45)
   ALTER TABLE public.facturacion_productos ADD COLUMN no_identificacion character varying(50);
   CREATE TABLE public.facturacion_ce
      (
        id bigserial NOT NULL,
        id_factura bigint NOT NULL,
        version character varying(5) NOT NULL,
        tipo_operacion character varying(5) NOT NULL,
        clave_pedimento character varying(5),
        certificado_origen character varying(5),
        num_certificado_origen character varying(40),
        numero_exportador_confiable character varying(50),
        incoterm character varying(5),
        subdivision character varying(5),
        observaciones character varying(300),
        "tipocambio_USD" double precision NOT NULL DEFAULT (0)::double precision,
        "total_USD" double precision NOT NULL DEFAULT (0)::double precision,
        emisor_curp character varying(18),
        receptor_numregidtrib character varying(40),
        receptor_curp character varying(18),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_pkey PRIMARY KEY (id),
        CONSTRAINT facturacion_ce_factura_id_foreign FOREIGN KEY (id_factura)
            REFERENCES public.facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce TO programa;

      CREATE TABLE public.facturacion_ce_destinatario
      (
        comercio_exterior_id bigint NOT NULL,
        numregidtrib character varying(40),
        rfc character varying(15),
        curp character varying(18),
        nombre character varying(300),
        calle character varying(100) NOT NULL,
        numero_exterior character varying(55),
        numero_interior character varying(55),
        colonia character varying(120),
        localidad character varying(120),
        referencia character varying(250) NOT NULL DEFAULT '0'::character varying,
        municipio character varying(120) NOT NULL DEFAULT '0'::character varying,
        estado character varying(30) NOT NULL,
        pais character varying(10),
        codigo_postal character varying(12),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_destinatario_pkey PRIMARY KEY (comercio_exterior_id),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_destinatario
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_destinatario TO programa;

      CREATE TABLE public.facturacion_ce_mercancias
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        noidentificacion character varying(100) NOT NULL,
        fraccionar_ancelaria character varying(20),
        cantidad_aduana double precision,
        unidad_aduana character varying(10),
        valor_unitario_aduana double precision,
        valor_dolares double precision NOT NULL,
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_pkey PRIMARY KEY (comercio_exterior_id, "row"),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_mercancias TO programa;

      CREATE TABLE public.facturacion_ce_mercancias_esp
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        row2 integer NOT NULL,
        marca character varying(35) NOT NULL,
        modelo character varying(80),
        submodelo double precision,
        numeroserie character varying(40),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_esp_pkey PRIMARY KEY (comercio_exterior_id, "row", row2),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias_esp
        OWNER TO programa;

 ✔ Privilegio modificar kilos @done (16-07-17 10:45)
  INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar kilos bruto y tara',70,FALSE,'bascula/modificar_kilosbt/','pencil',FALSE);

 ✔ Usuario y fecha de creacion en los gastos y abonos de cajas chica @done (16-07-04 16:05)
   ALTER TABLE public.cajachica_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_remisiones ADD CONSTRAINT cajachica_remisiones_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Reporte de productos facturados 2 con los datos de calidad, tamaño @done (16-06-23 10:19)
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Productos Facturados con Kilos',362,TRUE,'facturacion/prodfact2/','print',TRUE);

 ✔ SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE state = 'idle' AND state_change < current_timestamp - INTERVAL '15' MINUTE; @done (16-06-09 22:26)
   update clientes set metodo_pago = '98' where lower(trim(metodo_pago)) = 'no identificado';
   update clientes set metodo_pago = '03' where lower(trim(metodo_pago)) = 'transferencia';

 ✔ INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Calidades Ventas', 15, FALSE, 'areas_otros/calidades/', 'list', FALSE); @done (16-04-30 10:44)
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar calidad', 431, FALSE, 'areas_otros/agregar_calidad/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 431, FALSE, 'areas_otros/activar_calidad/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 431, FALSE, 'areas_otros/modificar_calidad/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 431, FALSE, 'areas_otros/eliminar_calidad/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Tamaños Ventas', 15, FALSE, 'areas_otros/tamanos/', 'list', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar tamaño', 436, FALSE, 'areas_otros/agregar_tamano/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 436, FALSE, 'areas_otros/activar_tamano/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 436, FALSE, 'areas_otros/modificar_tamano/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 436, FALSE, 'areas_otros/eliminar_tamano/', 'remove', FALSE);

    CREATE TABLE otros.areas_calidades
      (
        id_calidad bigserial NOT NULL,
        id_area integer NOT NULL,
        status boolean NOT NULL DEFAULT true,
        nombre character varying(20) NOT NULL,
        CONSTRAINT areas_calidades_pkey PRIMARY KEY (id_calidad),
        CONSTRAINT areas_calidades_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_calidades
        OWNER TO programa;
    CREATE TABLE otros.areas_tamanios
      (
        id_tamanio bigserial NOT NULL,
        id_area integer NOT NULL,
        nombre character varying(30) NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT areas_tamanios_pkey PRIMARY KEY (id_tamanio),
        CONSTRAINT areas_tamanios_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_tamanios
        OWNER TO programa;
    ALTER TABLE facturacion_productos ADD COLUMN id_calidad bigint;
    ALTER TABLE facturacion_productos ADD COLUMN id_tamanio bigint;
    ALTER TABLE facturacion_productos ADD COLUMN descripcion2 character varying(200);
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_calidad_fkey FOREIGN KEY (id_calidad)
      REFERENCES otros.areas_calidades (id_calidad) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_tamanio_fkey FOREIGN KEY (id_tamanio)
      REFERENCES otros.areas_tamanios (id_tamanio) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;


 ✔ ALTER TABLE facturacion ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0; @done (16-03-31 13:28)
   ALTER TABLE cajachica_remisiones ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_remisiones ALTER COLUMN "row" TYPE bigint;
   ALTER TABLE cajachica_remisiones ADD COLUMN folio bigint;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Control de acceso', 0, TRUE, 'control_acceso/', 'resize-horizontal', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrada y Salida', 427, TRUE, 'control_acceso/entrada_salida/', 'plus', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 427, FALSE, 'control_acceso/modificar/', 'edit', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Remision y/o factura', 70, FALSE, 'documentos/remision_factura/', 'copy', FALSE);

   UPDATE rastria_documentos SET orden=orden+1;
   INSERT INTO rastria_documentos(nombre, url_form, url_print, status, orden) VALUES ('REMISION Y/O FACTURA', 'panel/documentos/remision_factura', '', TRUE, 1);
   CREATE OR REPLACE VIEW embarque_pallets_libres AS
       SELECT rp.id_pallet,
          rp.no_cajas,
          rp.kilos_pallet,
          string_agg(clasi.nombre::text, ', '::text) AS clasificaciones,
          rp.folio,
          cali.calibres,
          ( SELECT string_agg(etiq.nombre::text, ', '::text) AS etiquetas
                 FROM rastria_pallets rp2
                   JOIN ( SELECT rpr.id_pallet,
                          et.nombre
                         FROM rastria_pallets_rendimiento rpr
                           JOIN etiquetas et ON rpr.id_etiqueta = et.id_etiqueta
                        GROUP BY rpr.id_pallet, rpr.id_etiqueta, et.nombre
                        ORDER BY rpr.id_pallet) etiq ON etiq.id_pallet = rp2.id_pallet
                WHERE etiq.id_pallet = rp.id_pallet) AS etiquetas,
          rp.fecha
         FROM rastria_pallets rp
           LEFT JOIN facturacion_doc_embarque_pallets fdp ON fdp.id_pallet = rp.id_pallet
           JOIN ( SELECT rpr.id_pallet,
                  cl.nombre
                 FROM rastria_pallets_rendimiento rpr
                   JOIN clasificaciones cl ON rpr.id_clasificacion = cl.id_clasificacion
                GROUP BY rpr.id_pallet, rpr.id_clasificacion, cl.nombre
                ORDER BY rpr.id_pallet) clasi ON clasi.id_pallet = rp.id_pallet
           LEFT JOIN ( SELECT rpc.id_pallet,
                  string_agg(cal.nombre::text, ', '::text) AS calibres
                 FROM rastria_pallets_calibres rpc
                   JOIN calibres cal ON rpc.id_calibre = cal.id_calibre
                GROUP BY rpc.id_pallet
                ORDER BY rpc.id_pallet) cali ON cali.id_pallet = rp.id_pallet
        WHERE fdp.id_embarque IS NULL
        GROUP BY rp.id_pallet, rp.no_cajas, rp.folio, cali.calibres, rp.kilos_pallet
        ORDER BY rp.id_pallet DESC;
        ALTER TABLE embarque_pallets_libres
          OWNER TO programa;
        COMMENT ON VIEW embarque_pallets_libres
          IS 'Muestra los pallets que no han sido colocados en embarque.';
   CREATE TABLE otros.vales_salida
      (
        id_vale_salida bigserial NOT NULL,
        tipo character varying(20) NOT NULL, -- venta,
        id_remision bigint, -- id de la remision para salidas tipo venta
        folio bigint NOT NULL,
        id_autoriza bigint, -- id del usaurio que registro el vale
        fecha timestamp with time zone NOT NULL DEFAULT now(),
        no_impresiones integer NOT NULL DEFAULT 0,
        CONSTRAINT vales_salida_pkey PRIMARY KEY (id_vale_salida),
        CONSTRAINT vales_salida_id_autoriza_fkey FOREIGN KEY (id_autoriza)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT vales_salida_id_remision_fkey FOREIGN KEY (id_remision)
            REFERENCES facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.vales_salida
        OWNER TO programa;
      COMMENT ON COLUMN otros.vales_salida.tipo IS 'venta, ';
      COMMENT ON COLUMN otros.vales_salida.id_remision IS 'id de la remision para salidas tipo venta';
      COMMENT ON COLUMN otros.vales_salida.id_autoriza IS 'id del usaurio que registro el vale';
   CREATE TABLE otros.control_acceso
      (
        id_control bigserial NOT NULL,
        id_usaurio_ent bigint NOT NULL,
        id_usuario_sal bigint,
        id_vale_salida bigint,
        nombre character varying(200) NOT NULL,
        asunto character varying(200) NOT NULL,
        departamento character varying(60) NOT NULL,
        placas character varying(15) NOT NULL,
        fecha_entrada timestamp with time zone NOT NULL DEFAULT now(),
        fecha_salida timestamp with time zone,
        CONSTRAINT control_acceso_pkey PRIMARY KEY (id_control),
        CONSTRAINT control_acceso_id_usaurio_ent_fkey FOREIGN KEY (id_usaurio_ent)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_usuario_sal_fkey FOREIGN KEY (id_usuario_sal)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_vale_salida_fkey FOREIGN KEY (id_vale_salida)
            REFERENCES otros.vales_salida (id_vale_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.control_acceso
        OWNER TO programa;


 ✔ Trabajo agricola @done (16-03-17 10:23)
    CREATE TABLE otros.trabajo_agricola
    (
      id_trabajo_agricola bigserial NOT NULL,
      id_empresa integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_cod_vehiculo bigint, -- vehiculo del catalogo de codigos
      id_operador bigint, -- id del chofer operador
      horometro_ini double precision DEFAULT 0,
      horometro_fin double precision DEFAULT 0,
      horometro_total double precision DEFAULT 0,
      hora_ini time with time zone,
      hora_fin time with time zone,
      total_hrs time with time zone,
      CONSTRAINT trabajo_agricola_pkey PRIMARY KEY (id_trabajo_agricola),
      CONSTRAINT trabajo_agricola_id_cat_cod_vehiculo_fkey FOREIGN KEY (id_cat_cod_vehiculo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_operador_fkey FOREIGN KEY (id_operador)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola
      OWNER TO programa;
    COMMENT ON COLUMN otros.trabajo_agricola.id_cat_cod_vehiculo IS 'vehiculo del catalogo de codigos';
    COMMENT ON COLUMN otros.trabajo_agricola.id_operador IS 'id del chofer operador';

    CREATE TABLE otros.trabajo_agricola_labores
    (
      id_trabajo_agricola bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_labor integer NOT NULL,
      id_centro_costo bigint NOT NULL,
      hora_ini time with time zone NOT NULL,
      CONSTRAINT trabajo_agricola_labores_pkey PRIMARY KEY (id_trabajo_agricola, "row"),
      CONSTRAINT trabajo_agricola_labores_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_labor_fkey FOREIGN KEY (id_labor)
          REFERENCES compras_salidas_labores (id_labor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_trabajo_agricola_fkey FOREIGN KEY (id_trabajo_agricola)
          REFERENCES otros.trabajo_agricola (id_trabajo_agricola) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola_labores
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Trabajo agricola',0,TRUE,'btrabajo_agricola/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',423,TRUE,'btrabajo_agricola/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',423,FALSE,'btrabajo_agricola/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',423,FALSE,'btrabajo_agricola/printEntrada/','print',FALSE);

 ✔ Entrega de fruta @done (16-03-17 10:16)
    CREATE TABLE otros.entrega_fruta
    (
      id_entrega_fruta bigserial NOT NULL,
      id_area integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_codigos_rnch bigint, -- rancho del catalogo de codigos
      id_vehiculo bigint,
      id_usuario bigint, -- id del chofer
      no character varying(10), -- No melga / No seccion
      id_encargado bigint, -- encargado
      total double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_pkey PRIMARY KEY (id_entrega_fruta),
      CONSTRAINT entrega_fruta_id_area_fkey FOREIGN KEY (id_area)
          REFERENCES areas (id_area) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_cat_codigos_rnch_fkey FOREIGN KEY (id_cat_codigos_rnch)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_encargado_fkey FOREIGN KEY (id_encargado)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_vehiculo_fkey FOREIGN KEY (id_vehiculo)
          REFERENCES compras_vehiculos (id_vehiculo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta
      OWNER TO programa;
    COMMENT ON COLUMN otros.entrega_fruta.id_cat_codigos_rnch IS 'rancho del catalogo de codigos';
    COMMENT ON COLUMN otros.entrega_fruta.id_usuario IS 'id del chofer';
    COMMENT ON COLUMN otros.entrega_fruta.no IS 'No melga / No seccion';
    COMMENT ON COLUMN otros.entrega_fruta.id_encargado IS 'encargado';

    CREATE TABLE otros.entrega_fruta_cantidad
    (
      id_entrega_fruta bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_clasificacion integer,
      piso double precision DEFAULT 0,
      estibas double precision DEFAULT 0,
      altura character varying(30),
      cantidad double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_cantidad_pkey PRIMARY KEY (id_entrega_fruta, "row"),
      CONSTRAINT entrega_fruta_cantidad_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_cantidad_id_entrega_fruta_fkey FOREIGN KEY (id_entrega_fruta)
          REFERENCES otros.entrega_fruta (id_entrega_fruta) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta_cantidad
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrega de Fruta',0,TRUE,'entrega_fruta/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',419,TRUE,'entrega_fruta/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',419,FALSE,'entrega_fruta/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',419,FALSE,'entrega_fruta/printEntrada/','print',FALSE);

 ✔ Bascula Snapshot @done (16-03-03 11:37)
   ALTER TABLE bascula_fotos DROP CONSTRAINT bascula_fotos_pkey;
   ALTER TABLE bascula_fotos ADD CONSTRAINT bascula_fotos_pkey PRIMARY KEY(id_bascula, no_camara, tipo);

 ✔ Contrarecibos @done (16-02-19 19:17)
    CREATE TABLE otros.contrarecibos
    (
      id_contrarecibo bigserial NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      folio bigint NOT NULL,
      id_proveedor bigint NOT NULL,
      total double precision NOT NULL DEFAULT 0,
      status boolean NOT NULL DEFAULT true,
      id_empresa integer NOT NULL,
      id_usuario bigint,
      CONSTRAINT contrarecibos_pkey PRIMARY KEY (id_contrarecibo),
      CONSTRAINT contrarecibos_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_proveedor_fkey FOREIGN KEY (id_proveedor)
          REFERENCES proveedores (id_proveedor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos
      OWNER TO programa;

    CREATE TABLE otros.contrarecibos_facturas
    (
      id_contrarecibo bigint NOT NULL,
      norow integer NOT NULL DEFAULT 0,
      folio character varying(15) NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      importe double precision NOT NULL DEFAULT 0,
      observacion character varying(200),
      CONSTRAINT contrarecibos_facturas_pkey PRIMARY KEY (id_contrarecibo, norow),
      CONSTRAINT contrarecibos_facturas_id_contrarecibo_fkey FOREIGN KEY (id_contrarecibo)
          REFERENCES otros.contrarecibos (id_contrarecibo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos_facturas
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Contrarecibos', 149, TRUE, 'contrarecibo/', 'th-large', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar contrarecibo', 414, TRUE, 'contrarecibo/agregar/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 414, FALSE, 'contrarecibo/modificar/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar', 414, FALSE, 'contrarecibo/cancelar/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir', 414, FALSE, 'contrarecibo/imprimir/', 'print', FALSE);
