
 ☐ Cambios en recetas
   -- lap|san
   ALTER TABLE IF EXISTS otros.recetas ADD COLUMN a_volumen character varying(50) COLLATE pg_catalog."default";

 ☐ Apartado de plasticos, produccion, ventas, inventarios, etc
 -- lap
   CREATE TABLE IF NOT EXISTS otros.pg_moldes
    (
        id_molde bigserial NOT NULL,
        nombre character varying(120) COLLATE pg_catalog."default" NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT pg_moldes_pkey PRIMARY KEY (id_molde)
    )
    TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_moldes OWNER to programa;
   CREATE TABLE IF NOT EXISTS otros.pg_maquinas
    (
        id_maquina bigserial NOT NULL,
        nombre character varying(120) COLLATE pg_catalog."default" NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT pg_maquinas_pkey PRIMARY KEY (id_maquina)
    )
    TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_maquinas OWNER to programa;
   CREATE TABLE IF NOT EXISTS otros.pg_grupos
    (
        id_grupo serial NOT NULL,
        nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT pg_grupos_pkey PRIMARY KEY (id_grupo)
    )
    TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_grupos OWNER to programa;
   CREATE TABLE IF NOT EXISTS otros.pg_produccion
    (
        id_produccion bigserial NOT NULL,
        id_empresa integer NOT NULL,
        id_sucursal integer,
        id_maquina bigint NOT NULL,
        id_molde bigint NOT NULL,
        id_grupo integer NOT NULL,
        id_registro bigint NOT NULL,
        id_jefe_turno bigint NOT NULL,
        folio bigint NOT NULL,
        turno integer NOT NULL,
        fecha date NOT NULL,
        cajas_buenas integer NOT NULL DEFAULT 0,
        cajas_merma integer NOT NULL DEFAULT 0,
        cajas_total bigint NOT NULL DEFAULT 0,
        plasta_kg double precision NOT NULL DEFAULT 0,
        inyectado_kg double precision NOT NULL DEFAULT 0,
        peso_prom double precision NOT NULL DEFAULT 0,
        fecha_creada timestamp without time zone NOT NULL DEFAULT now(),
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT pg_produccion_pkey PRIMARY KEY (id_produccion),
        CONSTRAINT pg_produccion_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_grupo_fkey FOREIGN KEY (id_grupo)
            REFERENCES otros.pg_grupos (id_grupo) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_jefe_turno_fkey FOREIGN KEY (id_jefe_turno)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_maquina_fkey FOREIGN KEY (id_maquina)
            REFERENCES otros.pg_maquinas (id_maquina) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_molde_fkey FOREIGN KEY (id_molde)
            REFERENCES otros.pg_moldes (id_molde) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_registro_fkey FOREIGN KEY (id_registro)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_produccion_id_sucursal_fkey FOREIGN KEY (id_sucursal)
            REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_produccion OWNER to programa;
    COMMENT ON COLUMN otros.pg_produccion.peso_prom IS 'peso promedio del producto';
   CREATE TABLE IF NOT EXISTS otros.pg_prod_ensa
    (
        id_prod_ensa bigserial NOT NULL,
        id_empresa integer NOT NULL,
        id_sucursal integer,
        id_registro bigint NOT NULL,
        fecha date NOT NULL,
        fecha_creada timestamp without time zone DEFAULT now(),
        tipo boolean NOT NULL DEFAULT true,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT pg_prod_ensa_pkey PRIMARY KEY (id_prod_ensa),
        CONSTRAINT pg_prod_ensa_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_prod_ensa_id_registro_fkey FOREIGN KEY (id_registro)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_prod_ensa_id_sucursal_fkey FOREIGN KEY (id_sucursal)
            REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_prod_ensa OWNER to programa;
    COMMENT ON TABLE otros.pg_prod_ensa IS 'Tabla que se registran entradas y salidas de productos que afectan el inventario de plastico (produccion y ventas)';
    COMMENT ON COLUMN otros.pg_prod_ensa.tipo IS 'true: entrada de producto, false: salida de producto';
   CREATE TABLE IF NOT EXISTS otros.pg_prod_ensa_productos
    (
        id_prod_ensa bigint NOT NULL,
        id_clasificacion integer NOT NULL,
        nrow integer NOT NULL,
        cantidad double precision NOT NULL DEFAULT 0,
        CONSTRAINT pg_prod_ensa_productos_pkey PRIMARY KEY (id_prod_ensa, nrow, id_clasificacion),
        CONSTRAINT pg_prod_ensa_productos_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
            REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT pg_prod_ensa_productos_id_prod_ensa_fkey FOREIGN KEY (id_prod_ensa)
            REFERENCES otros.pg_prod_ensa (id_prod_ensa) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.pg_prod_ensa_productos OWNER to programa;
   INSERT INTO otros.pg_grupos(nombre) VALUES ('1'),('2'),('3');
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Plasticos Gubalu',0,true,'pg_produccion/','gift',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Produccion',602,true,'pg_produccion/','th-large',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',603,true,'pg_produccion/agregar/','plus',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',603,false,'pg_produccion/modificar/','edit',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',603,false,'pg_produccion/imprimir/','print',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',603,false,'pg_produccion/cancelar/','remove',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Maquinas',602,true,'pg_produccion/maquinas/','th-list',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',608,true,'pg_produccion/maquinasAgregar/','plus',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',608,false,'pg_produccion/maquinasModificar/','edit',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',608,false,'pg_produccion/maquinasEliminar/','remove',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Moldes',602,true,'pg_produccion/moldes/','th-list',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',612,true,'pg_produccion/moldesAgregar/','plus',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',612,false,'pg_produccion/moldesModificar/','edit',false);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',612,false,'pg_produccion/moldesEliminar/','remove',false);

 ☐ Agregar descripsion en permisos
 -- lap|san
   ALTER TABLE IF EXISTS public.nomina_permisos ADD COLUMN observaciones text COLLATE pg_catalog."default";

 ☐ Reporte de salidas registradas en registro de pallets, Producto, dia del 1-31 existencia

 ☐ Estado de resultado nuevos cambios de la señora
   -- lap|san
    ALTER TABLE IF EXISTS otros.estado_resultado_trans ADD COLUMN tipo_flete character varying(20) COLLATE pg_catalog."default";
    COMMENT ON COLUMN otros.estado_resultado_trans.tipo_flete IS 'bg: Bodega GDL, ff: Flete foraneo, fl: flete local';
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Rendimiento Equipo',572,true,'estado_resultado_trans/rpt_rend_equipo/','print',true);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Estado de Resultados',572,true,'estado_resultado_trans/rpt_estado_results/','print',true);

 ✔ Estado resultado trans, nuevos datos @done (23-10-11 18:12)
   -- lap|san
   ALTER TABLE IF EXISTS otros.estado_resultado_trans ADD COLUMN otros_datos json;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_sueldos ADD COLUMN cantidad double precision DEFAULT 0;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Permisos',207,false,'empleados/permisos/','remove-circle',true);

 ✔ Ligar las compras/nc compras con salidas de almacen y cancelar @done (23-10-11 18:12)
    -- pcc|lap|san
    ALTER TABLE IF EXISTS public.compras_salidas ADD COLUMN id_compra bigint;
    COMMENT ON COLUMN public.compras_salidas.id_compra IS 'id del compras y nc compras, para cancelar automatico';
    ALTER TABLE IF EXISTS public.compras_salidas ADD CONSTRAINT compras_salidas_id_compra_fkey FOREIGN KEY (id_compra)
      REFERENCES public.compras (id_compra) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL NOT VALID;

 ✔ Registro de permisos en nomina @done (23-10-11 18:12)
   -- lap|san|pcc
   CREATE TABLE IF NOT EXISTS public.nomina_permisos
    (
        id_permiso bigserial NOT NULL,
        id_empresa bigint NOT NULL,
        id_creo bigint,
        id_trabajador bigint NOT NULL,
        folio bigint NOT NULL,
        fecha_ini timestamp without time zone NOT NULL,
        fecha_fin timestamp without time zone NOT NULL,
        dias integer DEFAULT 0,
        hrs integer DEFAULT 0,
        uso_dir character varying(150) COLLATE pg_catalog."default",
        uso_dir_value character varying(150) COLLATE pg_catalog."default",
        uso_rh character varying(150) COLLATE pg_catalog."default",
        uso_rh_value character varying(150) COLLATE pg_catalog."default",
        fecha_creo date DEFAULT now(),
        no_impresiones integer DEFAULT 0,
        CONSTRAINT nomina_permisos_pkey PRIMARY KEY (id_permiso),
        CONSTRAINT nomina_permisos_id_creo_fkey FOREIGN KEY (id_creo)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT nomina_permisos_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT nomina_permisos_id_trabajador_fkey FOREIGN KEY (id_trabajador)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE IF EXISTS public.nomina_permisos OWNER to programa;
    COMMENT ON COLUMN public.nomina_permisos.id_creo IS 'usuario que creeo el registro';

 ✔ Reporte de gastos compras, poner grupo @done (23-10-11 18:12)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS public.compras_vehiculos ADD COLUMN grupo character varying(100) COLLATE pg_catalog."default";

 ☐ Cambios nominas reporte de la señora
   -- lap|san|pcc
    ALTER TABLE IF EXISTS public.usuarios ADD COLUMN hrs_turno double precision DEFAULT 8;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN hr_entrada time without time zone;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN hr_salida time without time zone;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN hrs_turno double precision DEFAULT 0;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN hrs_dif double precision DEFAULT 0;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN hrs_aut double precision DEFAULT 0;
    ALTER TABLE IF EXISTS public.nomina_asistencia_hrs ADD COLUMN observaciones character varying(256) COLLATE pg_catalog."default";
    COMMENT ON COLUMN public.nomina_asistencia_hrs.hrs
        IS 'tiempo trabajado o Hrs Laboradas, del sistena de checador';
    COMMENT ON COLUMN public.nomina_asistencia_hrs.hrs_turno
        IS 'Horas del tueno que tiene que cubrir el trabajador';
    COMMENT ON COLUMN public.nomina_asistencia_hrs.hrs_dif
        IS 'Diferencia de las hrs trabajadas y hrs del turno';
    COMMENT ON COLUMN public.nomina_asistencia_hrs.hrs_aut
        IS 'Hrs extras autorizadas para bono o descuento';

 ✔ Cambios estados de resultado @done (23-10-11 18:12)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_ventas ADD COLUMN imp_comprobacion double precision DEFAULT 0;
   CREATE TABLE IF NOT EXISTS otros.estado_resultado_trans_tiposg
    (
        id_tipo bigserial NOT NULL,
        nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
        orden integer,
        CONSTRAINT estado_resultado_trans_tiposg_pkey PRIMARY KEY (id_tipo)
    ) TABLESPACE pg_default;
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_tiposg OWNER to programa;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD COLUMN id_tipo bigint;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos
    ADD CONSTRAINT estado_resultado_trans_gastos_id_tipo_fkey FOREIGN KEY (id_tipo)
    REFERENCES otros.estado_resultado_trans_tiposg (id_tipo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   INSERT INTO otros.estado_resultado_trans_tiposg(nombre, orden) VALUES
    ('Combustibles', 1),
    ('Pase Serv Electronico', 2),
    ('Casetas Autopistas', 3),
    ('Certificados y/o Guias', 4),
    ('Bascula', 5),
    ('Comisiones', 6),
    ('Cuotas', 7),
    ('Pension y/o Estacionamientos', 8),
    ('Lavada', 9),
    ('Servicios', 10),
    ('Pasajes y/o Taxis', 11),
    ('Telefono', 12),
    ('Estimaciones', 13);

 ✔ Cambios en bascula salidas, kg promedio @done (23-10-11 18:12)
   -- pcc|lap|san
   ALTER TABLE IF EXISTS public.bascula_productos ADD COLUMN kilos double precision NOT NULL DEFAULT 0;
   ALTER TABLE IF EXISTS public.bascula_productos ADD COLUMN promedio double precision NOT NULL DEFAULT 0;

 ✔ Reporte por codigo de area, empresa, folio orden, folio compra, concepto, importe @done (23-10-11 18:12)
 ✔ Cambios en remisiones, papeletas y pallets para sacar los kg y ponerlos en l remisión @done (23-08-02 17:53)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS public.rastria_pallets_rendimiento ADD COLUMN kg_desc real DEFAULT 0;
   ALTER TABLE IF EXISTS public.rastria_pallets_rendimiento ADD COLUMN id_unidad_desc integer DEFAULT NULL;
   ALTER TABLE IF EXISTS public.rastria_pallets ADD COLUMN tarimas text DEFAULT '';
   ALTER TABLE IF EXISTS public.rastria_pallets ADD COLUMN tarimas_kg double precision DEFAULT 0;
   CREATE OR REPLACE VIEW public.rastria_pallets_lista AS
     SELECT rp.id_pallet,
        rp.folio,
        date(rp.fecha) AS fecha,
        rp.no_cajas,
        rp.status,
        COALESCE(sum(rpr.cajas), 0::bigint) AS cajas,
        rp.no_cajas - COALESCE(sum(rpr.cajas), 0::bigint) AS cajas_faltantes,
        rp.id_cliente,
        rp.no_hojas,
        rp.kilos_pallet,
        rp.calibre_fijo,
        a.id_area,
        a.nombre AS nombre_area,
        rp.folio_int,
        rp.certificado,
      rp.tarimas,
      rp.tarimas_kg
       FROM rastria_pallets rp
         LEFT JOIN rastria_pallets_rendimiento rpr ON rp.id_pallet = rpr.id_pallet
         LEFT JOIN areas a ON a.id_area = rp.id_area
      GROUP BY rp.id_pallet, rp.folio, rp.fecha, rp.no_cajas, rp.status, rp.id_cliente, rp.no_hojas, rp.kilos_pallet, a.id_area
      ORDER BY rp.folio;
   ALTER TABLE IF EXISTS public.facturacion_otrosdatos ADD COLUMN extras jsonb;

 ✔ Cambios estado res transporte @done (23-10-11 18:12)
    -- lap|san|pcc
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_cods ADD COLUMN tipo character varying(10) COLLATE pg_catalog."default" DEFAULT 'g'::character varying;
    COMMENT ON COLUMN otros.estado_resultado_trans_cods.tipo IS 'g: gastos, rm: repara manteni';
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Conceptos REP Y MTTO',572,true,'estado_resultado_trans/codsRepMant/','th-list',false);
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_rep_mtto ADD COLUMN id_cod bigint;
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_rep_mtto ADD CONSTRAINT estado_resultado_trans_rep_mtto_id_cod_fkey FOREIGN KEY (id_cod) REFERENCES otros.estado_resultado_trans_cods (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar Monto',257,false,'banco/modificar_movimiento_monto/','edit',false);

 ✔ Reporte de inventario nuevo @done (23-07-19 18:40)
   -- lap|pcc|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Formato Inventario',369,true,'inventario/formatoInventario/','print',true);
 ✔ Ordenes proyectos cambios @done (23-07-19 18:40)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS otros.proyectos ALTER COLUMN nombre TYPE character varying(250);
 ✔ Reporte de nomina costo por rancho @done (23-06-14 18:47)
   -- lap|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Costo x Ramcho',364,true,'nomina_trabajos2/rpt_costo_rancho/','print',true);
 ✔ reporte de lugar nacimiento empleados @done (23-06-14 16:51)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS public.usuarios ADD COLUMN lugar_nacimiento character varying(30) COLLATE pg_catalog."default";
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Lugar Nacimiento',364,true,'nomina_fiscal/rpt_lugar_nacimiento/','list-ol',true);
 ✔ Reporte de combustible agrupar por tractor y agregar labor (quitar observacion), km y rendimiento por km @done (23-05-24 12:18)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS public.productos ADD COLUMN grupo_activo character varying(50) COLLATE pg_catalog."default";
   -- pcc|lap|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte gastos de activos',341,true,'control_maquinaria/rptGastosActivos/','print',true);
 ✔ Crear Reporte de gastos de tractores, sacar de los gastos y ordenes @done (23-06-14 13:30)
 ✔ Estado de resultado transporte, poner como catalogo los conceptos y que solo se puedan selecionar @done (23-05-24 18:18)
   -- lap|san|pcc
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Conceptos Gastos',572,true,'estado_resultado_trans/cods/','th-list',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',589,true,'estado_resultado_trans/codsAgregar/','plus',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',589,false,'estado_resultado_trans/codsModificar/','edit',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',589,false,'estado_resultado_trans/codsEliminar/','remove',false);
 ☐ Descuentos bodega gdl
   CREATE TABLE otros.bodega_deudores
    (
      id_deudor bigserial NOT NULL,
      fecha date NOT NULL,
      nombre character varying(150) NOT NULL,
      concepto character varying(250) NOT NULL,
      monto double precision NOT NULL DEFAULT (0)::double precision,
      no_caja integer NOT NULL DEFAULT 1,
      no_impresiones integer NOT NULL DEFAULT 0,
      id_usuario bigint,
      fecha_creacion timestamp without time zone DEFAULT now(),
      tipo character varying(30) NOT NULL DEFAULT 'prestamo'::character varying, -- prestamo: prestamos a pagar, otros: compras a empresas efectivo
      folio bigint,
      CONSTRAINT bodega_deudores_pkey PRIMARY KEY (id_deudor),
      CONSTRAINT bodega_deudores_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.bodega_deudores
      OWNER TO programa;
    COMMENT ON COLUMN otros.bodega_deudores.tipo IS 'prestamo: prestamos a pagar, otros: compras a empresas efectivo';
   CREATE TABLE otros.bodega_deudores_pagos
      (
        id_deudor bigint NOT NULL,
        fecha_creacion timestamp without time zone NOT NULL DEFAULT now(),
        fecha date NOT NULL,
        monto double precision NOT NULL DEFAULT (0)::double precision,
        no_caja integer NOT NULL DEFAULT 1,
        id_usuario bigint,
        CONSTRAINT bodega_deudores_pagos_pkey PRIMARY KEY (id_deudor, fecha_creacion),
        CONSTRAINT bodega_deudores_pagos_id_deudor_fkey FOREIGN KEY (id_deudor)
            REFERENCES otros.bodega_deudores (id_deudor) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT bodega_deudores_pagos_id_usuario_fkey FOREIGN KEY (id_usuario)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.bodega_deudores_pagos
        OWNER TO programa;
   CREATE TABLE otros.bodega_rastreo_efectivo
      (
        id_rastreo bigserial NOT NULL,
        no_caja integer NOT NULL DEFAULT 1,
        fecha date NOT NULL,
        nombre character varying(500) NOT NULL,
        nota character varying(500) NOT NULL,
        monto double precision NOT NULL DEFAULT (0)::double precision,
        fecha_rastreo timestamp without time zone DEFAULT now(),
        id_usuario bigint,
        fecha_creacion timestamp without time zone DEFAULT now(),
        no_impresiones integer NOT NULL DEFAULT 0,
        CONSTRAINT bodega_rastreo_efectivo_pkey PRIMARY KEY (id_rastreo),
        CONSTRAINT bodega_rastreo_efectivo_id_usuario_fkey FOREIGN KEY (id_usuario)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.bodega_rastreo_efectivo
        OWNER TO programa;

 ✔ Imprimir gastos @done (23-03-20 10:21)
   -- pcc|san|lap
   ALTER TABLE IF EXISTS public.compras ADD COLUMN no_impresiones integer DEFAULT 0;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',166,true,'gastos/imprimir/','print',false);
   UPDATE public.empresas SET cfdi_version=4.0;
 ✔ Reporte de salidas de boletas @done (23-03-15 15:43)
   -- lap|pcc|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Salidas de Boletas',365,true,'bascula/rpt_boletas_salida/','print',true);
 ✔ Reporte de boletas pendientes de pago por proveedor @done (23-03-15 17:52)
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Boletas Por Pagar',365,true,'bascula/rpt_boletas_porpagar/','print',true);
 ✔ Estado result de fletes, poner en gastos y mantenimiento subtotal, iva e importe, en el reporte usar el subtotal @done (23-03-20 09:03)
   -- lap|pcc|san
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD COLUMN subtotal double precision DEFAULT 0;
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD COLUMN iva double precision DEFAULT 0;
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_rep_mtto ADD COLUMN importe double precision DEFAULT 0;
    ALTER TABLE IF EXISTS otros.estado_resultado_trans_rep_mtto ADD COLUMN iva double precision DEFAULT 0;
    UPDATE otros.estado_resultado_trans_rep_mtto SET importe = subtotal;
    UPDATE otros.estado_resultado_trans_gastos SET subtotal = importe;
 ✔ Catalogo de labores para combustible @done (23-03-15 13:56)
   -- lap|san|pcc
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Labores de Combustible',152,true,'labores_codigo/combus/','barcode',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',582,false,'labores_codigo/combus_modificar/','edit',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',582,true,'labores_codigo/combus_agregar/','plus',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',582,false,'labores_codigo/combus_eliminar/','ban-circle',false);
    ALTER TABLE IF EXISTS public.compras_salidas_labores ADD COLUMN tipo character varying(10) COLLATE pg_catalog."default" DEFAULT 'nom'::character varying;
    COMMENT ON COLUMN public.compras_salidas_labores.tipo IS 'nom: codigos para nomina, com: codigo para combustible compras';
 ✔ Reporte estado resultado transp agregar multimple los litros y precios en reporte sacar un promedio @done (23-02-22 00:19)
   en reporte de relacion de fletes ordenar por fecha los vajes
   Agregar fecha de viaje y tomar esa fecha para el reporte relacion de fecha,
   quitar de gastos los conceptos COSTO MENSUAL GENERAL EST, COSTO ESTIMADO, COSTO MENSUAL GENERAL
   -- lap|pcc|san
   ALTER TABLE IF EXISTS otros.estado_resultado_trans ADD COLUMN fecha_viaje date;
   UPDATE otros.estado_resultado_trans SET fecha_viaje = fecha;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans ADD COLUMN lts_precios json;
   UPDATE otros.estado_resultado_trans SET lts_precios = ('[{"rend_lts": ' || rend_lts || ', "rend_precio": ' || rend_precio || '}]')::json;
 ✔ Reporte cuentas por pagar que salgan todos @done (23-02-15 18:34)
 ✔ En captura de actividades 2 de nomina, filtrar las tablas por rancho @done (23-02-16 16:48)
 ✔ Reporte de prenomina agregar bonos, -fonacot, -infonavit, -pencion @done (23-02-17 19:04)
   -- lap|san|pcc
   CREATE TABLE IF NOT EXISTS public.nomina_trabajos_dia2_labores_areas
      (
          id bigserial NOT NULL,
          nombre character varying(60) COLLATE pg_catalog."default" NOT NULL,
          status boolean DEFAULT true,
          CONSTRAINT nomina_trabajos_dia2_labores_areas_pkey PRIMARY KEY (id)
      ) TABLESPACE pg_default;
      ALTER TABLE IF EXISTS public.nomina_trabajos_dia2_labores_areas OWNER to programa;
      INSERT INTO public.nomina_trabajos_dia2_labores_areas(nombre) VALUES ('Administrativo'),('Arieros'),('Control de Maleza'),
        ('Control de Plagas'),('Labores Varias'),('Mantenimiento'),('Nutrición'),('Riego'),('Operadores'),('Deshije');
   -- DELETE FROM public.compras_salidas_labores;
   ALTER TABLE IF EXISTS public.nomina_trabajos_dia2 ADD COLUMN avance_real double precision DEFAULT 0;
 ✔ Agregar codigo en gastos directos y agregar en el reporte @done (23-02-15 18:34)
   -- lap|san|pcc
   ALTER TABLE IF EXISTS public.compras ADD COLUMN id_cat_codigos bigint;
   ALTER TABLE IF EXISTS public.compras ADD CONSTRAINT compras_id_cat_codigos_fkey FOREIGN KEY (id_cat_codigos) REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
 ☐ modificar los tickets de nomina como la foto
 ☐ Revisar el checador con adrian y cargar las asistencias directamente
 ☐ Reporte de asistencias cambiar como la foto
 ☐ Reportes de nomina
   -- lap|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Costo x Labor',364,true,'nomina_trabajos2/rpt_costo_labores/','print',true);
   ALTER TABLE IF EXISTS public.compras_salidas_labores ADD COLUMN departamento character varying(70) COLLATE pg_catalog."default";
   ALTER TABLE IF EXISTS otros.centro_costo ADD COLUMN id_rancho bigint;
   ALTER TABLE IF EXISTS otros.centro_costo ADD CONSTRAINT centro_costo_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Pre Nomina',364,true,'nomina_trabajos2/rpt_prenomina/','print',true);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Auditoria de Costos',364,true,'nomina_trabajos2/rpt_auditoria_costos/','print',true);
   CREATE OR REPLACE VIEW public.nomina_trabajos_dia2_centros
     AS
     SELECT cen.id_empresa,
        cen.id_usuario,
        cen.fecha,
        cen.rows,
        cen.id_centro_costo,
        cen.num,
        cen.id_rancho,
        ce.nombre AS tabla,
        ce.hectareas,
        ra.nombre AS rancho
       FROM ( SELECT cc.id_empresa,
                cc.id_usuario,
                cc.fecha,
                cc.rows,
                cc.id_centro_costo,
                cc.num,
                r.id_rancho
               FROM nomina_trabajos_dia2 t2
                 JOIN nomina_trabajos_dia2_centro_costo cc ON t2.id_empresa = cc.id_empresa AND t2.id_usuario = cc.id_usuario AND t2.fecha = cc.fecha AND t2.rows::text = cc.rows::text
                 JOIN nomina_trabajos_dia2_rancho r ON t2.id_empresa = r.id_empresa AND t2.id_usuario = r.id_usuario AND t2.fecha = r.fecha AND t2.rows::text = r.rows::text) cen
         JOIN otros.centro_costo ce ON ce.id_centro_costo = cen.id_centro_costo
         JOIN otros.ranchos ra ON ra.id_rancho = cen.id_rancho;
    ALTER TABLE public.nomina_trabajos_dia2_centros OWNER TO programa;
 ✔ Reporte de codigos de gastos poner filtro para quitar concepto de diesel, gasolina y calcomania @done (23-01-18 12:42)
 ✔ Estimacion de transporte, poner la opcion de cargar gastos de compra desde gastos generales y poner destinatario al inicio @done (23-01-26 16:13)
   poder agregar el rendimiento del termo, HORAS TRABAJADAS, LTS DIESEL TERMO, REND HR POR LITRO
   crear reporte acumulado por rango de fechas y camion
   -- lap|san|pcc
   ALTER TABLE otros.estado_resultado_trans ADD COLUMN destino character varying(150) COLLATE pg_catalog."default";
   ALTER TABLE otros.estado_resultado_trans ADD COLUMN rend_thrs_trab double precision;
   ALTER TABLE otros.estado_resultado_trans ADD COLUMN rend_thrs_lts double precision;
   ALTER TABLE otros.estado_resultado_trans ADD COLUMN rend_thrs_hxl double precision;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD COLUMN id_compra bigint;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD CONSTRAINT estado_resultado_trans_rep_mtto_id_compra_fkey FOREIGN KEY (id_compra) REFERENCES public.compras (id_compra) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE IF EXISTS otros.estado_resultado_trans_gastos ADD COLUMN folio character varying(30) COLLATE pg_catalog."default" DEFAULT ''::character varying;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Relación de Fletes',572,true,'estado_resultado_trans/rpt_rel_fletes/','print',true);
 ✔ estimacion transpor @done (23-01-18 10:40)
   -- lap|san|pcc
    ALTER TABLE otros.estado_resultado_trans ADD COLUMN id_gasto1 character varying(100);
    UPDATE otros.estado_resultado_trans SET id_gasto1 = id_gasto;
    ALTER TABLE otros.estado_resultado_trans DROP COLUMN id_gasto;
    ALTER TABLE otros.estado_resultado_trans RENAME COLUMN id_gasto1 TO id_gasto;
    COMMENT ON COLUMN otros.estado_resultado_trans.id_gasto IS 'gasto por comprobar de la caja chica 2 ';
   -- lap|san|pcc
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN id uuid DEFAULT UUID_GENERATE_V4();
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN fecha date DEFAULT NULL;
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN folio character varying(30) DEFAULT '';
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN proveedor character varying(200) DEFAULT '';
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN concepto character varying(250) DEFAULT '';
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD COLUMN subtotal double precision DEFAULT 0;
    ALTER TABLE otros.estado_resultado_trans_rep_mtto DROP CONSTRAINT estado_resultado_trans_rep_mtto_pkey;
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ADD CONSTRAINT estado_resultado_trans_rep_mtto_pkey PRIMARY KEY (id);
    ALTER TABLE otros.estado_resultado_trans_rep_mtto ALTER COLUMN id_compra DROP NOT NULL;
    ALTER TABLE otros.estado_resultado_trans_sueldos ADD COLUMN comprobacion boolean DEFAULT false;

 ✔ Actualizacion de tablas @done (23-01-03 19:04)
   -- lap|san|pcc
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=0.01, lim_superior=746.04, cuota_fija=0, porcentaje=1.92 WHERE id_art_113=34;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=746.05, lim_superior=6332.05, cuota_fija=14.32, porcentaje=6.4 WHERE id_art_113=35;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=6332.06, lim_superior=11128.01, cuota_fija=371.83, porcentaje=10.88 WHERE id_art_113=36;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=11128.02, lim_superior=12935.82, cuota_fija=893.63, porcentaje=16 WHERE id_art_113=37;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=12935.83, lim_superior=15487.71, cuota_fija=1182.88, porcentaje=17.92 WHERE id_art_113=38;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=15487.72, lim_superior=31236.49, cuota_fija=1640.18, porcentaje=21.36 WHERE id_art_113=39;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=31236.5, lim_superior=49233, cuota_fija=5004.12, porcentaje=23.52 WHERE id_art_113=40;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=49233.01, lim_superior=93993.9, cuota_fija=9236.89, porcentaje=30 WHERE id_art_113=41;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=93993.91, lim_superior=125325.2, cuota_fija=22665.17, porcentaje=32 WHERE id_art_113=42;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=125325.21, lim_superior=375975.61, cuota_fija=32691.18, porcentaje=34 WHERE id_art_113=43;
    UPDATE public.nomina_mensual_art_113 SET lim_inferior=375975.62, lim_superior=9999999, cuota_fija=117912.32, porcentaje=35 WHERE id_art_113=44;

    UPDATE public.nomina_semanal_art_113 SET lim_inferior=0.01, lim_superior=171.78, cuota_fija=0, porcentaje=1.92 WHERE id_art_113=78;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=171.79, lim_superior=1458.03, cuota_fija=3.29, porcentaje=6.4 WHERE id_art_113=79;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=1458.04, lim_superior=2562.35, cuota_fija=85.61, porcentaje=10.88 WHERE id_art_113=80;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=2562.36, lim_superior=2978.64, cuota_fija=205.8, porcentaje=16 WHERE id_art_113=81;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=2978.65, lim_superior=3566.22, cuota_fija=272.37, porcentaje=17.92 WHERE id_art_113=82;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=3566.23, lim_superior=7192.64, cuota_fija=377.65, porcentaje=21.36 WHERE id_art_113=83;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=7192.65, lim_superior=11336.57, cuota_fija=1152.27, porcentaje=23.52 WHERE id_art_113=84;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=11336.58, lim_superior=21643.3, cuota_fija=2126.95, porcentaje=30 WHERE id_art_113=85;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=21643.31, lim_superior=28857.78, cuota_fija=5218.92, porcentaje=32 WHERE id_art_113=86;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=28857.79, lim_superior=86573.34, cuota_fija=7527.59, porcentaje=34 WHERE id_art_113=87;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=86573.35, lim_superior=9999999, cuota_fija=27150.83, porcentaje=35 WHERE id_art_113=88;

    UPDATE public.nomina_diaria_art_113 SET lim_inferior=0.01, lim_superior=24.54, cuota_fija=0, porcentaje=1.92 WHERE id_art_113=78;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=24.54, lim_superior=208.29, cuota_fija=0.47, porcentaje=6.4 WHERE id_art_113=79;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=208.3, lim_superior=366.05, cuota_fija=12.23, porcentaje=10.88 WHERE id_art_113=80;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=366.06, lim_superior=425.52, cuota_fija=29.4, porcentaje=16 WHERE id_art_113=81;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=425.53, lim_superior=509.46, cuota_fija=38.91, porcentaje=17.92 WHERE id_art_113=82;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=509.47, lim_superior=1027.52, cuota_fija=53.95, porcentaje=21.36 WHERE id_art_113=83;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=1027.53, lim_superior=1619.51, cuota_fija=164.61, porcentaje=23.52 WHERE id_art_113=84;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=1619.52, lim_superior=3091.9, cuota_fija=303.85, porcentaje=30 WHERE id_art_113=85;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=3091.91, lim_superior=4122.54, cuota_fija=745.56, porcentaje=32 WHERE id_art_113=86;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=4122.55, lim_superior=12367.62, cuota_fija=1075.37, porcentaje=34 WHERE id_art_113=87;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=12367.63, lim_superior=9999999, cuota_fija=3878.69, porcentaje=35 WHERE id_art_113=88;
    ALTER TABLE public.nomina_configuracion_vacaciones ADD COLUMN anio integer NOT NULL DEFAULT 2022;
    ALTER TABLE public.nomina_configuracion_vacaciones DROP CONSTRAINT nomina_configuracion_vacaciones_pkey;
    ALTER TABLE public.nomina_configuracion_vacaciones ADD CONSTRAINT nomina_configuracion_vacaciones_pkey PRIMARY KEY (anio1, anio2, anio);

 ✔ Ordenes de requisicion y ordenesd de compra cambiar el folio hoja a texto y mostrarlo en la orden de compra @done (22-12-28 17:30)
    -- lap|pcc|san
    ALTER TABLE public.compras_requisicion ADD COLUMN folio_hoja2 character varying(200);
    UPDATE public.compras_requisicion SET folio_hoja2 = folio_hoja::text;
    ALTER TABLE public.compras_requisicion DROP COLUMN folio_hoja;
    ALTER TABLE public.compras_requisicion RENAME folio_hoja2 TO folio_hoja;
    ALTER TABLE public.compras_ordenes ADD COLUMN folio_hoja2 character varying(200);
    UPDATE public.compras_ordenes SET folio_hoja2 = folio_hoja::text;
    ALTER TABLE public.compras_ordenes DROP COLUMN folio_hoja;
    ALTER TABLE public.compras_ordenes RENAME folio_hoja2 TO folio_hoja;
 ✔ Cambio en caja de limón, poner nueva comprobación de efectivo @done (22-12-27 14:32)
 ✔ Reporte de existencia de limon poner opcion de impresion @done (22-12-28 10:20)
   -- lap|pcc|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir Reportes',505,true,'existencias_limon/print_cortes/','print',true);
 ☐ Apartado de viajes de camiones como el archivo Estim. Result. Eqpo Transp
   -- lap|pcc|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Estado Resultado Transporte',0,true,'estado_resultado_trans/','globe',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',572,true,'estado_resultado_trans/agregar/','plus',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',572,false,'estado_resultado_trans/cancelar/','remove',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',572,false,'estado_resultado_trans/modificar/','remove',false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',572,false,'estado_resultado_trans/imprimir/','print',false);
    CREATE TABLE otros.estado_resultado_trans
      (
          id bigserial NOT NULL,
          id_chofer bigint NOT NULL,
          id_activo bigint NOT NULL,
          fecha date NOT NULL,
          folio bigint NOT NULL,
          km_rec double precision,
          vel_max double precision,
          rep_lt_hist double precision,
          rend_km_gps double precision,
          rend_actual double precision,
          rend_lts double precision,
          rend_precio double precision,
          id_gasto bigint,
          gasto_monto double precision DEFAULT 0,
          id_creo bigint,
          id_empresa bigint NOT NULL,
          status boolean DEFAULT true,
          CONSTRAINT estado_resultado_trans_pkey PRIMARY KEY (id),
          CONSTRAINT estado_resultado_trans_id_activo_fkey FOREIGN KEY (id_activo)
              REFERENCES public.productos (id_producto) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_id_chofer_fkey FOREIGN KEY (id_chofer)
              REFERENCES public.choferes (id_chofer) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_id_creo_fkey FOREIGN KEY (id_creo)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_id_gasto_fkey FOREIGN KEY (id_gasto)
              REFERENCES public.cajachica_gastos (id_gasto) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans OWNER to programa;
      COMMENT ON COLUMN otros.estado_resultado_trans.folio IS 'viaje, folio por camion';
      COMMENT ON COLUMN otros.estado_resultado_trans.id_gasto IS 'gasto por comprobar de la caja chica 2 ';
    CREATE TABLE otros.estado_resultado_trans_cods
      (
          id bigserial NOT NULL,
          nombre character varying(150) COLLATE pg_catalog."default" NOT NULL,
          status boolean DEFAULT true,
          CONSTRAINT estado_resultado_trans_cods_pkey PRIMARY KEY (id)
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans_cods OWNER to programa;
    CREATE TABLE otros.estado_resultado_trans_gastos
      (
          id bigserial NOT NULL,
          id_estado bigint NOT NULL,
          id_proveedor bigint NOT NULL,
          id_cod bigint,
          fecha date,
          cantidad double precision,
          precio double precision,
          importe double precision,
          comprobacion boolean DEFAULT false,
          CONSTRAINT estado_resultado_trans_gastos_pkey PRIMARY KEY (id),
          CONSTRAINT estado_resultado_trans_gastos_id_cod_fkey FOREIGN KEY (id_cod)
              REFERENCES otros.estado_resultado_trans_cods (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_gastos_id_estado_fkey FOREIGN KEY (id_estado)
              REFERENCES otros.estado_resultado_trans (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_gastos_id_proveedor_fkey FOREIGN KEY (id_proveedor)
              REFERENCES public.proveedores (id_proveedor) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans_gastos OWNER to programa;
      COMMENT ON COLUMN otros.estado_resultado_trans_gastos.id_cod IS 'Codigos de gastos para estado_resultado_trans';
    CREATE TABLE otros.estado_resultado_trans_rep_mtto
      (
          id_estado bigint NOT NULL,
          id_compra bigint NOT NULL,
          comprobacion boolean DEFAULT false,
          CONSTRAINT estado_resultado_trans_rep_mtto_pkey PRIMARY KEY (id_estado, id_compra),
          CONSTRAINT estado_resultado_trans_rep_mtto_id_compra_fkey FOREIGN KEY (id_compra)
              REFERENCES public.compras (id_compra) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_rep_mtto_id_estado_fkey FOREIGN KEY (id_estado)
              REFERENCES otros.estado_resultado_trans (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans_rep_mtto OWNER to programa;
    CREATE TABLE otros.estado_resultado_trans_sueldos
      (
          id bigserial NOT NULL,
          id_estado bigint NOT NULL,
          id_proveedor bigint NOT NULL,
          fecha date NOT NULL,
          descripcion character varying(250) COLLATE pg_catalog."default",
          importe double precision NOT NULL,
          CONSTRAINT estado_resultado_trans_sueldos_pkey PRIMARY KEY (id),
          CONSTRAINT estado_resultado_trans_sueldos_id_estado_fkey FOREIGN KEY (id_estado)
              REFERENCES otros.estado_resultado_trans (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_sueldos_id_proveedor_fkey FOREIGN KEY (id_proveedor)
              REFERENCES public.proveedores (id_proveedor) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans_sueldos OWNER to programa;
    CREATE TABLE otros.estado_resultado_trans_ventas
      (
          id_estado bigint NOT NULL,
          id_remision bigint NOT NULL,
          comprobacion boolean DEFAULT false,
          CONSTRAINT estado_resultado_trans_ventas_pkey PRIMARY KEY (id_estado, id_remision),
          CONSTRAINT estado_resultado_trans_ventas_id_estado_fkey FOREIGN KEY (id_estado)
              REFERENCES otros.estado_resultado_trans (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT estado_resultado_trans_ventas_id_remision_fkey FOREIGN KEY (id_remision)
              REFERENCES public.facturacion (id_factura) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.estado_resultado_trans_ventas OWNER to programa;
      COMMENT ON COLUMN otros.estado_resultado_trans_ventas.comprobacion IS 'si: true, no: false';
 ✔ Reporte de asistencias por rango de fecha, empleado, faltas, asistencias, incapacidades @done (22-11-18 11:58)
   -- lap|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de Asistencia',364,true,'nomina_fiscal/rpt_asistencias/','list-ol',true);
 ✔ Reporte rastreabilidad @done (22-11-02 12:50) lap|san|pcc
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Rastreabilidad y seguimiento 2',363,true,'rastreabilidad/rrs2/','print',true);
 ☐ Reporte de existencia nuevo reporte como el del correo (Reporte de rendimiento de limon nuevo)
   -- lap|san|pcc
   CREATE TABLE otros.existencias_limon_manoobra_insumo
      (
          id bigserial NOT NULL,
          id_unidad integer NOT NULL,
          id_area integer NOT NULL DEFAULT 2,
          descripcion character varying(200),
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          costo double precision NOT NULL DEFAULT 0,
          kilos double precision NOT NULL DEFAULT 0,
          cantidad double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL DEFAULT 0,
          CONSTRAINT existencias_limon_manoobra_insumo_pkey PRIMARY KEY (id),
          CONSTRAINT existencias_limon_manoobra_insumo_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT existencias_limon_manoobra_insumo_id_unidad_fkey FOREIGN KEY (id_unidad)
              REFERENCES public.unidades (id_unidad) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.existencias_limon_manoobra_insumo OWNER to programa;
      COMMENT ON TABLE otros.existencias_limon_manoobra_insumo IS 'Cuando regresan fruta de una venta';
   -- lap|san|pcc
    ALTER TABLE public.calibres ADD COLUMN "order" integer DEFAULT 99999;
    UPDATE calibres SET "order" = 1 WHERE id_calibre = 105;
    UPDATE calibres SET "order" = 2 WHERE id_calibre = 106;
    UPDATE calibres SET "order" = 3 WHERE id_calibre = 107;
    UPDATE calibres SET "order" = 4 WHERE id_calibre = 108;
    UPDATE calibres SET "order" = 5 WHERE id_calibre = 109;
    UPDATE calibres SET "order" = 6 WHERE id_calibre = 110;
    UPDATE calibres SET "order" = 8 WHERE id_calibre = 123;
    UPDATE calibres SET "order" = 7 WHERE id_calibre = 122;
    UPDATE calibres SET "order" = 6 WHERE id_calibre = 132;
    UPDATE calibres SET "order" = 3 WHERE id_calibre = 128;
    UPDATE calibres SET "order" = 2 WHERE id_calibre = 127;
    UPDATE calibres SET "order" = 1 WHERE id_calibre = 125;
    UPDATE calibres SET "order" = 9 WHERE id_calibre = 112;
    UPDATE calibres SET "order" = 4 WHERE id_calibre = 113;
    UPDATE calibres SET "order" = 0 WHERE id_calibre = 118;
     autenticacion bioetrico
      vb, c#
      Reporte de asistencia, cargar las fotos de las checadas
      asistencias cargadas desde la base de datos
 ✔ Bascula poner quien cierra la boleta @done (22-09-21 17:11)
   -- lap|san|pcc
   COMMENT ON COLUMN public.bascula.id_usuario IS 'usuario que registro la boleta';
   ALTER TABLE public.bascula ADD COLUMN id_usuario_cerro bigint;
   COMMENT ON COLUMN public.bascula.id_usuario_cerro IS 'usuario que cerro la boleta';
 ✔ Remisiones no guarda los certificados y borra productos @done (22-09-07 20:10)
 ☐ Poner historial de ordenes de compras cuando faltan productos, poner opcion de imprimir historial de ordenes subscuentes
 ✔ Poner opcion de imprimir historial de abonos en cuentas por pagar de una factura (abonos) @done (22-09-21 14:05)
 ☐ Buscar bascula, buscar lectores
 ✔ Validar exportacion y nacional en papeletas de salida @done (22-09-07 20:11)
   --san|lap|pcc
   ALTER TABLE public.bascula_pagos ADD COLUMN created_at timestamp without time zone DEFAULT now();
 ☐ poner limite de credito en clientes y validar al hacer facturas o remisiones
 ✔ Reporte cuentas por cobrar, pendientes por cobrar, meter columna saldo vencido y dias de credito @done (22-07-13 10:16)
 ✔ Brenda, Reporte acumulado por empresa, ordenar de esa forma @done (22-07-13 10:19)
   --lap|san|pcc|gdl
   ALTER TABLE public.empresas ADD COLUMN num_orden integer;
   --lap|san|pcc|gdl
   ALTER TABLE public.empresas ADD COLUMN nombre_corto character varying COLLATE pg_catalog."default";
 ✔ Reporte codigos cuentas, reporte de gastos, meter el Areas / Ranchos / Lineas @done (22-07-15 09:44)
 ✔ Reporte de compras de productos y productos regresados en almacen @done (22-08-03 00:14)
   -- lap|san|pcc|gdl
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Existencia por unidades de salida',369,true,'inventario/epus/','print',true);
 ✔ Reporte de salidas de almacén por usuario @done (22-07-22 19:31)
   -- lap|san|pcc|gdl
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Salidas por Usuarios',366,true,'productos_salidas/rpt_salidas_usuarios/','print',true);
 ✔ Caja de prestamos exportar a excel @done (22-07-14 10:48)
 ☐ En ordenes de compra poner campo para que capturen el No de Certificado y esos en la factura poder seleccionarlos
   --lap|san|pcc|gdl
    ALTER TABLE public.productos_familias ADD COLUMN is_certif boolean DEFAULT false;
    COMMENT ON COLUMN public.productos_familias.is_certif IS 'indica si los productos de la familia son para capturar certificados de ventas (facturas)';
    ALTER TABLE public.compras_requisicion_productos ADD COLUMN no_certificado character varying(200) COLLATE pg_catalog."default";
    ALTER TABLE public.compras_productos ADD COLUMN no_certificado character varying(200) COLLATE pg_catalog."default";
    ALTER TABLE public.facturacion_seg_cert ADD COLUMN id_orden bigint;
    COMMENT ON COLUMN public.facturacion_seg_cert.id_orden IS 'Orden del certificado o linea captura';
    ALTER TABLE public.facturacion_seg_cert ADD COLUMN no_certificado character varying(200) COLLATE pg_catalog."default";
    COMMENT ON COLUMN public.facturacion_seg_cert.no_certificado IS 'Orden del certificado o linea captura';
    CREATE OR REPLACE VIEW public.no_certificados_compras
       AS
       SELECT co.id_orden, co.folio,
         e.id_empresa,
          e.nombre_fiscal AS empresa,
          cp.no_certificado,
          COALESCE(fsc.id_factura, 0::bigint) AS reg
         FROM compras_ordenes co
           JOIN compras_productos cp ON co.id_orden = cp.id_orden
           JOIN empresas e ON e.id_empresa = co.id_empresa
           LEFT JOIN facturacion_seg_cert fsc ON fsc.id_orden = cp.id_orden AND fsc.no_certificado::text = cp.no_certificado::text
        WHERE cp.no_certificado IS NOT NULL AND cp.no_certificado <> '' AND fsc.id_factura IS NULL;

      ALTER TABLE public.no_certificados_compras
          OWNER TO programa;
    -- pcc|san
    CREATE OR REPLACE VIEW public.no_certificados_rpt
         AS
         SELECT oc.id_orden,
            oc.folio_orden,
            oc.fecha_orden,
            oc.empresa_orden,
            oc.no_certificado,
            v.id_factura,
            v.folio_venta,
            v.fecha_venta,
            v.empresa_venta,
            v.certificado
           FROM ( SELECT co.id_orden,
                    co.folio AS folio_orden,
                    date(co.fecha_creacion) AS fecha_orden,
                    e.id_empresa,
                    e.nombre_fiscal AS empresa_orden,
                    cp.no_certificado
                   FROM compras_ordenes co
                     JOIN compras_productos cp ON co.id_orden = cp.id_orden
                     JOIN empresas e ON e.id_empresa = co.id_empresa
                  WHERE cp.no_certificado IS NOT NULL AND cp.no_certificado::text <> ''::text) oc
             LEFT JOIN ( SELECT f.id_factura,
                    f.serie::text || f.folio AS folio_venta,
                    date(f.fecha) AS fecha_venta,
                    e.id_empresa,
                    e.nombre_fiscal AS empresa_venta,
                    fsc.certificado,
                    fsc.no_certificado,
                    fsc.id_orden
                   FROM facturacion f
                     JOIN facturacion_seg_cert fsc ON f.id_factura = fsc.id_factura
                     JOIN empresas e ON e.id_empresa = f.id_empresa
                     LEFT JOIN ( SELECT remisiones_historial.id_remision,
                            remisiones_historial.id_factura,
                            remisiones_historial.status
                           FROM remisiones_historial
                          WHERE remisiones_historial.status::text <> 'ca'::text AND remisiones_historial.status::text <> 'b'::text) fh ON f.id_factura = fh.id_remision
                  WHERE f.status::text <> 'ca'::text AND f.status::text <> 'b'::text AND f.id_abono_factura IS NULL AND f.id_nc IS NULL AND fsc.no_certificado::text <> ''::text AND COALESCE(fh.id_remision, 0::bigint) = 0) v ON v.id_orden = oc.id_orden AND v.no_certificado::text = oc.no_certificado::text;

        ALTER TABLE public.no_certificados_rpt
            OWNER TO programa;
 ✔ En compras y ventas poner opción para calcular el iva sumando el ieps, poner en los productos para q calcule de esa forma @done (22-07-20 13:29)
   --lap|pcc|san|gdl
   ALTER TABLE public.productos ADD COLUMN ieps_subtotal boolean NOT NULL DEFAULT false;
   ALTER TABLE public.compras_requisicion_productos ADD COLUMN ieps_sub boolean DEFAULT false;
   COMMENT ON COLUMN public.compras_requisicion_productos.ieps_sub IS 'indica si ese producto el iva se calcula sumando el ieps';
   ALTER TABLE public.compras_productos ADD COLUMN ieps_sub boolean DEFAULT false;
   COMMENT ON COLUMN public.compras_productos.ieps_sub IS 'indica si ese producto el iva se calcula sumando el ieps';
   ALTER TABLE public.clasificaciones ADD COLUMN ieps_subtotal boolean DEFAULT false;
   ALTER TABLE public.facturacion_productos ADD COLUMN ieps_subtotal boolean DEFAULT false;
   ALTER TABLE public.compras_notas_credito_productos ADD COLUMN retencion_isr double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.compras_notas_credito_productos ADD COLUMN porcentaje_isr real NOT NULL DEFAULT 0;
   ALTER TABLE public.compras_notas_credito_productos ADD COLUMN porcentaje_ieps real NOT NULL DEFAULT (0)::real;
   ALTER TABLE public.compras_notas_credito_productos ADD COLUMN ieps real NOT NULL DEFAULT (0)::real;
 ✔ Caja de prestamos imprimir recibo del prestamo @done (22-06-21 18:26)
   --lap|san|pcc|gdl
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar Caja campos',247,false,'caja_chica/modificar_caja_campos/','edit',false);
 ✔ En ordenes poner el campo de piezas opcional, y hacer un reporte con filtro de fechas y código de área @done (22-06-21 19:38)
   -- lap|san|pcc|gdl
   ALTER TABLE public.compras_requisicion_productos ADD COLUMN piezas double precision DEFAULT 0;
   ALTER TABLE public.compras_productos ADD COLUMN piezas double precision DEFAULT 0;
      INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Compras X Piezas',367,true,'catalogos_sft/rpt_codigos_compras_piezas/','print',true);
 ✔ Descargas masivas de remisiones @done (22-07-06 13:31)
   -- lap|san|pcc
     ALTER TABLE public.facturacion_otrosdatos ADD COLUMN orden_compra character varying(50) COLLATE pg_catalog."default";
 ☐ Nomina corona
   - catalogo de ranchos
   - catalogo de tablas por rancho, numero de he
   - catalogo de labores con precio de pago
   - Apartado para capturar las actividades diaras ver foto, opcion de modificar actvidades ya registradas
   - Reportes de costos de nomina
   - Reporte de avances de labores por rancho
   - Reporte concentrado de sueldo por trabajador
   - Imprimir formato de trabajadores por rancho, asignarle al trabajador el rancho
 ✔ Agregar imágenes a las ordenes de compra @done (22-07-06 13:31)
   --lap|san|pcc
   ALTER TABLE public.compras_requisicion ADD COLUMN img_gas character varying(200) COLLATE pg_catalog."default" DEFAULT NULL::character varying;
   ALTER TABLE public.compras_ordenes ADD COLUMN img_gas character varying(200) COLLATE pg_catalog."default" DEFAULT NULL::character varying;

 ✔ isr factura @done (22-05-31 14:05)
   -- pcc|lap|san
   ALTER TABLE public.facturacion ADD COLUMN isr double precision DEFAULT 0;
   ALTER TABLE public.facturacion_productos ADD COLUMN isr double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.facturacion_productos ADD COLUMN porcentaje_isr double precision NOT NULL DEFAULT 0;
 ☐ Reporte de combustible meter los servicios (reporte servicios Reporte Gasto de Activos)
 ☐ Nomina agregar a los trabajadores, el tipo de turno recibo se imprima
 ☐ Crear listado de ordenes de compra frutas y ligarlos a factura, que salga en el texto de la factura de limon, como la hoja
 ☐ CFDI 4.0
   -- lap|san|pcc
   ALTER TABLE public.clientes ADD COLUMN regimen_fiscal character varying(100) COLLATE pg_catalog."default";
   INSERT INTO otros.c_regimen_fiscal ("c_RegimenFiscal", nombre, tipo_persona, created_at, updated_at) VALUES ('626', 'Régimen Simplificado de Confianza', 'fi', '2022-01-01 14:20:10', '2022-01-01 14:20:10');
   INSERT INTO otros.c_regimen_fiscal ("c_RegimenFiscal", nombre, tipo_persona, created_at, updated_at) VALUES ('625', 'Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas', 'fi', '2022-01-01 14:20:10', '2022-01-01 14:20:10');
 ✔ etiqueta 50x25 @done (22-03-16 08:44)
   -- pcc|lap|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Etiquetas',128,true,'etiquetas/','qrcode',true);
 ✔ Poliza diario gastos y egreso gastos meter ret 1.25 @done (22-03-16 08:44)
 ✔ Reporte de las etiquetas de salidas de almacen, entregadas y devueltas @done (22-04-06 09:11)
 ✔ Poner separacion por registro patronal en cuentas compaq y poliza de nomina @done (22-04-06 12:29)
   -- pcc|lap|san
   ALTER TABLE cuentas_contpaq ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default";
   UPDATE cuentas_contpaq
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, SPLIT_PART(registro_patronal, '|', 1) AS registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE cuentas_contpaq.id_empresa=subquery.id_empresa;
 ✔ Reporte de listado de empleados, que ponga los datos de la nomina @done (22-04-06 17:05)
   -- lap|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Acumulado Nominas',184,TRUE,'nomina_fiscal/nominas_empleados/','print',TRUE);
 ☐ En produccion de materiales crear un tipo de produccion que regrese al inventario y descuenta cajas
 ✔ Nomina registros patronales @done (22-03-09 14:16)
   -- pcc|lap|san
   ALTER TABLE empresas ALTER COLUMN registro_patronal TYPE character varying(200);
   ALTER TABLE public.usuarios ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default";
   ALTER TABLE public.nomina_fiscal ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default";
   UPDATE usuarios
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE usuarios.id_empresa=subquery.id_empresa AND usuarios.user_nomina = 't';
   UPDATE nomina_fiscal
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE nomina_fiscal.id_empresa=subquery.id_empresa;
   UPDATE nomina_fiscal SET registro_patronal = '' WHERE registro_patronal IS NULL;
   ALTER TABLE nomina_fiscal ALTER COLUMN registro_patronal SET NOT NULL;
   ALTER TABLE public.nomina_fiscal DROP CONSTRAINT nomina_fiscal_pkey;
   ALTER TABLE public.nomina_fiscal ADD CONSTRAINT nomina_fiscal_pkey PRIMARY KEY (id_empleado, id_empresa, anio, semana, registro_patronal);
   ALTER TABLE public.nomina_fiscal_guardadas ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying;
   UPDATE nomina_fiscal_guardadas
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE nomina_fiscal_guardadas.id_empresa=subquery.id_empresa;
   ALTER TABLE public.nomina_fiscal_guardadas DROP CONSTRAINT nomina_fiscal_guardadas_pkey;
   ALTER TABLE public.nomina_fiscal_guardadas ADD CONSTRAINT nomina_fiscal_guardadas_pkey PRIMARY KEY (id_empresa, anio, semana, tipo, registro_patronal);
   ALTER TABLE public.nomina_ptu ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying;
    UPDATE nomina_ptu
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE nomina_ptu.id_empresa=subquery.id_empresa;
    ALTER TABLE public.nomina_ptu DROP CONSTRAINT nomina_ptu_pkey;
    ALTER TABLE public.nomina_ptu ADD CONSTRAINT nomina_ptu_pkey PRIMARY KEY (id_empleado, id_empresa, anio, semana, registro_patronal);
    ALTER TABLE public.nomina_aguinaldo ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying;
    UPDATE nomina_aguinaldo
      SET registro_patronal = subquery.registro_patronal
      FROM (SELECT id_empresa, registro_patronal
            FROM empresas WHERE registro_patronal <> '') AS subquery
      WHERE nomina_aguinaldo.id_empresa=subquery.id_empresa;
    ALTER TABLE public.nomina_aguinaldo DROP CONSTRAINT nomina_aguinaldo_pkey;
    ALTER TABLE public.nomina_aguinaldo ADD CONSTRAINT nomina_aguinaldo_pkey PRIMARY KEY (id_empleado, id_empresa, anio, semana, registro_patronal);
    -- lap|san
    ALTER TABLE public.finiquito ADD COLUMN registro_patronal character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying;
    UPDATE finiquito SET registro_patronal = Coalesce(cfdi_ext->>'registroPatronal', '');


 ✔ Poner en polizas la opcion de retencion del 1.25, que lo puedan asignar, @done (22-02-07 13:22)
   - poliza diario -> producto : poner el importe sin la retencion en el producto, en el acumulado del proveedor poner el importe menos la retención, la diferencia del importe de la retencion poner la cuenta
   - poliza egreso ->
 ✔ Caja 6 y 2 @done (22-02-02 18:49)
   -- pcc|san|lap
   INSERT INTO public.cajachicas(no_caja, nombre, presupuesto) VALUES ('6','Caja Plasticos Gdl',50000);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Caja Plasticos Gdl',247,true,'caja_chica/caja6/','usd',true);
   ALTER TABLE public.cajachica_gastos ADD COLUMN diferencia_comp_gasto double precision DEFAULT 0;

 ✔ Proveedores retencion bascula @done (22-01-13 21:23)
   -- pcc|san|lap
   ALTER TABLE public.proveedores ADD COLUMN ret_isr boolean DEFAULT false;
   ALTER TABLE public.bascula ADD COLUMN ret_isr double precision DEFAULT 0;
   ALTER TABLE public.bascula ADD COLUMN ret_isr_porcent double precision DEFAULT 0;

 ☐ Sucursales empresas y ordenes de compra
   -- lap|pcc|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('No abrir cortes',247,false,'caja_chica/no_abrir_cortes/','add',false);
    ALTER TABLE public.compras ADD COLUMN id_sucursal integer;
    ALTER TABLE public.compras ADD CONSTRAINT compras_id_sucursal_fkey FOREIGN KEY (id_sucursal)
      REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
      ON UPDATE CASCADE
      ON DELETE CASCADE;
   -- lap|san|pcc
   CREATE TABLE public.empresas_sucursales
      (
          id_sucursal serial NOT NULL,
          id_empresa integer NOT NULL,
          nombre_fiscal character varying(140) COLLATE pg_catalog."default" NOT NULL,
          calle character varying(60) COLLATE pg_catalog."default",
          no_exterior character varying(8) COLLATE pg_catalog."default",
          no_interior character varying(8) COLLATE pg_catalog."default",
          colonia character varying(60) COLLATE pg_catalog."default",
          localidad character varying(60) COLLATE pg_catalog."default",
          municipio character varying(60) COLLATE pg_catalog."default",
          estado character varying(60) COLLATE pg_catalog."default",
          pais character varying(60) COLLATE pg_catalog."default" DEFAULT 'MEXICO'::character varying,
          cp character varying(12) COLLATE pg_catalog."default",
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT empresas_sucursales_pkey PRIMARY KEY (id_sucursal),
          CONSTRAINT empresas_sucursales_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE public.empresas_sucursales OWNER to programa;
   INSERT INTO public.empresas_sucursales(id_empresa, nombre_fiscal) VALUES (12, 'Tecoman'),(12, 'Guadalajara');
   ALTER TABLE public.compras_requisicion ADD COLUMN id_sucursal integer;
   ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_sucursal_fkey FOREIGN KEY (id_sucursal)
      REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
      ON UPDATE CASCADE
      ON DELETE CASCADE;
   ALTER TABLE public.compras_ordenes ADD COLUMN id_sucursal integer;
   ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_sucursal_fkey FOREIGN KEY (id_sucursal)
      REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
      ON UPDATE CASCADE
      ON DELETE CASCADE;
   ALTER TABLE public.cajachica_gastos ADD COLUMN id_sucursal integer;
   ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_sucursal_fkey FOREIGN KEY (id_sucursal)
      REFERENCES public.empresas_sucursales (id_sucursal) MATCH SIMPLE
      ON UPDATE CASCADE
      ON DELETE CASCADE;

 ✔ Nomina infonacot @done (21-12-15 16:08)
   -- pcc|san|lap
   ALTER TABLE public.usuarios ADD COLUMN fonacot integer DEFAULT 0;

 ☐ Agregar en los productos de almacen para ligarlos con las clasificaciones de facturacion y cuando facture agroinsumo cree una orden de compra con los productos facturados
    -- pcc|san|lap
    CREATE TABLE otros.existencias_limon_gastos
        (
            id_gasto bigserial NOT NULL,
            concepto character varying(500) COLLATE pg_catalog."default" NOT NULL,
            monto double precision NOT NULL DEFAULT (0)::double precision,
            fecha date NOT NULL,
            folio character varying(40) COLLATE pg_catalog."default" NOT NULL DEFAULT NULL::character varying,
            no_caja integer NOT NULL DEFAULT 1,
            id_area bigint,
            id_cat_codigos bigint,
            reposicion boolean NOT NULL DEFAULT false,
            no_impresiones integer NOT NULL DEFAULT 0,
            id_usuario bigint,
            fecha_creacion timestamp without time zone DEFAULT now(),
            folio_sig bigint,
            status boolean NOT NULL DEFAULT true,
            nombre character varying(130) COLLATE pg_catalog."default",
            fecha_cancelado date,
            folio_ant bigint,

            id_compra bigint,
            id_areac integer,
            id_rancho bigint,
            id_centro_costo bigint,
            id_activo bigint,
            tipo character varying(5) COLLATE pg_catalog."default" NOT NULL DEFAULT 'g'::character varying,
            fecha_compro_gasto date,
            monto_ini double precision DEFAULT 0,
            CONSTRAINT existencias_limon_gastos_pkey PRIMARY KEY (id_gasto),
            CONSTRAINT existencias_limon_gastos_id_areac_fkey FOREIGN KEY (id_area)
                REFERENCES public.areas (id_area) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE SET NULL,
            CONSTRAINT existencias_limon_gastos_id_cat_codigos_fkey FOREIGN KEY (id_cat_codigos)
                REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE SET NULL,
            CONSTRAINT existencias_limon_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
                REFERENCES public.usuarios (id) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
        ) TABLESPACE pg_default;
        ALTER TABLE otros.existencias_limon_gastos OWNER to programa;
        COMMENT ON COLUMN otros.existencias_limon_gastos.id_areac
            IS 'Area de bascula = Cultivos';
        COMMENT ON COLUMN otros.existencias_limon_gastos.id_rancho
            IS 'Areas de aplicacion = ranchos, lineas, etc';
        COMMENT ON COLUMN otros.existencias_limon_gastos.tipo
            IS 'g:gastos, gc: gastos por comprobar, rg: reposicion de gastos, pre: pregastos';
        COMMENT ON COLUMN otros.existencias_limon_gastos.id_compra
            IS 'id del gasto ligado, este tipo de gasto (de caja) no se tomaria en cuenta para los reportes';

 ✔ En reporte de ieps (devoluciones_iva/rpt_ieps) poner el mismo reporte sacando los datos de las facturas, @done (21-10-27 14:30)
   en ese mismo reporte pero de compras cuando son productos con presentacion multiplica de nuevo la cantidad de la precentacion
   -- lap|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de IEPS ventas',501,true,'devoluciones_iva/rpt_ieps_ventas/','print',true);
 ✔ En produccion poner imprimir el listado de lotes capturados @done (21-10-27 12:31)
 ✔ Poner en la poliza de nomina la cuenta de descuento de pension alimenticia Cta 21112000 @done (21-09-23 15:29)
 ✔ Reporte de limon, Agregar un cuadro Devolucion de fruta igual que la de compra de fruta empacada @done (21-09-29 11:51)
   -- pcc|san|lap
      CREATE TABLE otros.existencias_limon_devolucion_fruta (
            id bigserial NOT NULL,
            id_unidad integer NOT NULL,
            id_area integer NOT NULL DEFAULT 2,
            id_calibre integer,
            fecha date NOT NULL,
            no_caja integer NOT NULL DEFAULT 1,
            costo double precision NOT NULL DEFAULT 0,
            kilos double precision NOT NULL DEFAULT 0,
            cantidad double precision NOT NULL DEFAULT 0,
            importe double precision NOT NULL DEFAULT 0,
            CONSTRAINT existencias_limon_devolucion_fruta_pkey PRIMARY KEY (id),
            CONSTRAINT existencias_limon_devolucion_fruta_id_area_fkey FOREIGN KEY (id_area)
                REFERENCES public.areas (id_area) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE,
            CONSTRAINT existencias_limon_devolucion_fruta_id_calibre_fkey FOREIGN KEY (id_calibre)
                REFERENCES public.calibres (id_calibre) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE,
            CONSTRAINT existencias_limon_devolucion_fruta_id_unidad_fkey FOREIGN KEY (id_unidad)
                REFERENCES public.unidades (id_unidad) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
        ) TABLESPACE pg_default;
      ALTER TABLE otros.existencias_limon_devolucion_fruta OWNER to programa;
      COMMENT ON TABLE otros.existencias_limon_devolucion_fruta IS 'Cuando regresan fruta de una venta';
 ✔ En reporte de costo de limon hacer los cambios que tryana comenta en el what @done (21-09-23 22:54)
   -- pcc|san|lap
     ALTER TABLE public.rastria_rendimiento_clasif ADD COLUMN fruta_com boolean DEFAULT false;
     COMMENT ON COLUMN public.rastria_rendimiento_clasif.fruta_com IS 'Indica si es fruta comprada ya empacada';
     CREATE TABLE otros.existencias_limon_compra_fruta (
          id bigserial NOT NULL,
          id_unidad integer NOT NULL,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          costo double precision NOT NULL DEFAULT 0,
          kilos double precision NOT NULL DEFAULT 0,
          cantidad double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL DEFAULT 0,
          id_area integer NOT NULL DEFAULT 2,
          id_calibre integer,
          CONSTRAINT existencias_limon_compra_fruta_pkey PRIMARY KEY (id),
          CONSTRAINT existencias_limon_compra_fruta_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT existencias_limon_compra_fruta_id_calibre_fkey FOREIGN KEY (id_calibre)
              REFERENCES public.calibres (id_calibre) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT existencias_limon_compra_fruta_id_unidad_fkey FOREIGN KEY (id_unidad)
              REFERENCES public.unidades (id_unidad) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
    ALTER TABLE otros.existencias_limon_compra_fruta OWNER to programa;
    COMMENT ON TABLE otros.existencias_limon_compra_fruta IS 'Compra de fruta empacada';
 ☐ Reporte de rotación de personal
     usuarios_historial => 'Finiquito' - Despidos ; 'Activado del listado de empleados', 'Fecha de entrada' - Reactivaciones
   -- pcc
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Rotación de Personal',184,true,'nomina_fiscal/rpt_rotacion_personal/','print',true);
 ✔ Poner en nomina descuento pension alimenticia @done (21-09-13 20:32)
   -- pcc|san|lap
   ALTER TABLE public.usuarios ADD COLUMN p_alimenticia integer DEFAULT 0;

 ✔ Reporte de acumulado de ventas como la hoja (reporte productos facturados base) @done (21-08-28 12:12)
   -- lap|pcc|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Ventas Acumulado',362,true,'facturacion/ventasAcumulado/','print',true);
 ✔ Revisar la poliza de nomina de las fotos sale de mas ese monto @done (21-08-27 20:12)
 ☐ HILARIO ALCARAZ REYES no le quitaron la cuenta en semana 26 y se transfirio de mamita y plasticos, el es de empaque
 ✔ Poner nombre de la empresa en vales de gasolina de ordenes de compra maria jose @done (21-08-25 16:20)
 ✔ Acomodar reporte de limon, que muestre la existencia anterior @done (21-08-11 13:04)
   -- lap|san|pcc
   CREATE TABLE otros.existencias_limon
    (
        fecha date NOT NULL,
        no_caja integer NOT NULL,
        id_area integer NOT NULL,
        CONSTRAINT existencias_limon_pkey PRIMARY KEY (fecha, no_caja, id_area)
    ) TABLESPACE pg_default;
    ALTER TABLE otros.existencias_limon OWNER to programa;
   INSERT INTO otros.existencias_limon (fecha, no_caja, id_area) SELECT distinct On(fecha) fecha, no_caja, id_area FROM otros.existencias_limon_existencia
 ✔ Crear reporte de ieps como la imagen de alondra @done (21-08-11 16:06)
   -- lap|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de IEPS',501,true,'devoluciones_iva/rpt_ieps/','print',true);

 ✔ Poner en el listado de ordenes de compra la factura ligada, y en compras las ordenes @done (21-07-28 12:46)
 ✔ En ligar compras y gastos (crear compra), poner fecha de carga de poliza y en polizas tomar esa fecha, en ver compras poner fecha para que se edite @done (21-07-28 09:59)
   -- pcc|lap|san
   ALTER TABLE public.compras ADD COLUMN fecha_poliza timestamp without time zone;
   UPDATE public.compras SET fecha_poliza=fecha;
   -- lap|san|pcc
   ALTER TABLE public.compras DROP COLUMN fecha_poliza;
   ALTER TABLE public.compras ADD COLUMN fecha_factura timestamp without time zone;
   UPDATE public.compras SET fecha_factura=fecha;
 ✔ Bodega gdl acomodar el diseño y poner estado de resultado en lugar de importes @done (21-07-14 08:08)
 ✔ En cuentas por cobrar de ESJ Bodega si ponen un dia que salga el estado de resultados de la bodega de ese dia @done (21-07-14 08:08)
 ☐ Caja 4
  Poner apartado que diga efectivo bodega gdl
  Nombre, Concepto y Cantidad, casilla de recivido
  poner privilegio para que solo pueda registrar bales
  -- lap|san|pcc
  CREATE TABLE public.cajachica_bodega_gdl
    (
        id_bodega bigserial NOT NULL,
        id_usuario bigint,
        fecha date NOT NULL,
        no_caja integer NOT NULL DEFAULT 1,
        nombre character varying(150) COLLATE pg_catalog."default" NOT NULL,
        concepto character varying(250) COLLATE pg_catalog."default" NOT NULL,
        monto double precision NOT NULL DEFAULT (0)::double precision,
        no_impresiones integer NOT NULL DEFAULT 0,
        fecha_creacion timestamp without time zone DEFAULT now(),
        status BOOLEAN NOT NULL DEFAULT false,
        fecha_recibido date,
        CONSTRAINT cajachica_bodega_gdl_pkey PRIMARY KEY (id_bodega),
        CONSTRAINT cajachica_bodega_gdl_id_usuario_fkey FOREIGN KEY (id_usuario)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE public.cajachica_bodega_gdl OWNER to programa;
  INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Solo Bodega Gdl',464,false,'caja_chica/bodega_gdl/','add',false);

 ☐ Quitar trabajadores de limon
   UPDATE public.usuarios SET tipo='usuario', status='f' WHERE user_nomina = 't' and de_rancho = 'l';
 ✔ Cambios reporte de limon @done (21-07-13 13:40)
  titulo Reporte de ordenes del dia,
  en existencia empacada las que esta en 0 que no salgan, Produccion cambiar a Costo de produccion,
  Calibre produccion en ventas, en ventas el limon industrial que salga en otro apartado abajo,
  en los totales poner titulo Estado de resultado la parte de kg alinearlos a la izq, cambiar DIFERENCIA DE KGS por industrial
  en fletes poner el total de la orden de flete cada una con folio, proveedor,

  Poner apartado industrial que salga la diferencia de kg de la formula y le puedan poner precio de venta, importe.
  En total de importes agregar  (+) industrial

 ✔ Poder repetir lotes en produccion de limon agregando una fecha de corte de limon @done (21-07-13 13:39)
   -- lap|san|pcc
    ALTER TABLE public.rastria_rendimiento ADD COLUMN fecha_lote date NOT NULL DEFAULT now();
    update rastria_rendimiento set fecha_lote = fecha;
 ✔ Modificar la caja de existencia de limon @done (21-06-09 10:26)
   -- pcc|san|lap
     CREATE TABLE otros.existencias_limon_industrial
      (
          id_calibre integer NOT NULL,
          id_unidad integer NOT NULL,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          costo double precision NOT NULL DEFAULT 0,
          kilos double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL DEFAULT 0,
          id_area integer NOT NULL DEFAULT 2,
          CONSTRAINT existencias_limon_industrial_pkey PRIMARY KEY (id_calibre, id_unidad, fecha, no_caja, id_area),
          CONSTRAINT existencias_limon_industrial_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT existencias_limon_industrial_id_calibre_fkey FOREIGN KEY (id_calibre)
              REFERENCES public.calibres (id_calibre) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
              NOT VALID,
          CONSTRAINT existencias_limon_industrial_id_unidad_fkey FOREIGN KEY (id_unidad)
              REFERENCES public.unidades (id_unidad) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
      ALTER TABLE otros.existencias_limon_industrial OWNER to programa;
     ALTER TABLE otros.paletas_salidas_productos ADD COLUMN id_calibre integer;
     ALTER TABLE otros.paletas_salidas_productos ADD CONSTRAINT paletas_salidas_productos_id_calibre_fkey FOREIGN KEY (id_calibre) REFERENCES public.calibres (id_calibre) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE otros.existencias_limon_existencia_piso DROP CONSTRAINT existencias_limon_existencia_piso_pkey;
    ALTER TABLE otros.existencias_limon_existencia_piso ADD COLUMN id bigserial NOT NULL;
    ALTER TABLE otros.existencias_limon_existencia_piso ADD CONSTRAINT existencias_limon_existencia_piso_pkey PRIMARY KEY (id);
    ALTER TABLE otros.existencias_limon_existencia_reproceso DROP CONSTRAINT existencias_limon_existencia_reproceso_pkey;
    ALTER TABLE otros.existencias_limon_existencia_reproceso ADD COLUMN id bigserial NOT NULL;
    ALTER TABLE otros.existencias_limon_existencia_reproceso ADD CONSTRAINT existencias_limon_existencia_reproceso_pkey PRIMARY KEY (id);
    ALTER TABLE otros.existencias_limon_existencia_piso ADD COLUMN id_calibre integer DEFAULT 135;
    ALTER TABLE otros.existencias_limon_existencia_piso ADD CONSTRAINT existencias_limon_existencia_piso_id_calibre_fkey FOREIGN KEY (id_calibre) REFERENCES public.calibres (id_calibre) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE otros.existencias_limon_existencia ADD COLUMN id_area integer NOT NULL DEFAULT 2;
    ALTER TABLE otros.existencias_limon_existencia DROP CONSTRAINT existencias_limon_existencia_pkey;
    ALTER TABLE otros.existencias_limon_existencia ADD CONSTRAINT existencias_limon_existencia_pkey PRIMARY KEY (id_calibre, id_unidad, fecha, no_caja, id_area);
    ALTER TABLE otros.existencias_limon_existencia ADD CONSTRAINT existencias_limon_existencia_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE otros.existencias_limon_produccion ADD COLUMN id_area integer NOT NULL DEFAULT 2;
    ALTER TABLE otros.existencias_limon_produccion ADD CONSTRAINT existencias_limon_produccion_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    CREATE TABLE otros.existencias_limon_existencia_piso
    (
        id_unidad integer NOT NULL,
        fecha date NOT NULL,
        no_caja integer NOT NULL DEFAULT 1,
        costo double precision NOT NULL DEFAULT 0,
        kilos double precision NOT NULL DEFAULT 0,
        cantidad double precision NOT NULL DEFAULT 0,
        importe double precision NOT NULL DEFAULT 0,
        id_area integer NOT NULL DEFAULT 2,
        CONSTRAINT existencias_limon_existencia_piso_pkey PRIMARY KEY (id_unidad, fecha, no_caja, id_area),
        CONSTRAINT existencias_limon_existencia_piso_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT existencias_limon_existencia_piso_id_unidad_fkey FOREIGN KEY (id_unidad)
            REFERENCES public.unidades (id_unidad) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE otros.existencias_limon_existencia_piso OWNER to programa;
    CREATE TABLE otros.existencias_limon_existencia_reproceso
    (
        id_calibre integer NOT NULL,
        id_unidad integer NOT NULL,
        id_area integer NOT NULL DEFAULT 2,
        fecha date NOT NULL,
        no_caja integer NOT NULL DEFAULT 1,
        costo double precision NOT NULL DEFAULT 0,
        kilos double precision NOT NULL DEFAULT 0,
        cantidad double precision NOT NULL DEFAULT 0,
        importe double precision NOT NULL DEFAULT 0,
        CONSTRAINT existencias_limon_existencia_reproceso_pkey PRIMARY KEY (id_calibre, id_unidad, fecha, no_caja, id_area),
        CONSTRAINT existencias_limon_existencia_reproceso_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT existencias_limon_existencia_reproceso_id_calibre_fkey FOREIGN KEY (id_calibre)
        REFERENCES public.calibres (id_calibre) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
        CONSTRAINT existencias_limon_existencia_reproceso_id_unidad_fkey FOREIGN KEY (id_unidad)
            REFERENCES public.unidades (id_unidad) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE otros.existencias_limon_existencia_reproceso OWNER to programa;
    CREATE TABLE otros.existencias_limon_descuentos_ventas
    (
        id bigserial NOT NULL,
        id_area integer NOT NULL DEFAULT 2,
        fecha date NOT NULL,
        no_caja integer NOT NULL DEFAULT 1,
        nombre character varying(150) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
        descripcion character varying(250) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
        cantidad double precision NOT NULL DEFAULT 0,
        costo double precision NOT NULL DEFAULT 0,
        importe double precision NOT NULL DEFAULT 0,
        tipo character varying(5) COLLATE pg_catalog."default" NOT NULL DEFAULT 'cv'::character varying,
        CONSTRAINT existencias_limon_descuentos_ventas_pkey PRIMARY KEY (id),
        CONSTRAINT existencias_limon_descuentos_ventas_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE otros.existencias_limon_descuentos_ventas OWNER to programa;

    COMMENT ON COLUMN otros.existencias_limon_descuentos_ventas.tipo
        IS 'cv: costo venta, ct: comisiones a terceros';

 ☐ Poder agregar productos en las ordenes de requisiciones
 ✔ Poner obligatorios los campos de bascula: Rancho, Tabla y calidad @done (21-05-26 13:54)
   -- pcc|san|lap
   ALTER TABLE public.bascula ADD COLUMN tabla character varying(100) COLLATE pg_catalog."default";
   CREATE OR REPLACE VIEW public.tablas_bascula AS
   SELECT DISTINCT ON (bascula.tabla) bascula.tabla
     FROM bascula
    ORDER BY bascula.tabla;
    ALTER TABLE public.tablas_bascula OWNER TO programa;
    ALTER TABLE public.compras_salidas ALTER COLUMN ciclo TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN etapa TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN grupo TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN no_secciones TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN metodo_aplicacion TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN tipo_aplicacion TYPE character varying(40);
    ALTER TABLE public.compras_salidas ALTER COLUMN turno TYPE character varying(40);
 ✔ Cambiar los codigos del calibre en produccion lo pase Ceci @done (21-05-17 08:39)
 ✔ Generar los codigos QR de las salidas de almacen con los datos de corona @done (21-05-20 15:22)
   -- pcc|san|lap
   ALTER TABLE public.compras_salidas_productos ADD COLUMN no_etiqueta integer DEFAULT 0;
   ALTER TABLE public.compras_salidas_productos ADD COLUMN retorno_etiqueta integer DEFAULT 0;
   ALTER TABLE public.compras_salidas_productos ADD COLUMN retorno_etiqueta_list json DEFAULT '[]'::json;
   ALTER TABLE otros.recetas_productos ADD COLUMN no_etiqueta integer DEFAULT 0;
   //
   id_producto:13, descripcion:35, unidad_medida:3, cantidad, precio
   medida 2"x1"

 ✔ Autogenerar las boletas ficticias @done (21-05-17 08:39)
    CREACION BOLETAS.xlsx

 ✔ Cambios de cargar recetas corona @done (21-05-13 19:30)
     -- lap|san|pcc
    COMMENT ON COLUMN otros.recetas.a_dds IS 'fecha_programada';
    COMMENT ON COLUMN otros.recetas.a_turno IS 'grupo';
    COMMENT ON COLUMN otros.recetas.a_via IS 'cosecha';
    COMMENT ON COLUMN otros.recetas.a_aplic IS 'tipo_aplicacion';
    COMMENT ON COLUMN otros.recetas.a_equipo IS 'tanque';
    COMMENT ON COLUMN otros.recetas.a_observaciones IS 'volumen';
    ALTER TABLE otros.recetas_productos ADD COLUMN dosis_ha double precision DEFAULT 0;
    -- pcc|san|lap
    ALTER TABLE otros.recetas ADD COLUMN extras json;
 ✔ Póliza nomina diario solo poner prestamos fiscales @done (21-05-05 12:47)
 ✔ Agregar notas de crédito compras de productos que registre salida de almacén automática, y que se puedan agregar notas de crédito como descripción @done (21-04-21 14:04)
 ✔ Reporte Compras por Producto Ordenes descontar la cantidad de las notas de credito registradas @done (21-04-21 17:23)
 ✔ Ajustar la nomina para la integración del programa Corona @done (21-03-26 16:06)
   -- lap|pcc|san
    CREATE TABLE public.nomina_fiscal_monto_real
      (
          id bigserial NOT NULL,
          id_empleado bigint NOT NULL,
          id_empresa integer NOT NULL,
          anio integer NOT NULL,
          semana integer NOT NULL,
          dias_trabajados double precision NOT NULL,
          monto double precision NOT NULL DEFAULT 0,
          bono double precision NOT NULL DEFAULT 0,
          CONSTRAINT nomina_fiscal_monto_real_pkey PRIMARY KEY (id),
          CONSTRAINT nomina_fiscal_monto_real_id_empleado_fkey FOREIGN KEY (id_empleado)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE,
          CONSTRAINT nomina_fiscal_monto_real_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE
              ON DELETE CASCADE
      ) TABLESPACE pg_default;
    ALTER TABLE public.nomina_fiscal_monto_real OWNER to programa;
    COMMENT ON TABLE public.nomina_fiscal_monto_real IS 'Son los datos que se cargan del programa de Corona';
    CREATE INDEX nomina_fiscal_monto_real_pindex ON public.nomina_fiscal_monto_real USING btree (id_empleado ASC NULLS LAST, id_empresa ASC NULLS LAST, anio ASC NULLS LAST, semana ASC NULLS LAST) TABLESPACE pg_default;
    update rastria_rendimiento set certificado = 't' where lote_ext = 1 and id_area = 2;
    ALTER TABLE otros.ranchos ADD COLUMN codigo character varying(20) COLLATE pg_catalog."default";

 ☐ Apartado de nivelacion de producciones
   -- lap
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Nivelar Produccion',456,true,'produccion/nivelar/','bars',false);
 ✔ Formato de papeletas de salida y pallet @done (21-03-11 13:56)
   -- pcc|san|lap
   ALTER TABLE public.rastria_pallets ADD COLUMN folio_int bigint;
   COMMENT ON COLUMN public.rastria_pallets.folio_int IS 'folio interno de sanjorge';
   ALTER TABLE public.rastria_pallets ADD COLUMN certificado character varying(5) COLLATE pg_catalog."default";
   COMMENT ON COLUMN public.rastria_pallets.certificado IS 'N:No certificado, C:Certificado';
   CREATE OR REPLACE VIEW public.rastria_pallets_lista
       AS
       SELECT rp.id_pallet,
          rp.folio,
          date(rp.fecha) AS fecha,
          rp.no_cajas,
          rp.status,
          COALESCE(sum(rpr.cajas), 0::bigint) AS cajas,
          rp.no_cajas - COALESCE(sum(rpr.cajas), 0::bigint) AS cajas_faltantes,
          rp.id_cliente,
          rp.no_hojas,
          rp.kilos_pallet,
          rp.calibre_fijo,
          a.id_area,
          a.nombre AS nombre_area,
          rp.folio_int,
          rp.certificado
         FROM rastria_pallets rp
           LEFT JOIN rastria_pallets_rendimiento rpr ON rp.id_pallet = rpr.id_pallet
           LEFT JOIN areas a ON a.id_area = rp.id_area
        GROUP BY rp.id_pallet, rp.folio, rp.fecha, rp.no_cajas, rp.status, rp.id_cliente, rp.no_hojas, rp.kilos_pallet, a.id_area
        ORDER BY rp.folio;

 ✔ Reporte de movimientos, poner uta tabla de Rendimiento x calidad, kilos de cada calidad y % de los kilos totales @done (21-02-25 13:31)
 ✔ Reporte Entrada de Piña, poner una tabla de Rendimiento x melga y kilos de cada una. @done (21-02-25 14:30)
   Poner una tabla abajo de las boletas que no tengan asignado los datos de las melgas.
   En el excel los títulos están mal
 ✔ En producción de soluciones poner los códigos de area, cultivo, centros costo y que las salidas se registren esos códigos @done (21-02-24 11:10)
 ✔ Acomodar los prestamos de nomina y que salgan en caja de prestamos @done (21-02-24 11:10)
    -- pcc|lap|san
    COMMENT ON COLUMN public.nomina_prestamos.tipo IS 'fi: fiscal (solo de nomina), ef: efectivo (mostrar en caja), mt: materiales, efd: efectivo directo (mostrar en caja sin afectarla)';
    ALTER TABLE otros.cajaprestamo_efectivo ADD COLUMN saldo_prest_fijo double precision NOT NULL DEFAULT 0;
 ✔ Crear la empresa de plásticos con sucursal y series @done (20-11-09 22:03) pcc|san|lap
     ALTER TABLE public.empresas ADD COLUMN sucursal character varying(130) COLLATE pg_catalog."default";
 ☐ Poner el calculo mensual en nominas
   1. Resta el isr de la tabla menos el sub de la tabla mensual y si es < 0 se pone en subsidio si es > 0 se pone en isr de la semana
   2. Si el subsidio causado de la tabla mensual es < al subsidio causado de las semanas pasadas (se usan los 4 conceptos de ajuste)
      Percepcion
        008 va el subsidio pagado de las semanas pasadas
        007 va el isr antes de subsidio de las emanas pasadas
      Deducciones
        071 va el subsidio pagado de las semanas pasadas
        107 va el subsidio causado de las semanas pasadas
   3. Si el subsidio causado de la tabla mensual es > al subsidio causado de las semanas pasadas (se usan 1 concepto de ajuste)
      Percepcion
        008 -
        007 -
      Deducciones
        071 va el subsidio pagado de las semanas pasadas
        107 -

   -- pcc|san|lap
   CREATE TABLE public.nomina_mensual_art_113
      (
          id_art_113 serial NOT NULL,
          lim_inferior double precision NOT NULL DEFAULT 0,
          lim_superior double precision NOT NULL DEFAULT 0,
          cuota_fija double precision NOT NULL DEFAULT 0,
          porcentaje double precision NOT NULL DEFAULT 0,
          anio integer DEFAULT 2020,
          CONSTRAINT nomina_mensual_art_113_pkey PRIMARY KEY (id_art_113)
      )
      TABLESPACE pg_default;
      ALTER TABLE public.nomina_mensual_art_113 OWNER to programa;

      CREATE TABLE public.nomina_mensual_subsidios
      (
          id_subsidio serial NOT NULL,
          de double precision NOT NULL DEFAULT 0,
          hasta double precision NOT NULL DEFAULT 0,
          subsidio double precision NOT NULL DEFAULT 0,
          anio integer DEFAULT 2020,
          CONSTRAINT nomina_mensual_subsidios_pkey PRIMARY KEY (id_subsidio)
      )
      TABLESPACE pg_default;
      ALTER TABLE public.nomina_mensual_subsidios OWNER to programa;
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (0.01, 578.52, 0.00, 1.92, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (578.53, 4910.18, 11.11, 6.40, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (4910.19, 8629.20, 288.33, 10.88, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (8629.21, 10031.07, 692.96, 16.00, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (10031.08, 12009.94, 917.26, 17.92, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (12009.95, 24222.31, 1271.87, 21.36, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (24222.32, 38177.69, 3880.44, 23.52, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (38177.70, 72887.50, 7162.74, 30.00, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (72887.51, 97183.33, 17575.69, 32.00, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (97183.34, 291550.00, 25350.35, 34.00, 2020);
    INSERT INTO public.nomina_mensual_art_113(lim_inferior, lim_superior, cuota_fija, porcentaje, anio) VALUES (291550.01, 9999999.00, 91435.02, 35.00, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (0.01, 1768.96, 407.02, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (1768.97, 2653.38, 406.83, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (2653.39, 3472.84, 406.62, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (3472.85, 3537.87, 392.77, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (3537.88, 4446.15, 382.46, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (4446.16, 4717.18, 354.23, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (4717.19, 5335.42, 324.87, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (5335.43, 6224.67, 294.63, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (6224.68, 7113.90, 253.54, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (7113.91, 7382.33, 217.61, 2020);
    INSERT INTO public.nomina_mensual_subsidios(de, hasta, subsidio, anio) VALUES (7382.34, 999999.00, 0.00, 2020);

 ☐ En salidas de almacén poner opción de reutilizar compra cuando este cancelada, cargar todos los datos al formulario
 ☐
 ✔ Caja de tryana cuando se comprueba un gasto y se le pone el check de que es un gasto no se asignan los codigos @done (20-11-09 15:34)
 ✔ acomodar el archivo de banco de banorte de nomina @done (20-11-09 18:24)
 ☐
 ✔ Revisar reporte ueps con almacen y general no cuadra @done (20-11-09 18:24)
 ✔ Recetas en surtir productos, poner opcion para quitar los productos no surtidos @done (20-10-05 20:09)
   -- pcc|san|lap
    ALTER TABLE otros.recetas_productos ADD COLUMN quitar boolean NOT NULL DEFAULT false;
    COMMENT ON COLUMN otros.recetas_productos.quitar IS 'Es un status, si es TRUE indica que ese producto se quito de surtir recetas (no se surtio), si es FALSE indica que se puede surtir o si id_requisicion no es null ya se surtio';
    ALTER TABLE otros.recetas ALTER COLUMN a_etapa TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_ciclo TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_dds TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_turno TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_via TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_aplic TYPE character varying(40) COLLATE pg_catalog."default";
    ALTER TABLE otros.recetas ALTER COLUMN a_equipo TYPE character varying(40) COLLATE pg_catalog."default";
 ✔ Nomina banorte @done (20-10-01 16:45)
   -- pcc|san|lap
     ALTER TABLE public.usuarios ADD COLUMN no_proveedor_banorte character varying(13) COLLATE pg_catalog."default";
 ✔ Datos @done (20-08-18 18:13)
   -- lap|san|pcc
     INSERT INTO public.calibres(nombre, tipo) VALUES ('EAL2', 'c'), ('REV', 'c');
     INSERT INTO public.calibres(nombre, tipo) VALUES ('AM2', 'c'), ('CAN', 'c');
 ✔ En las ordenes de faltantes que se generan poner que orden fue la anterior @done (20-08-18 17:48)
 ✔ En el reporte de piña meter filtro de melga @done (20-08-18 14:46)
 ✔ En la caja de la bodega agregar un reporte que ponga el estado de resultado por rango de fecha dia x dia @done (20-08-12 22:03)
   -- pcc|san|lap
     ALTER TABLE otros.bodega_efectivo ADD COLUMN totales_json json;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Estado de Resultados',373,true,'bodega_guadalajara/rpt_estado_res/','print',true);
 ☐ Reporte despido de trabajadores en un rango de fecha
 ✔ Reporte de Control de maquinaria en las salidas de combustible, quitar kilometros, el reporte seria hacia adelante (la nueva salida es el horometro inicial y el final de la salida pasada), modificar en control de maquinara observaciones @done (20-08-07 18:18)
 ✔ En control de combustible meter nuevo reporte que ponga el total de litros por empresa @done (20-08-07 18:18)
 ✔ Reporte de total de combustible cargado por area (limon, banana, etc) basado en el rancho que se captura en la salida @done (20-08-07 18:18)
   -- pcc|san|lap
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de combustible Acumulado',341,true,'control_maquinaria/rptcombustibleAcumulado/','print',true);
 ✔ En captura de piña de bascula acomodar el reporte como la hoja @done (20-08-07 12:30)
 ✔ En captura de piña de bascula cambiarlo a que puedan meter varios folios y cada folio con sus estivas (que se puedan repetir) @done (20-08-05 19:05)
   -- lap|san|pcc
      ALTER TABLE otros.bascula_salida_pina_estibas ADD COLUMN id_rancho bigint;
      ALTER TABLE otros.bascula_salida_pina_estibas ADD CONSTRAINT bascula_salida_pina_estibas_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
      UPDATE otros.bascula_salida_pina_estibas SET id_rancho = sp.id_rancho FROM otros.bascula_salida_pina AS sp WHERE sp.id = bascula_salida_pina_estibas.id_salida_pina;
      ALTER TABLE otros.bascula_salida_pina DROP COLUMN id_rancho;
      ALTER TABLE otros.bascula_salida_pina_estibas ADD COLUMN folio bigint;
      UPDATE otros.bascula_salida_pina_estibas SET folio = sp.folio::bigint FROM otros.bascula_salida_pina AS sp WHERE sp.id = bascula_salida_pina_estibas.id_salida_pina;
      ALTER TABLE otros.bascula_salida_pina DROP COLUMN folio;
      ALTER TABLE otros.bascula_salida_pina_estibas DROP CONSTRAINT bascula_salida_pina_estibas_pkey;
      ALTER TABLE otros.bascula_salida_pina_estibas ADD CONSTRAINT bascula_salida_pina_estibas_pkey PRIMARY KEY (id_salida_pina, estiba, folio);
      ALTER TABLE otros.bascula_salida_pina_estibas_centro_costo ADD COLUMN folio bigint;
      UPDATE otros.bascula_salida_pina_estibas_centro_costo SET folio = sp.folio::bigint FROM otros.bascula_salida_pina_estibas AS sp
      WHERE sp.id_salida_pina = bascula_salida_pina_estibas_centro_costo.id_salida_pina AND sp.estiba = bascula_salida_pina_estibas_centro_costo.estiba;
      ALTER TABLE otros.bascula_salida_pina_estibas_centro_costo DROP CONSTRAINT bascula_salida_pina_estibas_centro_costo_pkey;
      ALTER TABLE otros.bascula_salida_pina_estibas_centro_costo ADD CONSTRAINT bascula_salida_pina_estibas_centro_costo_pkey PRIMARY KEY (id_salida_pina, estiba, folio, id_centro_costo);

 ✔ Meter nomina 15nal para una empresa @done (20-07-24 16:22)
 ✔ En los autocomplete de empresas filtrar solo las que tenga en permisos y en las ordenes con tipo de cambio que ponga todos los decimales en la impresión @done (20-07-29 21:46)
 arrendadora la guadalupana
 ✔ En nivelacion ver como hacer que no tarde tanto @done (20-08-03 21:48)
 ✔ En ordenes de requicicion de tipo servicio poner un check para indicar si es orden de taller y cambiar el titulo a Servicio Interno @done (20-08-03 11:34)
 ✔ Faltaron calibres en rastreabilidad (2EC Economico alimonado 2), (EAL Economico alimonado) @done (20-07-22 14:01)
   -- lap|pcc|san
     INSERT INTO public.calibres(nombre, tipo) VALUES ('2EC', 'c'), ('EAL', 'c');
 ✔ En salidas de almacén, el ticket imprimir la segunda copia con un botón @done (20-07-22 12:29)
 ✔ Ver en bascula en la captura de piña que puedan capturar varios folio y varias melgas x estiva, Revisar el reporte @done (20-07-23 14:41)
   -- lap|pcc|san
    ALTER TABLE otros.bascula_salida_pina ADD COLUMN folio_tem character varying(30) COLLATE pg_catalog."default";
    UPDATE otros.bascula_salida_pina SET folio_tem=folio;
    ALTER TABLE otros.bascula_salida_pina DROP COLUMN folio;
    ALTER TABLE otros.bascula_salida_pina RENAME COLUMN folio_tem TO folio;
    CREATE TABLE otros.bascula_salida_pina_estibas_centro_costo
    (
        id_salida_pina bigint NOT NULL,
        estiba bigint NOT NULL,
        id_centro_costo bigint NOT NULL,
        num integer,
        CONSTRAINT bascula_salida_pina_estibas_centro_costo_pkey PRIMARY KEY (id_salida_pina, estiba, id_centro_costo),
        CONSTRAINT bascula_salida_pina_estibas_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        CONSTRAINT bascula_salida_pina_estibas_centro_costo_id_salida_pina_fkey FOREIGN KEY (id_salida_pina)
            REFERENCES otros.bascula_salida_pina (id) MATCH SIMPLE
            ON UPDATE CASCADE
            ON DELETE CASCADE
    ) TABLESPACE pg_default;
    ALTER TABLE otros.bascula_salida_pina_estibas_centro_costo OWNER to programa;
    INSERT INTO otros.bascula_salida_pina_estibas_centro_costo (id_salida_pina, estiba, id_centro_costo, num)
    SELECT id_salida_pina, estiba, id_centro_costo, 1 AS num FROM otros.bascula_salida_pina_estibas;
    ALTER TABLE otros.bascula_salida_pina_estibas DROP COLUMN id_centro_costo;
 ✔ En traspasos de almacen ver como poner una empresa de aplicación para que se cambie de empresa los productos tambien @done (20-07-10 18:32)
 ✔ Poner opcion en empresas para copiar privilegios @done (20-07-17 20:43)
 ✔ Reporte de inventario de almacen como la hoja @done (20-07-15 22:49)
   -- pcc|lap|san
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de inventario 2',369,true,'inventario/rptExistencia2/','print',true);
 ✔ En las ordenes de compra (servicio) que seleccionan el vehiculo y diesel o gasolina, en la impresion del pdf que salga cual fue la ultima compra de combustible de ese vehiculo @done (20-07-09 16:25)
 ✔ Al dejar ordenes con faltantes no pasa los codigos de cultivo, areas y centros de costo, etc al crear la orden automatica @done (20-07-08 17:52)
 ✔ En recetas duplica folio de las ordenes y de recetas @done (20-06-24 12:10)
   -- lap|san|pcc|pct
     CREATE FUNCTION public.insert_compras_salidas_folio()
          RETURNS trigger
          LANGUAGE 'plpgsql'
          COST 100
          VOLATILE NOT LEAKPROOF
      AS $BODY$BEGIN
        declare promedio float;
        BEGIN
          IF NEW.status <> 'n' THEN
            NEW.folio := (SELECT folio+1
                  FROM compras_salidas
                  WHERE status != 'n' AND folio > 0
                  ORDER BY folio DESC
                  LIMIT 1);
          END IF;
        END;
        return NEW;
      END;
      $BODY$;

      ALTER FUNCTION public.insert_compras_salidas_folio()
          OWNER TO programa;
      CREATE TRIGGER tr_insert_compras_salidas_folio
          BEFORE INSERT
          ON public.compras_salidas
          FOR EACH ROW
          EXECUTE PROCEDURE public.insert_compras_salidas_folio();
      INSERT INTO public.calibres(nombre, tipo) VALUES ('VERDE 3', 'c');

 ✔ Al crear las ordenes de requisicion desde recetas, crear por proveedor las requiciciones y agrupar los productos si es el mismo @done (20-06-24 18:10)
 ☐ Salidas de almacen poder quitar productos ya registrados
 ✔ Validar que las salidas de almacen se den si la empresa tiene existencia no la de aplicacion, revisar al dar salidas en recetas @done (20-06-24 14:00)
 ☐ Reporte de productos aplicados en las recetas
 ☐ Acomodar Reporte de existencia de fruta de acuerdo a los nuevos codigos
   -- lap|san|pct|pcc
    UPDATE public.calibres SET status='F' WHERE id_calibre <> 98;
    INSERT INTO public.calibres(nombre) VALUES ('VERDE 4'), ('VERDE 5'), ('VERDE 2'), ('AMC 3,4,5'), ('AMV 3,4,5'), ('ALC 5'), ('ALV 5'), ('2AL 2'), ('EXT 5'), ('PIÑA 5'), ('PIÑA 6'), ('PIÑA 7'), ('PIÑA 8'), ('ECV 3,4,5');
   -- pcc|pct|lap|san
    TRUNCATE otros.existencias_limon_existencia CASCADE;
    TRUNCATE otros.existencias_limon_produccion CASCADE;
    ALTER TABLE otros.existencias_limon_existencia DROP CONSTRAINT existencias_limon_existencia_pkey;
    ALTER TABLE otros.existencias_limon_existencia DROP COLUMN id_clasificacion;
    ALTER TABLE otros.existencias_limon_existencia ADD COLUMN id_calibre integer NOT NULL;
    ALTER TABLE otros.existencias_limon_existencia ADD CONSTRAINT existencias_limon_existencia_pkey PRIMARY KEY (id_calibre, id_unidad, fecha, no_caja);
    ALTER TABLE otros.existencias_limon_existencia ADD CONSTRAINT existencias_limon_existencia_id_calibre_fkey FOREIGN KEY (id_calibre) REFERENCES public.calibres (id_calibre) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE otros.existencias_limon_produccion DROP COLUMN id_clasificacion;
    ALTER TABLE otros.existencias_limon_produccion ADD COLUMN id_calibre integer NOT NULL;
    ALTER TABLE otros.existencias_limon_produccion ADD CONSTRAINT existencias_limon_produccion_id_calibre_fkey FOREIGN KEY (id_calibre) REFERENCES public.calibres (id_calibre) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   -- pcc|lap|san|pct
    ALTER TABLE public.calibres ADD COLUMN tipo character varying(2) COLLATE pg_catalog."default" DEFAULT 't'::character varying;
    COMMENT ON COLUMN public.calibres.tipo IS 't: tamaño, c: calibre';
    UPDATE public.calibres SET tipo='c' WHERE status = 't';
    UPDATE public.calibres SET status = 't' WHERE status = 'f';
    UPDATE public.calibres SET nombre = 'NO' WHERE id_calibre = 99;
    UPDATE public.calibres SET status = 'f' WHERE id_calibre in(89,90,91,92,93,94,95,96,97,50,54,64);
    COMMENT ON COLUMN public.rastria_rendimiento_clasif.id_calibre IS 'Es el tamaño del cliente (esta cambiado con id_size)';
    COMMENT ON COLUMN public.rastria_rendimiento_clasif.id_size IS 'Es el calibre del cliente (esta cambiado con id_calibre)';

 ✔ Agregar reporte de lo que se captura en bascula de piña @done (20-06-17 21:58)
   -- pcc|san|lap|pct
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Entrada de Piña', 365, true, 'bascula/rpt_ent_pina/', 'print', true);
 ✔ Imprimir el listado de productos con el color @done (20-06-18 14:14)
 ✔ Checar PTU @done (20-05-27 11:59)
 ✔ Crear un reporte de ordenes de compra y activos asignados en cada producto que se promedie si seleccionan varios @done (20-06-24 18:11)
   -- lap|pcc|san|pct
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Activos Ordenes',367,True,'compras_ordenes/activosGastos/','print',True);
 ✔ Archivo de banco @done (20-06-08 20:09)
 ✔ Poder imprimir el registro de las boletas en bascula/admin_movimientos @done (20-06-06 11:16)
 ✔ Reporte de compras por producto meter filtros de cultivo y rancho @done (20-06-10 13:08)
   -- lap|san|pcc|pct
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Compras por Producto Ordenes', 367, true, 'inventario/cproductosOrden/', 'print', true);
 ✔ En recetas (pedidos) cuando se creen las ordenes de req que agregue los proveedores de agro insumo (empresa padre) no la de aplicacion y que ponga agro insumo la de aplicacion, @done (20-06-24 18:11)
   revisar que no carga los productos a la requisicion, al dar salidas de almacen desde recetas no asigna la empresa de aplicacion
 ✔ Al reporte de salidas por producto y codigo, poner el color de los productos cuando seleccionen la empresa y agregar el AREA como comento tryana @done (20-05-15 13:12)
 ✔ Reporte vehiculos/combustible_pdf acomodar los campos estan desacomodados @done (20-05-15 21:20)
 ✔ En factura que puedan seleccionar la sustitucion de cfdi en las facturas @done (20-05-15 21:58)
 ☐ fecha de carga y fecha de labor en reporte de combustible
 ✔ Cambio de nombre de produccion de productos @done (20-05-12 13:33)
   -- lap|san|pcc|pct
   UPDATE public.privilegios SET nombre='Producción de soluciones' WHERE nombre='Producción de productos';

 ✔ Reporte de empresas colores @done (20-05-12 13:33)
   -- pcc|lap|san|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Productos por Colores', 366, true, 'productos/rpt_lista_colores/', 'print', true);
 ✔ Iva excento @done (20-05-11 12:33)
   -- pcc|san|lap|pct
   ALTER TABLE public.facturacion_productos ADD COLUMN porcentaje_iva_real character varying COLLATE pg_catalog."default" DEFAULT 0;
   UPDATE public.facturacion_productos SET porcentaje_iva_real = porcentaje_iva::character varying;

 ✔ En las ordenes de compra, poner el titulo de la orden, cuando sea una orden de servicio que puedan poner observación en cada producto y hacer un reporte de Reporte de servicios por proveedor @done (20-05-11 12:33)
   -- pcc|san|lap|pct
   ALTER TABLE public.compras_requisicion_productos ADD COLUMN observaciones character varying(500) COLLATE pg_catalog."default";
   ALTER TABLE public.compras_productos ADD COLUMN observaciones character varying(500) COLLATE pg_catalog."default";
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Servicios por Proveedor',367,true,'inventario/sproveedor/','print',true);
 ✔ Cambiar el nombre del modulo de Producción de productos -> Producción de soluciones @done (20-05-04 11:44)
 ✔ En catalogo de vehículos sanjorge/panel/vehiculos/agregar/ poner campo de millas o km y en el reporte indicar que son millas @done (20-05-04 11:40)
   -- lap|pcc|san|pct
   ALTER TABLE public.compras_vehiculos ADD COLUMN unidad character varying(5) NOT NULL DEFAULT 'km';
 ☐ En las familias de productos ponerle un tipo como en la hoja insumos agrícolas de campo
 ✔ Reporte de de combustible en control de maquinaria que muestre sin empresa el historial del vehiculo y agregar a la tabla en que empresa trabajo @done (20-04-28 16:51)
 ✔ Reporte de vehículos cambiar la fecha de aceptacion por la otra @done (20-04-28 15:50)
 ☐ Reporte de productos por color en cada empresa
 ☐ Generar ticket de salidas de almacen, con ordenes de salida de almacen y que esas se combiertan en salidas de almacen con la imprecion como recetas
 ✔ Acomodar reporte de combustible y agregar odometro @done (20-04-22 14:54)
     -- pcc|san|lap|pct
     ALTER TABLE compras_salidas_combustible RENAME COLUMN odometro TO horometro;
     ALTER TABLE compras_salidas_combustible RENAME COLUMN odometro_fin TO horometro_fin;
     ALTER TABLE public.compras_salidas_combustible ADD COLUMN odometro double precision NOT NULL DEFAULT 0;
     ALTER TABLE public.compras_salidas_combustible ADD COLUMN odometro_fin double precision NOT NULL DEFAULT 0;

 ✔ En ordenes de compra poner la forma de pago (transfer, efectivo) y que se registra la fecha de registro y esa fecha que se tome en las polizas @done (20-04-14 21:06)
     -- pcc|lap|san|pct
     ALTER TABLE public.compras_requisicion ADD COLUMN forma_pago character varying(50) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_ordenes ADD COLUMN forma_pago character varying(50) COLLATE pg_catalog."default";

 ✔ Cuentas por pagar 2 que imprima solo las facturas marcadas @done (20-04-14 17:12)
 ✔ Reporte de existencias de limón @done (20-04-20 21:45)
    -- lap|pcc|san|pct
    ALTER TABLE public.facturacion_productos ADD COLUMN id_calibres integer;
    COMMENT ON COLUMN public.facturacion_productos.id_calibres IS 'Unidad usada en producción';
    ALTER TABLE public.facturacion_productos ADD CONSTRAINT facturacion_productos_id_calibres_fkey FOREIGN KEY (id_calibres) REFERENCES public.calibres (id_calibre) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE public.calibres ADD COLUMN status boolean NOT NULL DEFAULT true;
    -- En la tabla otros.existencias_limon_existencia y otros.existencias_limon_produccion trucar los registros y cambiar id_clasificacion x id_calibre y Pk/Fk.

 ✔ Cambios en ordenes de compra y requisición, proyectos @done (20-04-08 19:29)
   -- pcc|san|lap|pct
   ALTER TABLE public.compras_requisicion ADD COLUMN folio_hoja bigint;
   ALTER TABLE public.compras_requisicion ADD COLUMN uso_cfdi character varying(50) COLLATE pg_catalog."default";
   ALTER TABLE public.compras_ordenes ADD COLUMN folio_hoja bigint;
   ALTER TABLE public.compras_ordenes ADD COLUMN uso_cfdi character varying(50) COLLATE pg_catalog."default";
   ALTER TABLE otros.proyectos ADD COLUMN fecha_inicio date;
   ALTER TABLE otros.proyectos ADD COLUMN fecha_terminacion date;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar Ext',136,FALSE,'compras_ordenes/modificar_ext/','edit',FALSE);

 ✔ En la caja chica en el apartado de comprobar gasto, que muestre todas las ordenes de compra y poner una opcion para indicar que esa orden se registre en gastos generales en lugar de comprobar @done (20-04-01 16:08)
 ☐ Generar archivo de Banorte nomina
 ✔ Poner opcion para desligar remisiones de facturas @done (20-04-04 11:07)
    quitarlo de las tablas facturacion_ventas_remision_pivot,  facturacion_remision_hist
 ✔ Reporte de movimientos de bascula que salga el titulo de la empresa seleccionada @done (20-03-23 18:43)
 ✔ Apartado de producción en almacen que descuente productos e incremente el producido @done (20-03-23 18:43)
     -- pcc|san|lap|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Producción de productos',128,TRUE,'produccion_almacen/','briefcase',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',546,TRUE,'produccion_almacen/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',546,FALSE,'produccion_almacen/cancelar/','ban-circle',FALSE);
     CREATE TABLE public.compras_salidas_produccion
        (
            id_salida bigint NOT NULL,
            id_orden bigint NOT NULL,
            folio bigint NOT NULL,
            no_impresiones_tk integer NOT NULL DEFAULT 0,
            CONSTRAINT compras_salidas_produccion_pkey PRIMARY KEY (id_salida, id_orden),
            CONSTRAINT compras_salidas_produccion_id_orden_fkey FOREIGN KEY (id_orden)
                REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE,
            CONSTRAINT compras_salidas_produccion_id_salida_fkey FOREIGN KEY (id_salida)
                REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
        )
        WITH ( OIDS = FALSE )
        TABLESPACE pg_default;
        ALTER TABLE public.compras_salidas_produccion OWNER to programa;
        COMMENT ON TABLE public.compras_salidas_produccion IS 'Produccion de productos, indica que salida y orden de compra (nivelación)';

 ☐ Modulo de proyectos, seleccionar en ordenes de gastos y servicios, gastos directos y en salidas de almacen, que tenga presupuesto e imprima un reporte de lo gastado
     -- lap|pcc|san|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Proyectos',0,TRUE,'proyectos/','magnet',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',540,TRUE,'proyectos/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',540,FALSE,'proyectos/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',540,FALSE,'proyectos/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',540,FALSE,'proyectos/activar/','ok',FALSE);
     CREATE TABLE otros.proyectos
        (
            id_proyecto bigserial NOT NULL,
            nombre character varying(90) COLLATE pg_catalog."default" NOT NULL,
            presupuesto double precision NOT NULL DEFAULT 0,
            status boolean NOT NULL DEFAULT true,
            id_empresa integer NOT NULL,
            CONSTRAINT proyectos_pkey PRIMARY KEY (id_proyecto),
            CONSTRAINT proyectos_id_empresa_fkey FOREIGN KEY (id_empresa)
                REFERENCES public.empresas (id_empresa) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
        ) WITH (OIDS = FALSE)
        TABLESPACE pg_default;
        ALTER TABLE otros.proyectos OWNER to programa;
     -- pcc|san|lap|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',540,FALSE,'proyectos/imprimir/','file',FALSE);
     ALTER TABLE public.compras ADD COLUMN id_proyecto bigint;
     ALTER TABLE public.compras ADD CONSTRAINT compras_id_proyecto_fkey FOREIGN KEY (id_proyecto) REFERENCES otros.proyectos (id_proyecto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_requisicion ADD COLUMN id_proyecto bigint;
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_proyecto_fkey FOREIGN KEY (id_proyecto) REFERENCES otros.proyectos (id_proyecto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_ordenes ADD COLUMN id_proyecto bigint;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_proyecto_fkey FOREIGN KEY (id_proyecto) REFERENCES otros.proyectos (id_proyecto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_salidas ADD COLUMN id_proyecto bigint;
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_proyecto_fkey FOREIGN KEY (id_proyecto) REFERENCES otros.proyectos (id_proyecto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;

 ✔ Imprimir fac ventas @done (20-03-17 13:26) lap|san|pcc|pct
     CREATE OR REPLACE VIEW public.unidades_unq
         AS
         SELECT DISTINCT ON (unidades.nombre) unidades.nombre,
            unidades.id_unidad,
            unidades.codigo,
            unidades.cantidad,
            unidades.tipo
           FROM unidades
          ORDER BY unidades.nombre;
          ALTER TABLE public.unidades_unq OWNER TO programa;

 ✔ Recetas folio hojas @done (20-03-07 15:49)
    -- pcc|san|pct|lap
    ALTER TABLE otros.recetas ADD COLUMN folio_hoja character varying(15) COLLATE pg_catalog."default";
 ☐ En cuentas por cobrar y pagar poner hacer lo de maria jose otra columna de lo que se vence
    -- lap|pct|pcc|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cuentas por Pagar 2', 128, true,  'cuentas_pagar/cuenta2/',  'money', false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cuentas por Cobrar 2', 69, true,  'cuentas_cobrar/cuenta2/',  'money', false);
 ✔ Reporte de codigos nuevos en salidas de almacen @done (20-03-02 13:45) pcc|lap|san|pct
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Salidas por Producto',  366, true,  'productos_salidas/rpt_salidas_productos/', 'print', true);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Salidas por Codigo',  366, true,  'productos_salidas/rpt_salidas_codigo/', 'print', true);
 ☐ Reporte de Cédula a Detalle de Proveedores que no salgan los pagados
 ✔ Agregar ieps en factura y remisiones @done (20-02-24 20:52)
   -- pct|pcc|san|lap
   ALTER TABLE public.facturacion ADD COLUMN ieps double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.facturacion_productos ADD COLUMN ieps double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.facturacion_productos ADD COLUMN porcentaje_ieps double precision NOT NULL DEFAULT 0;
 ✔ Recetas @done (20-02-24 21:46)
     -- lap|san|pcc|pct
     ALTER TABLE otros.recetas ADD COLUMN id_empresa_ap integer;
      COMMENT ON COLUMN otros.recetas.id_empresa_ap IS 'empresa de aplicacion';
     ALTER TABLE otros.centro_costo ADD COLUMN codigo character varying COLLATE pg_catalog."default";
 ✔ Control de proyectos @done (20-03-23 14:01)
 ✔ Poner en productos de agro insumo que puedan indicar x empresa el color de los productos @done (20-02-17 22:06)
     -- pcc|lap|san|pct
     CREATE TABLE public.productos_color_agro
        (
            id_producto bigint NOT NULL,
            id_empresa integer NOT NULL,
            color character varying(5) COLLATE pg_catalog."default" NOT NULL,
            tipo_apli character varying(5) COLLATE pg_catalog."default" NOT NULL,
            CONSTRAINT productos_color_agro_pkey PRIMARY KEY (id_producto, id_empresa),
            CONSTRAINT productos_color_agro_id_empresa_fkey FOREIGN KEY (id_empresa)
                REFERENCES public.empresas (id_empresa) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE,
            CONSTRAINT productos_color_agro_id_producto_fkey FOREIGN KEY (id_producto)
                REFERENCES public.productos (id_producto) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
        )
        WITH ( OIDS = FALSE ) TABLESPACE pg_default;
        ALTER TABLE public.productos_color_agro OWNER to programa;
        COMMENT ON COLUMN public.productos_color_agro.color IS 'v: verde (organico), a: amarillo (organico opc), r: rojo (no organico)';
        COMMENT ON COLUMN public.productos_color_agro.tipo_apli IS 'n: nutricion, fs: fitosanidad';
 ☐ Generar remisiones al agregar las salidas de almacen cuando sea de agro insumo
     -- lap|pcc|san|pct
     ALTER TABLE public.clientes ADD COLUMN id_empresa_ap integer;
 ☐ Crear nuevo modulo de facturacion para agro insumo que enliste las remisiones para que seleccione a que facturar
 ✔ Poner fecha de contrato en los trabajadores para que notifique @done (20-02-14 20:36) pcc|lap|san|pct
     ALTER TABLE public.usuarios ADD COLUMN fecha_contrato date;
 ✔ Reportes de las hojas de la señora de salidas de almacen, control de combustible @done (20-02-17 19:23) pct|san|pcc|lap
     DROP TABLE public.compras_salidas_combustible;
     CREATE TABLE public.compras_salidas_combustible
          (
              id_combustible bigserial NOT NULL,
              id_salida bigint NOT NULL,
              id_labor integer NOT NULL,
              fecha date NOT NULL DEFAULT now(),
              implemento character varying(80),
              hora_carga time with time zone,
              odometro double precision NOT NULL DEFAULT 0,
              lts_combustible double precision NOT NULL DEFAULT 0,
            precio double precision NOT NULL DEFAULT 0,
              CONSTRAINT compras_salidas_combustible_pkey PRIMARY KEY (id_combustible),
              CONSTRAINT compras_salidas_combustible_id_salida_fkey FOREIGN KEY (id_salida)
                  REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
                  ON UPDATE CASCADE
                  ON DELETE CASCADE,
              CONSTRAINT compras_salidas_combustible_id_labor_fkey FOREIGN KEY (id_labor)
                  REFERENCES public.compras_salidas_labores (id_labor) MATCH SIMPLE
                  ON UPDATE CASCADE
                  ON DELETE CASCADE
          )
          WITH (
              OIDS = FALSE
          )
          TABLESPACE pg_default;
          ALTER TABLE public.compras_salidas_combustible OWNER to programa;
     ALTER TABLE public.compras_salidas_combustible ADD COLUMN odometro_fin double precision;
     ALTER TABLE compras_salidas_combustible ALTER COLUMN id_salida DROP NOT NULL;
     -- ALTER TABLE public.compras_salidas_combustible ADD COLUMN id_activo bigint;

 ✔ En ordenes de servicio poner para que puedan ligar tanto compras, salidas de almacen y gastos de caja @done (20-02-03 17:13)
 ✔ En las ordenes de compra y requicicion poner la empresa en la que se ara la orden solo de la empresa agroinsumo y que genere la orden de
   agro y la orden igualita en la otra empresa seleccionada, que salga impresa en la orden @done (20-01-27 10:29) lap|pct|pcc|san
     ALTER TABLE public.compras_requisicion ADD COLUMN id_empresa_ap integer;
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_empresa_ap_fkey FOREIGN KEY (id_empresa_ap) REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     COMMENT ON COLUMN public.compras_requisicion.id_empresa_ap IS 'id de la empresa en la que se aplicaran los productos';
     ALTER TABLE public.compras_ordenes ADD COLUMN id_empresa_ap integer;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_empresa_ap_fkey FOREIGN KEY (id_empresa_ap) REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     COMMENT ON COLUMN public.compras_ordenes.id_empresa_ap IS 'id de la empresa en la que se aplicaran los productos';
     ALTER TABLE public.compras_ordenes ADD COLUMN id_orden_aplico integer;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_orden_aplico_fkey FOREIGN KEY (id_orden_aplico) REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     COMMENT ON COLUMN public.compras_ordenes.id_orden_aplico IS 'id de la orden relacionadas cuando se crea una a través de Agro insumos (agro se registra la otra y en la otra la de agro)';
     ALTER TABLE public.compras_requisicion ADD COLUMN ids_salidas_almacen character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_ordenes ADD COLUMN ids_salidas_almacen character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras ADD COLUMN ids_salidas_almacen character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_requisicion ADD COLUMN ids_gastos_caja character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_ordenes ADD COLUMN ids_gastos_caja character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras ADD COLUMN ids_gastos_caja character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_salidas ADD COLUMN id_empresa_ap integer;
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_empresa_ap_fkey FOREIGN KEY (id_empresa_ap) REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     COMMENT ON COLUMN public.compras_salidas.id_empresa_ap IS 'id de la empresa en la que se aplicaran los productos';
     ALTER TABLE public.compras_salidas ADD COLUMN tipo character varying(10) COLLATE pg_catalog."default" DEFAULT 's'::character varying;
     COMMENT ON COLUMN public.compras_salidas.tipo IS 's: salida, r: receta, c: combustible';

 ✔ checar en caja 2 lo de pre gastos, y agregar folio del gasto x comprobar @done (20-01-21 13:59) lap|san|pct
     ALTER TABLE public.cajachica_gastos ADD COLUMN folio_ant bigint;
 ✔ En las recetas que se puedan capturar sin formula y que se imprima otra copia como Administrador @done (20-01-21 15:55) lap|san|pct
   ALTER TABLE otros.recetas ALTER COLUMN id_formula DROP NOT NULL;
 ☐ En caja en gastos x comprobar que no borre el gasto si lo comprueban el mismo dia
 ✔ Agregar todas las empresas a dulce @done (20-01-21 17:39)
 ✔ Acomodar reporte de compras por productos @done (20-01-18 16:11)
 ✔ Cambiar en caja chica 5 los titulos en los recibos @done (20-01-13 10:40)
 ☐ Cargar existencias de mamita y gomez a agroinsumos con costo
 ✔ Acomodar ruta de empaque para los xml @done (20-01-14 13:08)
 ✔ En ordenes de servicio poder ligar facturas de compras y mostrarlas en el pdf, tendria que @done (20-01-18 12:24) pct|pcc|san|lap
 seleccionar el proveedor para buscarlas y opcoin a cargar imagen, tambien que salgan esas ordenes de servicio en la caja de tryana
     ALTER TABLE public.compras_requisicion ADD COLUMN ids_compras character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras_ordenes ADD COLUMN ids_compras character varying(100) COLLATE pg_catalog."default";
     ALTER TABLE public.compras ADD COLUMN ids_compras character varying(100) COLLATE pg_catalog."default";
 ✔ Agregar a la caja 2 opcion para capturar gastos @done (20-01-13 18:57) pcc|san|lap
     COMMENT ON COLUMN public.cajachica_gastos.tipo IS 'g:gastos, gc: gastos por comprobar, rg: reposicion de gastos, pre: pregastos';
 ✔ Pasar los productos de mamita y de gomez a agroinsumos @done (20-01-13 10:44)
     SELECT DISTINCT ON(nombre) nombre, *
      FROM (
        SELECT * FROM public.productos
        WHERE id_familia in(4, 35) and status = 'ac' and id_empresa = 3
        UNION
        SELECT * FROM public.productos
        WHERE id_familia in(24, 34) and status = 'ac' and id_empresa = 14
      ) f
      ORDER BY nombre ASC

 ✔ Acomodo de aplicacion de escritorio para ligar el uuid @done (19-11-14 13:34) lap|san|pcc
     ALTER TABLE public.bascula_facturas ADD COLUMN id_pago bigint;
     ALTER TABLE public.bascula_facturas ADD CONSTRAINT bascula_facturas_id_pago_fkey FOREIGN KEY (id_pago) REFERENCES public.bascula_pagos (id_pago) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Continueacion de recetas, control de saldo @done (19-11-05 13:29) pct|pcc|lap|san
     ALTER TABLE otros.recetas_productos ADD COLUMN aplicacion_total_saldo double precision NOT NULL DEFAULT 0;
     ALTER TABLE otros.recetas ADD COLUMN paso character varying(3) NOT NULL DEFAULT 'p'::character varying;
     COMMENT ON COLUMN otros.recetas.paso IS 'p: esta pendiente de salidas (solo registrada), r: ya se registraron salidas, t: terminada ya se entrego todo';
     CREATE TABLE otros.recetas_salidas
        (
          id_recetas bigint NOT NULL,
          id_salida bigint NOT NULL,
          cargas double precision NOT NULL DEFAULT 0,
          CONSTRAINT recetas_salidas_pkey PRIMARY KEY (id_recetas, id_salida),
          CONSTRAINT recetas_salidas_id_recetas_fkey FOREIGN KEY (id_recetas)
              REFERENCES otros.recetas (id_recetas) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT recetas_salidas_id_salida_fkey FOREIGN KEY (id_salida)
              REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE );
        ALTER TABLE otros.recetas_salidas OWNER TO programa;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Salida producto',521,FALSE,'recetas/salida/','ok',FALSE);
     COMMENT ON COLUMN otros.recetas_salidas.cargas IS 'Cargas para lts | No Plantas para kg';
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Lista de salidas',521,FALSE,'recetas/salidas/','ok',FALSE);
     ALTER TABLE otros.recetas ADD COLUMN fecha_aplicacion date DEFAULT now();
     ALTER TABLE compras_salidas ADD COLUMN turno character varying(20);
     ALTER TABLE compras_salidas ALTER COLUMN grupo TYPE character varying(30);
     ALTER TABLE compras_salidas ALTER COLUMN observaciones TYPE character varying(600);
     ALTER TABLE otros.recetas_salidas ADD COLUMN id_bascula bigint;
     ALTER TABLE otros.recetas_salidas ADD CONSTRAINT recetas_salidas_id_bascula_fkey FOREIGN KEY (id_bascula) REFERENCES public.bascula (id_bascula) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Surtir Recetas',521,TRUE,'recetas/surtir/','qrcode',FALSE);
     ALTER TABLE otros.recetas_productos ADD COLUMN id_requisicion bigint;
     COMMENT ON COLUMN otros.recetas_productos.id_requisicion IS 'id de la orden de requisicion';
     ALTER TABLE otros.recetas_productos ADD CONSTRAINT recetas_productos_id_requisicion_fkey FOREIGN KEY (id_requisicion) REFERENCES public.compras_requisicion (id_requisicion) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE otros.recetas_productos ADD COLUMN id_proveedor bigint;
     ALTER TABLE otros.recetas_productos ADD CONSTRAINT recetas_productos_id_proveedor_fkey FOREIGN KEY (id_proveedor) REFERENCES public.proveedores (id_proveedor) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE otros.recetas_productos ADD COLUMN surtir boolean NOT NULL DEFAULT true;
     -- pcc|lap|san
     CREATE TABLE otros.recetas_calendarios
        (
            id bigserial NOT NULL,
            id_area integer NOT NULL,
            nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
            status boolean NOT NULL DEFAULT true,
            CONSTRAINT recetas_calendario_pkey PRIMARY KEY (id)
        ) WITH ( OIDS = FALSE ) TABLESPACE pg_default;
     ALTER TABLE otros.recetas_calendarios OWNER to programa;
     ALTER TABLE otros.recetas ADD COLUMN id_recetas_calendario bigint;
     ALTER TABLE otros.recetas ADD CONSTRAINT recetas_id_recetas_calendario_fkey FOREIGN KEY (id_recetas_calendario) REFERENCES otros.recetas_calendarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Calendario',521,TRUE,'recetas/calendario/','calendar',FALSE);

 ✔ Ligar ordenes de flete papeletas de salida @done (19-10-29 17:40) lap|pcc|pct|san
     CREATE OR REPLACE VIEW public.compras_ordenes_flete_remisiones
         AS
         SELECT t.id_orden,
            t.folio,
            t.id_remision::bigint AS id_remision
           FROM ( SELECT co.id_orden,
                    co.folio,
                    unnest(string_to_array(replace(co.ids_facrem::text, 'f:'::text, ''::text), '|'::text)) AS id_remision
                   FROM compras_ordenes co
                  WHERE co.flete_de::text = 'v'::text AND co.tipo_orden::text = 'f'::text AND (co.status::text = ANY (ARRAY['a'::character varying::text, 'f'::character varying::text])) AND co.ids_facrem IS NOT NULL AND co.ids_facrem::text ~~ 'f:%'::text) t
          WHERE t.id_remision <> ''::text;
        ALTER TABLE public.compras_ordenes_flete_remisiones OWNER TO programa;
        COMMENT ON VIEW public.compras_ordenes_flete_remisiones IS 'Lista de remisiones ligadas a las ordenes de fletes';

 ✔ Apartado para ligar boletas a una factura @done (19-10-24 16:28) lap|pct --- Cancelado
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Facturacion Boletas', 40, true, 'bascula_factura_boletas/', 'flag', false);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',527,TRUE,'bascula_factura_boletas/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',527,FALSE,'bascula_factura_boletas/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',527,FALSE,'bascula_factura_boletas/cancelar/','remove',FALSE);

 ✔ UUID en movimientos de banco @done (19-10-15 13:15) lap|pcc|san|pct
   ALTER TABLE public.banco_movimientos ADD COLUMN uuid character varying;
   ALTER TABLE public.banco_movimientos ADD COLUMN no_certificado character varying;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de movimientos UUID',104,TRUE,'banco/rptMovSinUuid/','print',TRUE);

 ✔ Cambios en reporte de existencia de limon @done (19-10-02 15:53) pct|san|pcc|lap
   ALTER TABLE public.facturacion_otrosdatos ADD COLUMN no_salida_fruta character varying(15);

 ✔ UUID en pagos de bascula @done (19-09-30 16:37) pct|pcc|san|lap
     ALTER TABLE public.bascula_facturas ADD COLUMN uuid character varying;
     ALTER TABLE public.bascula_facturas ADD COLUMN no_certificado character varying;

 ✔ Recetas @done (19-09-20 19:28) pct|pcc|san|lap
   CREATE TABLE otros.formulas
      (
        id_formula bigserial NOT NULL,
        id_empresa integer NOT NULL,
        id_area integer NOT NULL,
        nombre character varying(40),
        folio bigint NOT NULL,
        tipo character varying NOT NULL DEFAULT 'kg'::character varying, -- kg, lts
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT formulas_pkey PRIMARY KEY (id_formula),
        CONSTRAINT formulas_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT formulas_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.formulas OWNER TO programa; COMMENT ON COLUMN otros.formulas.tipo IS 'kg, lts';
   CREATE TABLE otros.formulas_productos
      (
        id_formula bigint NOT NULL,
        id_producto bigint NOT NULL,
        rows integer NOT NULL,
        dosis_mezcla double precision NOT NULL DEFAULT 0,
        percent double precision NOT NULL DEFAULT 0,
        CONSTRAINT formulas_productos_pkey PRIMARY KEY (id_formula, id_producto, rows)
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.formulas_productos OWNER TO programa;
   CREATE TABLE otros.recetas
      (
        id_recetas bigserial NOT NULL,
        id_empresa integer NOT NULL,
        id_realizo bigint NOT NULL,
        id_solicito bigint NOT NULL,
        id_autorizo bigint,
        id_area integer NOT NULL,
        fecha date NOT NULL,
        folio bigint NOT NULL,
        objetico character varying(350),
        semana integer,
        dosis_planta double precision NOT NULL,
        planta_ha double precision NOT NULL,
        ha_neta double precision NOT NULL,
        no_plantas double precision NOT NULL,
        kg_totales double precision NOT NULL,
        a_etapa character varying(20),
        a_ciclo character varying(20),
        a_dds character varying(20),
        a_turno character varying(20),
        a_via character varying(20),
        a_aplic character varying(30),
        a_equipo character varying(30),
        a_observaciones character varying(600),
        status boolean NOT NULL DEFAULT true,
        id_formula bigint NOT NULL,
        CONSTRAINT recetas_pkey PRIMARY KEY (id_recetas),
        CONSTRAINT recetas_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_id_autorizo_fkey FOREIGN KEY (id_autorizo)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_id_formula_fkey FOREIGN KEY (id_formula)
            REFERENCES otros.formulas (id_formula) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_id_realizo_fkey FOREIGN KEY (id_realizo)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_id_solicito_fkey FOREIGN KEY (id_solicito)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.recetas OWNER TO programa;
   CREATE TABLE otros.recetas_productos
      (
        id_receta bigint NOT NULL,
        id_producto bigint NOT NULL,
        rows integer NOT NULL,
        percent double precision NOT NULL DEFAULT 0,
        dosis_mezcla double precision NOT NULL DEFAULT 0,
        aplicacion_total double precision NOT NULL DEFAULT 0,
        precio double precision NOT NULL DEFAULT 0,
        importe double precision NOT NULL DEFAULT 0,
        CONSTRAINT recetas_productos_pkey PRIMARY KEY (id_receta, id_producto, rows),
        CONSTRAINT recetas_productos_id_producto_fkey FOREIGN KEY (id_producto)
            REFERENCES public.productos (id_producto) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT recetas_productos_id_receta_fkey FOREIGN KEY (id_receta)
            REFERENCES otros.recetas (id_recetas) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.recetas_productos OWNER TO programa;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Almacen Recetas',0,TRUE,'#','tasks',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Formulas',514,TRUE,'recetas_formulas/','list-alt',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',515,TRUE,'recetas_formulas/agregar/','plus',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',515,FALSE,'recetas_formulas/modificar/','edit',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',515,FALSE,'recetas_formulas/cancelar/','remove',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',515,FALSE,'recetas_formulas/activar/','ok',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Cuadro de Antigüedad',184,TRUE,'nomina_fiscal/cuadro_antiguedad/','print',TRUE);
   ALTER TABLE public.usuarios ADD COLUMN telefono character varying(20);
   ALTER TABLE otros.recetas ADD COLUMN tipo character varying(4);
   COMMENT ON COLUMN otros.recetas.tipo IS 'kg, lts';
   ALTER TABLE otros.recetas ADD COLUMN ha_bruta double precision;
   ALTER TABLE otros.recetas ADD COLUMN carga1 double precision;
   ALTER TABLE otros.recetas ADD COLUMN carga2 double precision;
   ALTER TABLE otros.recetas ADD COLUMN ph double precision;
   ALTER TABLE otros.recetas ALTER COLUMN dosis_planta DROP NOT NULL;
   ALTER TABLE otros.recetas ALTER COLUMN kg_totales DROP NOT NULL;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Recetas',514,TRUE,'recetas/','list-alt',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',521,TRUE,'recetas/agregar/','plus',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',521,FALSE,'recetas/modificar/','edit',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',521,FALSE,'recetas/cancelar/','remove',FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',521,FALSE,'recetas/activar/','ok',FALSE);
   ALTER TABLE otros.recetas RENAME COLUMN objetico TO objetivo;
   CREATE TABLE otros.recetas_centro_costo
        (
            id_centro_costo bigint NOT NULL,
            id_receta bigint NOT NULL,
            num integer NOT NULL DEFAULT 1,
            CONSTRAINT recetas_centro_costo_pkey PRIMARY KEY (id_centro_costo, id_receta),
            CONSTRAINT recetas_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
                REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
                NOT VALID,
            CONSTRAINT recetas_centro_costo_id_receta_fkey FOREIGN KEY (id_receta)
                REFERENCES otros.recetas (id_recetas) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
                NOT VALID
        )
        WITH (
            OIDS = FALSE
        )
        TABLESPACE pg_default;
        ALTER TABLE otros.recetas_centro_costo OWNER to programa;
        COMMENT ON COLUMN otros.recetas_centro_costo.num IS 'numero de centro de costo asignados a la orden de compra';
   CREATE TABLE otros.recetas_rancho
        (
            id_rancho bigint NOT NULL,
            id_receta bigint NOT NULL,
            num integer NOT NULL DEFAULT 1,
            CONSTRAINT recetas_rancho_pkey PRIMARY KEY (id_rancho, id_receta),
            CONSTRAINT recetas_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
                REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
                NOT VALID,
            CONSTRAINT recetas_rancho_id_receta_fkey FOREIGN KEY (id_receta)
                REFERENCES otros.recetas (id_recetas) MATCH SIMPLE
                ON UPDATE CASCADE
                ON DELETE CASCADE
                NOT VALID
        )
        WITH (
            OIDS = FALSE
        )
        TABLESPACE pg_default;
        ALTER TABLE otros.recetas_rancho OWNER to programa;
        COMMENT ON COLUMN otros.recetas_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
        COMMENT ON COLUMN otros.recetas_rancho.num IS 'numero de ranchos asignados a la orden de compra';
   ALTER TABLE otros.formulas_productos ADD CONSTRAINT formulas_productos_id_formula_fkey FOREIGN KEY (id_formula) REFERENCES otros.formulas (id_formula) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE otros.formulas_productos ADD CONSTRAINT formulas_productos_id_producto_fkey FOREIGN KEY (id_producto) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',521,FALSE,'recetas/imprimir/','print',FALSE);
   ALTER TABLE otros.recetas ADD COLUMN dosis_equipo double precision;
   COMMENT ON COLUMN otros.recetas.dosis_equipo IS 'La cantidad de lts que carga el equipo de aplicacion';
   ALTER TABLE otros.recetas ADD COLUMN dosis_equipo_car2 double precision;
   COMMENT ON COLUMN otros.recetas.dosis_equipo_car2 IS 'Lts que seran dependiendo del numero de cargas extras';
   ALTER TABLE otros.recetas_productos ADD COLUMN dosis_carga1 double precision;
   COMMENT ON COLUMN otros.recetas_productos.dosis_carga1 IS 'La cantidad de lts para la carga 1';
   ALTER TABLE otros.recetas_productos ADD COLUMN dosis_carga2 double precision;
   COMMENT ON COLUMN otros.recetas_productos.dosis_carga2 IS 'La cantidad de lts para la carga 2 (extras)';
   ALTER TABLE otros.recetas ADD COLUMN total_importe double precision NOT NULL DEFAULT 0;


 ✔ Datos extras para el manifesto en papeleta @done (19-09-18 16:27) pct|pcc|san|lap
   CREATE TABLE otros.paletas_salidas_manifesto
      (
        id_paleta_salida bigint NOT NULL,
        empresa_contratante character varying(200),
        cliente_destino character varying(200),
        direccion character varying(1000),
        dia_llegada date,
        hr_entrega character varying(50),
        placa_termo character varying(150),
        temperatura character varying(40),
        orden_flete character varying(150),
        CONSTRAINT paletas_salidas_manifesto_pkey PRIMARY KEY (id_paleta_salida),
        CONSTRAINT paletas_salidas_manifesto_id_paleta_salida_fkey FOREIGN KEY (id_paleta_salida)
            REFERENCES otros.paletas_salidas (id_paleta_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.paletas_salidas_manifesto OWNER TO programa;
   ALTER TABLE public.clasificaciones ADD COLUMN unidad_cantidad double precision;
   UPDATE public.clasificaciones SET unidad_cantidad=0.62 WHERE id_clasificacion = 169;
   UPDATE public.clasificaciones SET unidad_cantidad=0.75 WHERE id_clasificacion = 170;
   UPDATE public.clasificaciones SET unidad_cantidad=0.004 WHERE id_clasificacion = 171;


 ✔ Reportes de facturas vencidas @done (19-09-10 11:51) pct|pcc|san|lap
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Facturas Vencidas',84,TRUE,'cuentas_cobrar/reporte/','print',TRUE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Facturas Vencidas',144,TRUE,'cuentas_pagar/reporte/','print',TRUE);

 ✔ Productos codigo @done (19-08-26 23:13) pcc|pct|san|lap
     ALTER TABLE public.productos ADD COLUMN fecha_compra date;
     ALTER TABLE public.compras ALTER COLUMN folio TYPE bigint;

 ✔ Modulo de resguardos @done (19-08-22 16:47) lap|pct|pcc|san
     CREATE TABLE otros.resguardos_activos
        (
          id_resguardo bigserial NOT NULL,
          id_empresa integer NOT NULL,
          id_producto bigint NOT NULL,
          id_entrego bigint NOT NULL,
          id_recibio bigint NOT NULL,
          id_registro bigint,
          tipo character varying(15) NOT NULL DEFAULT 'resguardo'::character varying, -- resguardo, asignacion
          fecha_entrega date,
          fecha_finalizo date, -- fecha cuendo le quitaron el resguardo a esa persona
          CONSTRAINT resguardos_activos_pkey PRIMARY KEY (id_resguardo),
          CONSTRAINT resguardos_activos_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT resguardos_activos_id_entrego_fkey FOREIGN KEY (id_entrego)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT resguardos_activos_id_producto_fkey FOREIGN KEY (id_producto)
              REFERENCES public.productos (id_producto) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT resguardos_activos_id_recibio_fkey FOREIGN KEY (id_recibio)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT resguardos_activos_id_registro_fkey FOREIGN KEY (id_registro)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.resguardos_activos
          OWNER TO programa;
        COMMENT ON COLUMN otros.resguardos_activos.tipo IS 'resguardo, asignacion';
        COMMENT ON COLUMN otros.resguardos_activos.fecha_finalizo IS 'fecha cuendo le quitaron el resguardo a esa persona';
        COMMENT ON COLUMN otros.resguardos_activos.id_recibio IS 'usuario que tiene asignado el resguardo';
     ALTER TABLE otros.resguardos_activos ADD COLUMN status boolean NOT NULL DEFAULT true;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Resguardo de Activos',0,TRUE,'resguardos_activos/','hdd',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',508,TRUE,'resguardos_activos/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',508,FALSE,'resguardos_activos/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',508,FALSE,'resguardos_activos/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',508,FALSE,'resguardos_activos/activar/','ok',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',508,FALSE,'resguardos_activos/imprimir/','print',FALSE);
     ALTER TABLE public.productos ADD COLUMN descripcion character varying(1000);
     ALTER TABLE otros.resguardos_activos ADD COLUMN observaciones character varying(1000);

 ✔ Reporte de eistencia de limon @done (19-08-08 14:57) lap|pcc|pct|san
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de Existencia de Limón',0,TRUE,'existencias_limon/','align-left',TRUE);
     ALTER TABLE public.unidades ADD COLUMN tipo character varying(5) DEFAULT 'o'::character varying;
     COMMENT ON COLUMN public.unidades.tipo IS 'a:arpilla, c:caja, o:otros';
     UPDATE public.unidades SET tipo='a' WHERE Lower(nombre) LIKE '%arpil%';
     UPDATE public.unidades SET tipo='c' WHERE Lower(nombre) LIKE '%caja%' OR Lower(nombre) LIKE '%cp%';
     CREATE TABLE otros.existencias_limon_produccion
        (
          id bigserial NOT NULL,
          id_clasificacion integer NOT NULL,
          id_unidad integer NOT NULL,
          costo double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL DEFAULT 0,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          CONSTRAINT existencias_limon_produccion_pkey PRIMARY KEY (id),
          CONSTRAINT existencias_limon_produccion_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
              REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT existencias_limon_produccion_id_unidad_fkey FOREIGN KEY (id_unidad)
              REFERENCES public.unidades (id_unidad) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE );
        ALTER TABLE otros.existencias_limon_produccion OWNER TO programa;
     CREATE TABLE otros.existencias_limon_existencia
        (
          id_existencia bigserial NOT NULL,
          id_clasificacion integer NOT NULL,
          id_unidad integer NOT NULL,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          costo double precision NOT NULL DEFAULT 0,
          kilos double precision NOT NULL DEFAULT 0,
          cantidad double precision NOT NULL DEFAULT 0,
          importe double precision NOT NULL DEFAULT 0,
          CONSTRAINT existencias_limon_existencia_pkey PRIMARY KEY (id_existencia),
          CONSTRAINT existencias_limon_existencia_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
              REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT existencias_limon_existencia_id_unidad_fkey FOREIGN KEY (id_unidad)
              REFERENCES public.unidades (id_unidad) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH ( OIDS=FALSE );
        ALTER TABLE otros.existencias_limon_existencia OWNER TO programa;
     -- pcc|san|lap
     ALTER TABLE otros.existencias_limon_existencia DROP COLUMN id_existencia;
     ALTER TABLE otros.existencias_limon_existencia ADD CONSTRAINT existencias_limon_existencia_pkey PRIMARY KEY(id_clasificacion, id_unidad, fecha, no_caja);
     --ALTER TABLE otros.existencias_limon_existencia ADD COLUMN precio double precision NOT NULL DEFAULT 0;
     --ALTER TABLE otros.existencias_limon_existencia ADD COLUMN importe_venta double precision NOT NULL DEFAULT 0;


 ✔ Pago masivo de bajio @done (19-08-02 19:10) pct|pcc|san|lap
    ALTER TABLE public.banco_cuentas ADD COLUMN is_pago_masivo boolean NOT NULL DEFAULT false;
    ALTER TABLE public.banco_bancos ADD COLUMN codigo_bajio character varying(8);
    UPDATE public.banco_cuentas SET id_banco=9 WHERE id_banco=11;
    UPDATE public.banco_bancos SET status='e' WHERE id_banco=11;
    UPDATE public.banco_cuentas SET id_banco=3 WHERE id_banco=13;
    UPDATE public.banco_bancos SET status='e' WHERE id_banco=13;
    UPDATE public.banco_cuentas SET id_banco=1 WHERE id_banco=14;
    UPDATE public.banco_bancos SET status='e' WHERE id_banco=14;
    UPDATE public.banco_cuentas SET id_banco=12 WHERE id_banco=16;
    UPDATE public.banco_bancos SET status='e' WHERE id_banco=16;
    UPDATE public.banco_bancos SET codigo_bajio=40062 WHERE id_banco=1;
    UPDATE public.banco_bancos SET codigo_bajio=40002 WHERE id_banco=2;
    UPDATE public.banco_bancos SET codigo_bajio=40030 WHERE id_banco=3;
    UPDATE public.banco_bancos SET codigo_bajio=40072 WHERE id_banco=4;
    UPDATE public.banco_bancos SET codigo_bajio=40014 WHERE id_banco=5;
    UPDATE public.banco_bancos SET codigo_bajio=40012 WHERE id_banco=6;
    UPDATE public.banco_bancos SET codigo_bajio=40021 WHERE id_banco=7;
    UPDATE public.banco_bancos SET codigo_bajio=40044 WHERE id_banco=8;
    UPDATE public.banco_bancos SET codigo_bajio=90611 WHERE id_banco=10;
    UPDATE public.banco_bancos SET codigo_bajio=40036 WHERE id_banco=12;
    UPDATE public.banco_bancos SET codigo_bajio=40127 WHERE id_banco=15;
    UPDATE public.banco_bancos SET codigo_bajio=40131 WHERE id_banco=17;
    UPDATE public.banco_bancos SET codigo_bajio=37019 WHERE id_banco=18;
    UPDATE public.banco_bancos SET codigo_bajio=40058 WHERE id_banco=19;


 ✔ Comprobar gastos de caja @done (19-07-22 20:45) lap|san|pcc
     CREATE TABLE public.banco_movimientos_caja_chica_gastos
        (
          id_movimiento bigint NOT NULL,
          id_gasto bigint NOT NULL,
          id_movimiento2 bigint NOT NULL,
          CONSTRAINT banco_movimientos_caja_chica_gastos_pkey PRIMARY KEY (id_movimiento, id_gasto, id_movimiento2),
          CONSTRAINT banco_movimientos_caja_chica_gastos_id_gasto_fkey FOREIGN KEY (id_gasto)
              REFERENCES public.cajachica_gastos (id_gasto) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT banco_movimientos_caja_chica_gastos_id_movimiento_fkey FOREIGN KEY (id_movimiento)
              REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE );
        ALTER TABLE public.banco_movimientos_caja_chica_gastos OWNER TO programa;

 ✔ Reportes de devolucion de iva @done (19-07-17 21:51) pcc|lap|san
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Devoluciones de IVA',361,TRUE,'#','repeat',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de Cédula a Detalle de Proveedores',503,TRUE,'devoluciones_iva/cedula_proveedores/','print',TRUE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de Cédula Totalidad de IVA',503,TRUE,'devoluciones_iva/cedula_totalidad_iva/','print',TRUE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de Integración IVA 16%',503,TRUE,'devoluciones_iva/cedula_iva16/','print',TRUE);

 ✔ Caja chica gastos x comprobar @done (19-07-12 17:17) pct|pcc|lap|san
     ALTER TABLE public.cajachica_gastos ADD COLUMN monto_ini double precision DEFAULT 0;
 ✔ Paletas de salida en rastreabilidad @done (19-07-01 22:11) pcc|pct|lap|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Papeleta de Salida',61,TRUE,'rastreabilidad_paletas/','list-alt',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',497,TRUE,'rastreabilidad_paletas/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',497,FALSE,'rastreabilidad_paletas/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',497,FALSE,'rastreabilidad_paletas/cancelar/','minus',FALSE);
    CREATE TABLE otros.paletas_salidas
      (
        id_paleta_salida bigserial NOT NULL,
        id_empresa integer NOT NULL,
        id_registro bigint NOT NULL,
        fecha date,
        fecha_registro timestamp without time zone DEFAULT now(),
        status character varying(5) NOT NULL DEFAULT 'r'::character varying, -- r: registrado, f: finalizado, ca: cancelado
        CONSTRAINT paletas_salidas_pkey PRIMARY KEY (id_paleta_salida),
        CONSTRAINT paletas_salidas_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_id_registro_fkey FOREIGN KEY (id_registro)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.paletas_salidas
        OWNER TO programa;
      COMMENT ON COLUMN otros.paletas_salidas.status IS 'r: registrado, f: finalizado, ca: cancelado';
    CREATE TABLE otros.paletas_salidas_pallets
      (
        id_paleta_salida bigint NOT NULL,
        id_pallet bigint NOT NULL,
        posicion integer NOT NULL,
        CONSTRAINT paletas_salidas_pallets_pkey PRIMARY KEY (id_paleta_salida, id_pallet),
        CONSTRAINT paletas_salidas_pallets_id_paleta_salida_fkey FOREIGN KEY (id_paleta_salida)
            REFERENCES otros.paletas_salidas (id_paleta_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_pallets_id_pallet_fkey FOREIGN KEY (id_pallet)
            REFERENCES public.rastria_pallets (id_pallet) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.paletas_salidas_pallets
        OWNER TO programa;
    CREATE TABLE otros.paletas_salidas_productos
      (
        id_paleta_salida bigint NOT NULL,
        num_rows integer NOT NULL,
        id_cliente bigint NOT NULL,
        id_clasificacion bigint NOT NULL,
        clasificacion character varying(200),
        id_unidad integer NOT NULL,
        unidad character varying(100),
        cantidad double precision NOT NULL DEFAULT 0,
        kilos double precision NOT NULL DEFAULT 0,
        id_pallet bigint,
        CONSTRAINT paletas_salidas_productos_pkey PRIMARY KEY (id_paleta_salida, num_rows),
        CONSTRAINT paletas_salidas_productos_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
            REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_productos_id_cliente_fkey FOREIGN KEY (id_cliente)
            REFERENCES public.clientes (id_cliente) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_productos_id_paleta_salida_fkey FOREIGN KEY (id_paleta_salida)
            REFERENCES otros.paletas_salidas (id_paleta_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_productos_id_pallet_fkey FOREIGN KEY (id_pallet)
            REFERENCES public.rastria_pallets (id_pallet) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT paletas_salidas_productos_id_unidad_fkey FOREIGN KEY (id_unidad)
            REFERENCES public.unidades (id_unidad) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE otros.paletas_salidas_productos OWNER TO programa;
    ALTER TABLE otros.paletas_salidas ADD COLUMN id_bascula bigint NOT NULL;
    ALTER TABLE otros.paletas_salidas ADD CONSTRAINT paletas_salidas_id_bascula_fkey FOREIGN KEY (id_bascula) REFERENCES public.bascula (id_bascula) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE otros.paletas_salidas ADD COLUMN tipo character varying(5) NOT NULL;
    COMMENT ON COLUMN otros.paletas_salidas.tipo IS 'lo: local, na: nacional, naex: nacional y exportacion';
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',497,FALSE,'rastreabilidad_paletas/imprimir/','print',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Remisionar',493,FALSE,'rastreabilidad_paletas/remisionar/','qrcode',FALSE);
    ALTER TABLE public.facturacion_otrosdatos ADD COLUMN id_paleta_salida bigint;
    ALTER TABLE public.facturacion_otrosdatos ADD CONSTRAINT facturacion_otrosdatos_id_paleta_salida_fkey FOREIGN KEY (id_paleta_salida) REFERENCES otros.paletas_salidas (id_paleta_salida) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Cambios para ADD de compras @done (19-06-24 19:52) pcc|lap|pct|san
   ALTER TABLE public.compras ADD COLUMN uuid character varying;
   ALTER TABLE public.compras ADD COLUMN no_certificado character varying;

 ✔ Cambios en facturacion y boletas de salida @done (19-06-10 19:07) pcc|pct|lap|san
     CREATE TABLE public.facturacion_otrosdatos
        (
          id_factura bigint NOT NULL,
          no_trazabilidad character varying(15) NOT NULL,
          CONSTRAINT facturacion_otrosdatos_pkey PRIMARY KEY (id_factura),
          CONSTRAINT facturacion_otrosdatos_id_factura_fkey FOREIGN KEY (id_factura)
              REFERENCES public.facturacion (id_factura) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE public.facturacion_otrosdatos OWNER TO programa;
     ALTER TABLE public.bascula ADD COLUMN no_trazabilidad character varying(15);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Desbloquear',0,FALSE,'ventas/desbloquear/','wrench',FALSE);
     CREATE INDEX facturacion_otrosdatos_no_trazabilidad_idx ON public.facturacion_otrosdatos USING btree (no_trazabilidad COLLATE pg_catalog."default");
     CREATE INDEX bascula_no_trazabilidad_idx ON public.bascula USING btree (no_trazabilidad COLLATE pg_catalog."default");

 ✔ Cambios de prerequisicion @done (19-05-20 12:02) pct|pcc|lap|san
      ALTER TABLE public.compras_requisicion ADD COLUMN es_receta boolean NOT NULL DEFAULT false;
      INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Faltantes de productos',136,TRUE,'recetas/faltantes_productos/','question-sign',FALSE);
      CREATE TABLE public.compras_ordenes_requisiciones
          (
            id_orden bigint NOT NULL,
            id_requisicion bigint NOT NULL,
            num_row integer NOT NULL,
            CONSTRAINT compras_ordenes_requisiciones_pkey PRIMARY KEY (id_orden, id_requisicion, num_row),
            CONSTRAINT compras_ordenes_requisiciones_id_orden_fkey FOREIGN KEY (id_orden)
                REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
                ON UPDATE CASCADE ON DELETE CASCADE,
            CONSTRAINT compras_ordenes_requisiciones_id_requisicion_fkey FOREIGN KEY (id_requisicion)
                REFERENCES public.compras_requisicion (id_requisicion) MATCH SIMPLE
                ON UPDATE CASCADE ON DELETE CASCADE
          )
          WITH (
            OIDS=FALSE
          );
          ALTER TABLE public.compras_ordenes_requisiciones
            OWNER TO programa;
          COMMENT ON TABLE public.compras_ordenes_requisiciones
            IS 'Se registra la relacion de la orden con la o las requisiciones que se ligan a la orden';
      CREATE TABLE public.compras_ordenes_areas
        (
          id_area bigint NOT NULL,
          id_orden bigint NOT NULL,
          num integer NOT NULL DEFAULT 1, -- numero de area (cultivo) asignados a la orden de compra
          CONSTRAINT compras_ordenes_areas_pkey PRIMARY KEY (id_area, id_orden),
          CONSTRAINT compras_ordenes_areas_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT compras_ordenes_areas_id_orden_fkey FOREIGN KEY (id_orden)
              REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE public.compras_ordenes_areas
          OWNER TO programa;
        COMMENT ON TABLE public.compras_ordenes_areas
          IS 'Codigos nuevos, areas de bascula = cultivos en los catalogos';
        COMMENT ON COLUMN public.compras_ordenes_areas.num IS 'numero de area (cultivo) asignados a la orden de compra';
      CREATE TABLE public.compras_ordenes_activos
        (
          id_activo bigint NOT NULL,
          id_orden bigint NOT NULL,
          num integer NOT NULL DEFAULT 1, -- numero de activo (productos) asignados a la orden de compra
          CONSTRAINT compras_ordenes_activos_pkey PRIMARY KEY (id_activo, id_orden),
          CONSTRAINT compras_ordenes_activos_id_activo_fkey FOREIGN KEY (id_activo)
              REFERENCES public.productos (id_producto) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT compras_ordenes_activos_id_orden_fkey FOREIGN KEY (id_orden)
              REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE public.compras_ordenes_activos
          OWNER TO programa;
        COMMENT ON TABLE public.compras_ordenes_activos
          IS 'Codigos nuevos, areas de bascula = cultivos en los catalogos';
        COMMENT ON COLUMN public.compras_ordenes_activos.num IS 'numero de area (cultivo) asignados a la orden de compra';
      INSERT INTO compras_ordenes_requisiciones (id_requisicion, id_orden, num_row) (SELECT id_requisicion, id_orden, 0 FROM compras_ordenes WHERE id_requisicion IS NOT NULL);
      INSERT INTO compras_ordenes_areas (id_area, id_orden, num) (SELECT id_area, id_orden, 1 FROM compras_ordenes WHERE id_area IS NOT NULL);
      INSERT INTO compras_ordenes_activos (id_activo, id_orden, num) (SELECT id_activo, id_orden, 1 FROM compras_ordenes WHERE id_activo IS NOT NULL);

      ALTER TABLE public.compras_ordenes DROP COLUMN id_requisicion;
      ALTER TABLE public.compras_ordenes DROP COLUMN id_area;
      ALTER TABLE public.compras_ordenes DROP COLUMN id_activo;
      ALTER TABLE public.compras_ordenes ALTER COLUMN solicito TYPE character varying(250);
      ALTER TABLE public.compras_ordenes ADD COLUMN es_receta boolean NOT NULL DEFAULT false;
      ALTER TABLE public.compras_requisicion_productos ADD COLUMN activos jsonb;

 ✔ Agregar opcion para subir comprobante de pago en las ventas @done (19-06-03 12:38) pct|pcc|lap|san
   Crear carpetas sanjorge/application/media/ventas/com_pagos
   ALTER TABLE public.facturacion_abonos ADD COLUMN url_comp_pago character varying(120);

 ✔ Reporte auditoria @done (19-06-01 22:50) pcc|pct|san|lap
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de auditorias',40,TRUE,'bascula/rptAuditoria/','exchange',TRUE);

 ✔ Lista de activos registro de productos en piezas @done (19-05-22 14:23) pct|pcc|lap|san
     ALTER TABLE public.productos_piezas ADD COLUMN id_producto_pieza bigint;
     ALTER TABLE public.productos_piezas ADD CONSTRAINT productos_piezas_id_producto_pieza_fkey FOREIGN KEY (id_producto_pieza)
      REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Cambios formato de ordenes de compra @done (19-03-25 14:42) pct|pcc|lap|san
      ALTER TABLE public.compras_almacenes ADD COLUMN calle character varying(60);
      ALTER TABLE public.compras_almacenes ADD COLUMN no_exterior character varying(8);
      ALTER TABLE public.compras_almacenes ADD COLUMN no_interior character varying(8);
      ALTER TABLE public.compras_almacenes ADD COLUMN colonia character varying(60);
      ALTER TABLE public.compras_almacenes ADD COLUMN localidad character varying(60);
      ALTER TABLE public.compras_almacenes ADD COLUMN municipio character varying(60);
      ALTER TABLE public.compras_almacenes ADD COLUMN estado character varying(60);
      ALTER TABLE public.compras_almacenes ADD COLUMN pais character varying(60) DEFAULT 'MEXICO'::character varying;
      ALTER TABLE public.compras_almacenes ADD COLUMN cp character varying(12);
      ALTER TABLE public.compras_almacenes ADD COLUMN telefono character varying(15);
      ALTER TABLE public.compras_almacenes ADD COLUMN horario character varying(100);
      ALTER TABLE compras_requisicion ADD COLUMN otros_datos json;
      ALTER TABLE compras_ordenes ADD COLUMN otros_datos json;
      ALTER TABLE public.banco_cuentas ADD COLUMN es_concentradora boolean NOT NULL DEFAULT false;
      COMMENT ON COLUMN public.banco_cuentas.es_concentradora IS 'si es true es la cuenta que se mostrara en las ordenes de compra';
      ALTER TABLE public.compras_ordenes ADD COLUMN id_requisicion bigint;
      ALTER TABLE public.compras_productos ADD COLUMN folio_aceptacion integer;
      CREATE TABLE public.compras_ordenes_hist_imp
        (
          id_orden bigint NOT NULL,
          fecha timestamp with time zone NOT NULL,
          no_impresiones smallint NOT NULL DEFAULT 0,
          CONSTRAINT compras_ordenes_hist_imp_pkey PRIMARY KEY (id_orden, no_impresiones),
          CONSTRAINT compras_ordenes_hist_imp_id_orden_fkey FOREIGN KEY (id_orden)
              REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE public.compras_ordenes_hist_imp OWNER TO postgres;
        COMMENT ON TABLE public.compras_ordenes_hist_imp IS 'historial de impreciones';
      CREATE OR REPLACE FUNCTION public.insert_hist_ordenes_impre()
            RETURNS trigger AS
            $BODY$
              BEGIN
                IF NEW.no_impresiones <> OLD.no_impresiones AND TG_OP = 'UPDATE' THEN
                  INSERT INTO public.compras_ordenes_hist_imp (id_orden, fecha, no_impresiones) VALUES (NEW.id_orden, Now(), OLD.no_impresiones);
                ELSIF TG_OP = 'INSERT' THEN
                END IF;
                return null;
              END;
            $BODY$
            LANGUAGE plpgsql VOLATILE
            COST 100;
          ALTER FUNCTION public.insert_hist_ordenes_impre()
            OWNER TO programa;
      CREATE TRIGGER tg_insert_hist_ordenes_impre
          AFTER UPDATE
          ON public.compras_ordenes
          FOR EACH ROW
          EXECUTE PROCEDURE public.insert_hist_ordenes_impre();
      ALTER TABLE compras_requisicion ALTER COLUMN id_departamento DROP NOT NULL;

 ✔ Nuevos cmabios de caja chica @done (19-03-05 14:49) pct|pcc|lap|san
     ALTER TABLE public.cajachica_remisiones ADD COLUMN id_nomenclatura integer;
     ALTER TABLE public.cajachica_remisiones ADD CONSTRAINT cajachica_remisiones_id_nomenclatura_fkey FOREIGN KEY (id_nomenclatura)
      REFERENCES public.cajachica_nomenclaturas (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
     ALTER TABLE public.cajachica_traspasos ADD COLUMN tipo_caja character varying(30) NOT NULL DEFAULT 'otros'::character varying;
     COMMENT ON COLUMN public.cajachica_traspasos.tipo_caja IS 'otros: cualquier otro deudor, caja_limon: caja de rosy';
     ALTER TABLE public.cajachica_gastos ADD COLUMN id_compra bigint;
     COMMENT ON COLUMN public.cajachica_gastos.id_compra IS 'id del gasto ligado, este tipo de gasto (de caja) no se tomaria en cuenta para los reportes';
     COMMENT ON COLUMN public.cajachica_gastos.tipo IS 'g:gastos, gc: gastos por comprobar, rg: reposicion de gastos';
     ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_compra_fkey FOREIGN KEY (id_compra) REFERENCES public.compras (id_compra) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     INSERT INTO public.cajachicas(no_caja, nombre, presupuesto) VALUES (5, 'Fletes', 40000);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Caja chica 5',247,TRUE,'caja_chica/caja5/','usd',TRUE);
     ALTER TABLE public.cajachica_efectivo ADD COLUMN saldo_boletas_arecuperar double precision NOT NULL  DEFAULT 0;
     ALTER TABLE public.cajachica_efectivo ADD COLUMN saldo_cheques_transito double precision NOT NULL DEFAULT 0;
     CREATE TABLE public.cajachica_gastos_comprobar
        (
          id_gasto bigint NOT NULL,
          rows integer NOT NULL,
          fecha date NOT NULL,
          abono double precision NOT NULL DEFAULT 0,
          CONSTRAINT cajachica_gastos_comprobar_pkey PRIMARY KEY (id_gasto, rows),
          CONSTRAINT cajachica_gastos_comprobar_id_gasto_fkey FOREIGN KEY (id_gasto)
              REFERENCES public.cajachica_gastos (id_gasto) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH ( OIDS=FALSE );
        ALTER TABLE public.cajachica_gastos_comprobar OWNER TO programa;
     ALTER TABLE public.cajachica_gastos ADD COLUMN fecha_compro_gasto date;
      ALTER TABLE public.cajachica_nomenclaturas ADD COLUMN tipo boolean NOT NULL DEFAULT true;
      COMMENT ON COLUMN public.cajachica_nomenclaturas.tipo IS 'true: ingreso, false: egreso';
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB COMPRA' WHERE id=1;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB GTOS GRALES' WHERE id=2;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB PRESTAMO' WHERE id=3;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB SUELDOS' WHERE id=4;
      UPDATE public.cajachica_nomenclaturas SET nombre='OTROS INGRESOS' WHERE id=5;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB MOV INTANG' WHERE id=6;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB GTO X INVERS' WHERE id=7;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB MAT-INSUMO' WHERE id=8;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB GTO FINANC' WHERE id=9;
      UPDATE public.cajachica_nomenclaturas SET nombre='INCREM F-CAJA' WHERE id=10;
      UPDATE public.cajachica_nomenclaturas SET nombre='REMB INTANGIBLE' WHERE id=11;
      UPDATE public.cajachica_nomenclaturas SET nombre='COMPRA MP', tipo = 'f', nomenclatura=1 WHERE id=12;
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('GASTOS GRALES', 2, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('PRESTAMO', 3, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('SUELDOS', 4, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('OTROS GASTOS', 5, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('MOV INTANGIBLE', 6, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('GTO X INVERSION', 7, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('MAT E INSUMOS', 8, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('GTO FINANCIERO', 9, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('RETIRO F-CAJA', 10, 't', 'f');
      INSERT INTO public.cajachica_nomenclaturas (nombre, nomenclatura, status, tipo) VALUES ('INTANGIBLE', 11, 't', 'f');
      ALTER TABLE public.cajachica_deudores ADD COLUMN folio bigint;
      ALTER TABLE public.cajachica_deudores ADD COLUMN id_nomenclatura integer;
      ALTER TABLE public.cajachica_deudores
        ADD CONSTRAINT cajachica_deudores_id_nomenclatura_fkey FOREIGN KEY (id_nomenclatura)
            REFERENCES public.cajachica_nomenclaturas (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE;
      ALTER TABLE public.banco_movimientos ADD COLUMN entransito_fecha_quito date;
      COMMENT ON COLUMN public.banco_movimientos.entransito_fecha_quito IS 'la fecha cuando se quito de transito ';

 ✔ Cambio de tablas de isr y subsidio @done (19-03-12 11:38) lap|pcc|san|pct
    CREATE TABLE public.nomina_calculo_anual
        (
          id_empleado bigint NOT NULL,
          id_empresa integer NOT NULL,
          anio integer NOT NULL,
          monto double precision NOT NULL DEFAULT 0,
          aplicado double precision NOT NULL DEFAULT 0,
          tipo boolean NOT NULL DEFAULT true, -- true: isr a pagar, false: subsidio a favor
          CONSTRAINT nomina_calculo_anual_pkey PRIMARY KEY (id_empleado, id_empresa, anio),
          CONSTRAINT nomina_calculo_anual_id_empleado_fkey FOREIGN KEY (id_empleado)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT nomina_calculo_anual_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE public.nomina_calculo_anual
          OWNER TO programa;
        COMMENT ON COLUMN public.nomina_calculo_anual.tipo IS 'true: isr a pagar, false: subsidio a favor';
    ALTER TABLE public.nomina_fiscal ADD COLUMN otros_datos jsonb;
    ALTER TABLE public.nomina_salarios_minimos ADD COLUMN anio bigint;
    ALTER TABLE public.nomina_diaria_art_113 ADD COLUMN anio integer DEFAULT 2018;
    ALTER TABLE public.nomina_diaria_subsidios ADD COLUMN anio integer DEFAULT 2018;
    ALTER TABLE public.nomina_semanal_art_113 ADD COLUMN anio integer DEFAULT 2018;
    ALTER TABLE public.nomina_semanal_subsidios ADD COLUMN anio integer DEFAULT 2018;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=0.01, lim_superior=19.03, cuota_fija=0.0, porcentaje=1.92 WHERE id_art_113=1;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=19.04, lim_superior=161.52, cuota_fija=0.37, porcentaje=6.4 WHERE id_art_113=2;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=161.53, lim_superior=283.86, cuota_fija=9.48, porcentaje=10.88 WHERE id_art_113=3;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=283.87, lim_superior=329.97, cuota_fija=22.79, porcentaje=16 WHERE id_art_113=4;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=329.98, lim_superior=395.06, cuota_fija=30.17, porcentaje=17.92 WHERE id_art_113=5;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=395.07, lim_superior=796.79, cuota_fija=41.84, porcentaje=21.36 WHERE id_art_113=6;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=796.8, lim_superior=1255.85, cuota_fija=127.65, porcentaje=23.52 WHERE id_art_113=7;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=1255.86, lim_superior=2397.62, cuota_fija=235.62, porcentaje=30 WHERE id_art_113=8;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=2397.63, lim_superior=3196.82, cuota_fija=578.15, porcentaje=32 WHERE id_art_113=9;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=3196.83, lim_superior=9590.46, cuota_fija=833.89, porcentaje=34 WHERE id_art_113=10;
    UPDATE public.nomina_diaria_art_113 SET lim_inferior=9590.47, lim_superior=999999.0, cuota_fija=3007.73, porcentaje=35 WHERE id_art_113=11;

    UPDATE public.nomina_diaria_subsidios SET de=0.01, hasta=58.19, subsidio=13.39 WHERE id_subsidio=1;
    UPDATE public.nomina_diaria_subsidios SET de=58.2, hasta=87.28, subsidio=13.38 WHERE id_subsidio=2;
    UPDATE public.nomina_diaria_subsidios SET de=87.29, hasta=114.24, subsidio=13.38 WHERE id_subsidio=3;
    UPDATE public.nomina_diaria_subsidios SET de=114.25, hasta=116.38, subsidio=12.92 WHERE id_subsidio=4;
    UPDATE public.nomina_diaria_subsidios SET de=116.39, hasta=146.25, subsidio=12.58 WHERE id_subsidio=5;
    UPDATE public.nomina_diaria_subsidios SET de=146.26, hasta=155.17, subsidio=11.65 WHERE id_subsidio=6;
    UPDATE public.nomina_diaria_subsidios SET de=155.18, hasta=175.51, subsidio=10.69 WHERE id_subsidio=7;
    UPDATE public.nomina_diaria_subsidios SET de=175.52, hasta=204.76, subsidio=9.69 WHERE id_subsidio=8;
    UPDATE public.nomina_diaria_subsidios SET de=204.77, hasta=234.01, subsidio=8.34 WHERE id_subsidio=9;
    UPDATE public.nomina_diaria_subsidios SET de=234.02, hasta=242.84, subsidio=7.16 WHERE id_subsidio=10;
    UPDATE public.nomina_diaria_subsidios SET de=242.85, hasta=999999.0, subsidio=0.0 WHERE id_subsidio=11;


    UPDATE public.nomina_semanal_art_113 SET lim_inferior=0.01, lim_superior=133.21, cuota_fija=0.0, porcentaje=1.92 WHERE id_art_113=1;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=133.22, lim_superior=1130.64, cuota_fija=2.59, porcentaje=6.4 WHERE id_art_113=2;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=1130.65, lim_superior=1987.02, cuota_fija=66.36, porcentaje=10.88 WHERE id_art_113=3;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=1987.03, lim_superior=2309.79, cuota_fija=159.53, porcentaje=16 WHERE id_art_113=4;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=2309.8, lim_superior=2765.42, cuota_fija=211.19, porcentaje=17.92 WHERE id_art_113=5;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=2765.43, lim_superior=5577.53, cuota_fija=292.88, porcentaje=21.36 WHERE id_art_113=6;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=5577.54, lim_superior=8790.95, cuota_fija=893.55, porcentaje=23.52 WHERE id_art_113=7;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=8790.96, lim_superior=16783.34, cuota_fija=1649.34, porcentaje=30 WHERE id_art_113=8;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=16783.35, lim_superior=22377.74, cuota_fija=4047.05, porcentaje=32 WHERE id_art_113=9;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=22377.75, lim_superior=67133.22, cuota_fija=5837.23, porcentaje=34 WHERE id_art_113=10;
    UPDATE public.nomina_semanal_art_113 SET lim_inferior=67133.23, lim_superior=999999.0, cuota_fija=21054.11, porcentaje=35 WHERE id_art_113=11;

    UPDATE public.nomina_semanal_subsidios SET de=0.01, hasta=407.33, subsidio=93.73 WHERE id_subsidio=1;
    UPDATE public.nomina_semanal_subsidios SET de=407.34, hasta=610.96, subsidio=93.66 WHERE id_subsidio=2;
    UPDATE public.nomina_semanal_subsidios SET de=610.97, hasta=799.68, subsidio=93.66 WHERE id_subsidio=3;
    UPDATE public.nomina_semanal_subsidios SET de=799.69, hasta=814.66, subsidio=90.44 WHERE id_subsidio=4;
    UPDATE public.nomina_semanal_subsidios SET de=814.67, hasta=1023.75, subsidio=88.06 WHERE id_subsidio=5;
    UPDATE public.nomina_semanal_subsidios SET de=1023.76, hasta=1086.19, subsidio=81.55 WHERE id_subsidio=6;
    UPDATE public.nomina_semanal_subsidios SET de=1086.2, hasta=1228.57, subsidio=74.83 WHERE id_subsidio=7;
    UPDATE public.nomina_semanal_subsidios SET de=1228.58, hasta=1433.32, subsidio=67.83 WHERE id_subsidio=8;
    UPDATE public.nomina_semanal_subsidios SET de=1433.33, hasta=1638.07, subsidio=58.38 WHERE id_subsidio=9;
    UPDATE public.nomina_semanal_subsidios SET de=1638.08, hasta=1699.88, subsidio=50.12 WHERE id_subsidio=10;
    UPDATE public.nomina_semanal_subsidios SET de=1699.89, hasta=999999.0, subsidio=0.0 WHERE id_subsidio=11;

 ✔ Correciones de nomina timbrado correcto @done (19-02-13 21:07) pcc|pct|lap|san
    CREATE TABLE public.nomina_fiscal_canceladas
      (
        id_empleado bigint NOT NULL,
        id_empresa integer NOT NULL,
        anio integer NOT NULL DEFAULT 0,
        semana integer NOT NULL DEFAULT 0,
        "row" integer NOT NULL DEFAULT 0,
        tipo character varying(2) NOT NULL DEFAULT 'se'::character varying, -- se: semana, pt: ptu
        xml text,
        uuid character varying(50),
        cfdi_ext json,
        CONSTRAINT nomina_fiscal_canceladas_pkey PRIMARY KEY (id_empleado, id_empresa, anio, semana, "row", tipo),
        CONSTRAINT nomina_fiscal_canceladas_id_empleado_fkey FOREIGN KEY (id_empleado)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT nomina_fiscal_canceladas_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.nomina_fiscal_canceladas OWNER TO programa;
      COMMENT ON COLUMN public.nomina_fiscal_canceladas.tipo IS 'se: semana, pt: ptu';
 ✔ Bascula captura de piña @done (19-01-22 21:33) pcc|pct|lap|san
    CREATE TABLE otros.bascula_salida_pina
        (
          id bigserial NOT NULL,
          id_bascula bigint NOT NULL,
          id_rancho bigint NOT NULL,
          kilos_neto double precision NOT NULL,
          total_piezas double precision NOT NULL DEFAULT 0,
          kg_pieza double precision NOT NULL DEFAULT 0,
          folio bigint NOT NULL,
          id_usuario bigint,
          fecha_registro timestamp without time zone NOT NULL DEFAULT now(),
          CONSTRAINT bascula_salida_pina_pkey PRIMARY KEY (id),
          CONSTRAINT bascula_salida_pina_id_bascula_fkey FOREIGN KEY (id_bascula)
              REFERENCES public.bascula (id_bascula) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT bascula_salida_pina_id_rancho_fkey FOREIGN KEY (id_rancho)
              REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT bascula_salida_pina_id_usuario_fkey FOREIGN KEY (id_usuario)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE ); ALTER TABLE otros.bascula_salida_pina OWNER TO programa;
    CREATE TABLE otros.bascula_salida_pina_estibas
      (
        id_salida_pina bigint NOT NULL,
        estiba bigint NOT NULL,
        id_centro_costo bigint NOT NULL, -- id de la melga
        id_calidad integer NOT NULL,
        cantidad double precision NOT NULL DEFAULT 0,
        CONSTRAINT bascula_salida_pina_estibas_pkey PRIMARY KEY (id_salida_pina, estiba),
        CONSTRAINT bascula_salida_pina_estibas_id_calidad_fkey FOREIGN KEY (id_calidad)
            REFERENCES public.calidades (id_calidad) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT bascula_salida_pina_estibas_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT bascula_salida_pina_estibas_id_salida_pina_fkey FOREIGN KEY (id_salida_pina)
            REFERENCES otros.bascula_salida_pina (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE ); ALTER TABLE otros.bascula_salida_pina_estibas OWNER TO programa;
      COMMENT ON COLUMN otros.bascula_salida_pina_estibas.id_centro_costo IS 'id de la melga';
 ✔ Otros cambios de caja chica @done (19-01-21 20:22) pcc|lap|pct|san
    ALTER TABLE public.cajachica_remisiones ADD COLUMN status boolean NOT NULL DEFAULT true;
    UPDATE public.cajachica_remisiones SET folio=0 WHERE folio is null;
    ALTER TABLE public.cajachica_remisiones ALTER COLUMN folio SET NOT NULL;
    ALTER TABLE public.cajachica_remisiones DROP CONSTRAINT cajachica_remisiones_pkey;
    ALTER TABLE public.cajachica_remisiones ADD CONSTRAINT cajachica_remisiones_pkey PRIMARY KEY(fecha, id_remision, folio, "row");
    ALTER TABLE public.cajachica_traspasos ADD COLUMN afectar_fondo boolean NOT NULL DEFAULT false;
    COMMENT ON COLUMN public.cajachica_traspasos.afectar_fondo IS 'true: afecta el fondo de la caja, false: no afecta';
    ALTER TABLE public.cajachica_remisiones ADD COLUMN fecha_rem date;
    COMMENT ON COLUMN public.cajachica_remisiones.fecha_rem IS 'fecha de remision';
    ALTER TABLE public.cajachica_ingresos ADD COLUMN banco character varying(50);
    ALTER TABLE public.cajachica_ingresos ADD COLUMN nombre character varying(130);
    ALTER TABLE public.cajachica_ingresos ADD COLUMN status boolean NOT NULL DEFAULT true;
    ALTER TABLE public.cajachica_traspasos ADD COLUMN folio bigint;
    ALTER TABLE public.cajachica_traspasos ADD COLUMN status boolean NOT NULL DEFAULT true;
    ALTER TABLE public.cajachica_gastos ADD COLUMN status boolean NOT NULL DEFAULT true;
    ALTER TABLE public.cajachica_gastos ADD COLUMN nombre character varying(130);
    ALTER TABLE public.cajachica_gastos ADD COLUMN tipo character varying(5) NOT NULL DEFAULT 'g'::character varying;
    COMMENT ON COLUMN public.cajachica_gastos.tipo IS 'g:gastos, gc: gastos por comprobar';
    ALTER TABLE public.cajachica_gastos ADD COLUMN fecha_cancelado date;
    UPDATE cajachica_gastos SET fecha_cancelado = fecha WHERE status = 'f' AND fecha_cancelado IS NULL;

 ✔ Cheques desde sistema @done (19-01-19 13:23) pct|pcc|lap|san
    ALTER TABLE public.banco_movimientos ADD COLUMN abono_cuenta boolean;
    COMMENT ON COLUMN public.banco_movimientos.abono_cuenta IS 'para los cheques abono a cuenta';
 ✔ Cambio en producto @done (19-01-16 16:02) pcc|san|lap|pct
   ALTER TABLE public.productos ADD COLUMN tipo_apli character varying(5);
   COMMENT ON COLUMN public.productos.tipo_apli IS 'n: nutricion, fs: fitosanidad';
 ✔ Cambios rpt Asistencias @done (19-01-13 20:44) pcc|san|lap|pct
     CREATE TABLE public.nomina_asistencia_hrs
      (
        id_empresa integer NOT NULL,
        anio integer NOT NULL,
        semana integer NOT NULL,
        id_empleado bigint NOT NULL,
        fecha date NOT NULL,
        hrs double precision NOT NULL DEFAULT 0,
        CONSTRAINT nomina_asistencia_hrs_pkey PRIMARY KEY (id_empresa, id_empleado, fecha),
        CONSTRAINT nomina_asistencia_hrs_id_empleado_fkey FOREIGN KEY (id_empleado)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT nomina_asistencia_hrs_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE ); ALTER TABLE public.nomina_asistencia_hrs OWNER TO programa;
 ✔ Caja chica 4 y de tryana @done (19-01-12 14:52) pcc|san|lap|pct
    UPDATE public.cajachicas SET nombre='Caja general' WHERE id = 4;
    UPDATE public.cajachicas SET presupuesto=50000 WHERE id = 2;
    ALTER TABLE public.cajachica_ingresos ADD COLUMN folio bigint;
    ALTER TABLE public.cajachica_gastos ADD COLUMN folio_sig bigint;
 ✔ Saldar prestamos caja chica @done (19-01-09 21:40) pcc|san|lap|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Saldar prestamos',410,FALSE,'caja_chica_prest/saldar_prestamos/','edit',FALSE);
 ✔ Poner las actividades de la nómina con costó y crear modulo para capturarlas en la nomina @done (19-01-02 20:43) pct|pcc|lap|san
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Registro de actividades x trabajador 2',184,TRUE,'nomina_trabajos2/','briefcase',FALSE);
   CREATE TABLE public.nomina_trabajos_dia2
      (
        id_empresa integer NOT NULL,
        id_usuario bigint NOT NULL,
        fecha date NOT NULL DEFAULT now(),
        rows character varying(15) NOT NULL,
        id_labor integer NOT NULL,
        id_area integer,
        anio integer not null,
        semana integer not null,
        costo double precision NOT NULL DEFAULT 0,
        avance double precision NOT NULL DEFAULT 0,
        importe double precision NOT NULL DEFAULT 0,
        CONSTRAINT nomina_trabajos_dia2_pkey PRIMARY KEY (id_empresa, id_usuario, fecha, rows),
        CONSTRAINT nomina_trabajos_dia2_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT nomina_trabajos_dia2_id_usuario_fkey FOREIGN KEY (id_usuario)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT nomina_trabajos_dia2_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE SET NULL,
        CONSTRAINT nomina_trabajos_dia2_id_labor_fkey FOREIGN KEY (id_labor)
            REFERENCES public.compras_salidas_labores (id_labor) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE );
      ALTER TABLE public.nomina_trabajos_dia2 OWNER TO programa;
      COMMENT ON COLUMN public.nomina_trabajos_dia2.id_area IS 'Area de bascula = Cultivos';
   CREATE TABLE public.nomina_trabajos_dia2_rancho
      (
        id_empresa integer NOT NULL,
        id_usuario bigint NOT NULL,
        fecha date NOT NULL,
        rows character varying(15) NOT NULL,
        id_rancho bigint NOT NULL, -- Areas de aplicacion = ranchos, lineas, etc
        num integer NOT NULL DEFAULT 1, -- numero de ranchos asignados a la orden de compra
        CONSTRAINT nomina_trabajos_dia2_rancho_pkey PRIMARY KEY (id_empresa, id_usuario, fecha, rows, id_rancho),
        CONSTRAINT nomina_trabajos_dia2_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
            REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.nomina_trabajos_dia2_rancho
        OWNER TO programa;
      COMMENT ON COLUMN public.nomina_trabajos_dia2_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
      COMMENT ON COLUMN public.nomina_trabajos_dia2_rancho.num IS 'numero de ranchos asignados a la orden de compra';
   CREATE TABLE public.nomina_trabajos_dia2_centro_costo
      (
        id_empresa integer NOT NULL,
        id_usuario bigint NOT NULL,
        fecha date NOT NULL,
        rows character varying(15) NOT NULL,
        id_centro_costo bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de centro de costo asignados a la orden de compra
        CONSTRAINT nomina_trabajos_dia2_centro_costo_pkey PRIMARY KEY (id_empresa, id_usuario, fecha, rows, id_centro_costo),
        CONSTRAINT nomina_trabajos_dia2_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.nomina_trabajos_dia2_centro_costo
        OWNER TO programa;
      COMMENT ON COLUMN public.nomina_trabajos_dia2_centro_costo.num IS 'numero de centro de costo asignados a la orden de compra';


 ✔ Ordenes de compra impresion @done (18-12-26 12:39) lap|san|pct
   ALTER TABLE public.compras_ordenes ADD COLUMN no_impresiones smallint NOT NULL DEFAULT 0;

 ✔ New -> Labores de trabajo @done (18-12-12 15:43) pct|lap|san|pct
    UPDATE public.privilegios SET nombre='Labores de trabajo' WHERE id = 342;
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 10 Milagro D', 'melga', 0.045, 3, 2618);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 11 Milagro D', 'melga', 0.045, 3, 2618);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 12 Milagro D', 'melga', 0.045, 3, 2618);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 13 Milagro D', 'melga', 0.045, 3, 2618);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 1 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 2 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 4 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 3 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 5 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 6 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 7 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 8 Milagro A', 'melga', 0, 3, 0);
    -- INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 9 Milagro A', 'melga', 0, 3, 0);
    UPDATE otros.centro_costo SET nombre = 'Melga 1 Milagro A' WHERE id_centro_costo = 103;
    UPDATE otros.centro_costo SET nombre = 'Melga 2 Milagro A' WHERE id_centro_costo = 104;
    UPDATE otros.centro_costo SET nombre = 'Melga 3 Milagro A' WHERE id_centro_costo = 105;
    UPDATE otros.centro_costo SET nombre = 'Melga 4 Milagro A' WHERE id_centro_costo = 106;
    UPDATE otros.centro_costo SET nombre = 'Melga 5 Milagro A' WHERE id_centro_costo = 107;
    UPDATE otros.centro_costo SET nombre = 'Melga 6 Milagro A' WHERE id_centro_costo = 108;
    UPDATE otros.centro_costo SET nombre = 'Melga 7 Milagro A' WHERE id_centro_costo = 109;
    UPDATE otros.centro_costo SET nombre = 'Melga 8 Milagro A' WHERE id_centro_costo = 110;
    UPDATE otros.centro_costo SET nombre = 'Melga 9 Milagro A' WHERE id_centro_costo = 111;
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 10 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 11 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 12 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 13 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 14 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 15 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 16 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 17 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 18 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 19 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 20 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 21 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 22 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 23 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 24 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 25 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 26 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 27 Milagro A', 'melga', 0, 3, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 Juan Pedro', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 Juan Pedro', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 Juan Pedro', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 San Antonio', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 San Antonio', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 San Antonio', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 4 San Antonio', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 5 San Antonio', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 1 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 2 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 3 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 4 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 5 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 6 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 7 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 8 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 9 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 10 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 11 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 12 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 13 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 14 La lupita', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 1 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 2 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 3 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 4 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 5 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 6 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 7 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 8 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 9 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 10 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 11 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 12 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 13 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 14 San Luis', 'tabla', 0, 15, 0);
 ✔ Cambio en catalogos de salida seleccion multiple @done (18-12-04 20:21) pcc|pct|san|lap
   CREATE TABLE public.compras_centro_costo
      (
        id_centro_costo bigint NOT NULL,
        id_compra bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de centro de costo asignados a la compras
        CONSTRAINT compras_centro_costo_pkey PRIMARY KEY (id_centro_costo, id_compra),
        CONSTRAINT compras_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_centro_costo_id_compra_fkey FOREIGN KEY (id_compra)
            REFERENCES public.compras (id_compra) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_centro_costo
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_centro_costo.num IS 'numero de centro de costo asignados a la compras';
   CREATE TABLE public.compras_rancho
      (
        id_rancho bigint NOT NULL,
        id_compra bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de ranchos asignados a la compras
        CONSTRAINT compras_rancho_pkey PRIMARY KEY (id_rancho, id_compra),
        CONSTRAINT compras_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
            REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_rancho_id_compra_fkey FOREIGN KEY (id_compra)
            REFERENCES public.compras (id_compra) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_rancho
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_rancho.num IS 'numero de ranchos asignados a la compras';
      COMMENT ON COLUMN public.compras_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
   INSERT INTO compras_rancho (id_compra, id_rancho) (SELECT id_compra, id_rancho FROM compras WHERE id_rancho IS NOT NULL);
   INSERT INTO compras_centro_costo (id_compra, id_centro_costo) (SELECT id_compra, id_centro_costo FROM compras WHERE id_centro_costo IS NOT NULL);
   --> ALTER TABLE public.compras DROP COLUMN id_rancho;
   --> ALTER TABLE public.compras DROP COLUMN id_centro_costo;
   CREATE TABLE public.compras_ordenes_centro_costo
      (
        id_centro_costo bigint NOT NULL,
        id_orden bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de centro de costo asignados a la orden de compra
        CONSTRAINT compras_ordenes_centro_costo_pkey PRIMARY KEY (id_centro_costo, id_orden),
        CONSTRAINT compras_ordenes_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_ordenes_centro_costo_id_orden_fkey FOREIGN KEY (id_orden)
            REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_ordenes_centro_costo
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_ordenes_centro_costo.num IS 'numero de centro de costo asignados a la orden de compra';
   CREATE TABLE public.compras_ordenes_rancho
      (
        id_rancho bigint NOT NULL,
        id_orden bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de ranchos asignados a la orden de compra
        CONSTRAINT compras_ordenes_rancho_pkey PRIMARY KEY (id_rancho, id_orden),
        CONSTRAINT compras_ordenes_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
            REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_ordenes_rancho_id_orden_fkey FOREIGN KEY (id_orden)
            REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_ordenes_rancho
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_ordenes_rancho.num IS 'numero de ranchos asignados a la orden de compra';
      COMMENT ON COLUMN public.compras_ordenes_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
   INSERT INTO compras_ordenes_rancho (id_orden, id_rancho) (SELECT id_orden, id_rancho FROM compras_ordenes WHERE id_rancho IS NOT NULL);
   INSERT INTO compras_ordenes_centro_costo (id_orden, id_centro_costo) (SELECT id_orden, id_centro_costo FROM compras_ordenes WHERE id_centro_costo IS NOT NULL);
   --> ALTER TABLE public.compras_ordenes DROP COLUMN id_rancho;
   --> ALTER TABLE public.compras_ordenes DROP COLUMN id_centro_costo;
   CREATE TABLE public.compras_requisicion_centro_costo
      (
        id_centro_costo bigint NOT NULL,
        id_requisicion bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de centro de costo asignados a la orden de compra
        CONSTRAINT compras_requisicion_centro_costo_pkey PRIMARY KEY (id_centro_costo, id_requisicion),
        CONSTRAINT compras_requisicion_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_requisicion_centro_costo_id_requisicion_fkey FOREIGN KEY (id_requisicion)
            REFERENCES public.compras_requisicion (id_requisicion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_requisicion_centro_costo
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_requisicion_centro_costo.num IS 'numero de centro de costo asignados a la orden de compra';
   CREATE TABLE public.compras_requisicion_rancho
      (
        id_rancho bigint NOT NULL,
        id_requisicion bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de ranchos asignados a la orden de compra
        CONSTRAINT compras_requisicion_rancho_pkey PRIMARY KEY (id_rancho, id_requisicion),
        CONSTRAINT compras_requisicion_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
            REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_requisicion_rancho_id_requisicion_fkey FOREIGN KEY (id_requisicion)
            REFERENCES public.compras_requisicion (id_requisicion) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_requisicion_rancho
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_requisicion_rancho.num IS 'numero de ranchos asignados a la orden de compra';
      COMMENT ON COLUMN public.compras_requisicion_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
   INSERT INTO compras_requisicion_rancho (id_requisicion, id_rancho) (SELECT id_requisicion, id_rancho FROM compras_requisicion WHERE id_rancho IS NOT NULL);
   INSERT INTO compras_requisicion_centro_costo (id_requisicion, id_centro_costo) (SELECT id_requisicion, id_centro_costo FROM compras_requisicion WHERE id_centro_costo IS NOT NULL);
   --> ALTER TABLE public.compras_requisicion DROP COLUMN id_rancho;
   --> ALTER TABLE public.compras_requisicion DROP COLUMN id_centro_costo;
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 1 Milagro D', 'melga', 0.661, 3, 37464);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 2 Milagro D', 'melga', 0.584, 3, 34672);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 3 Milagro D', 'melga', 0.662, 3, 36717);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 4 Milagro D', 'melga', 0.672, 3, 33610);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 5 Milagro D', 'melga', 0.576, 3, 33761);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 6 Milagro D', 'melga', 0.711, 3, 35503);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 7 Milagro D', 'melga', 0.516, 3, 36224);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 8 Milagro D', 'melga', 0.474, 3, 25695);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 9 Milagro D', 'melga', 0.045, 3, 2618);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 1 Milagro B', 'melga', 0.216, 3, 10920);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 2 Milagro B', 'melga', 0.495, 3, 24039);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 3 Milagro B', 'melga', 0.726, 3, 37812);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 4 Milagro B', 'melga', 0.779, 3, 37812);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 5 Milagro B', 'melga', 0.778, 3, 39343);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 6 Milagro B', 'melga', 0.787, 3, 40756);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 7 Milagro B', 'melga', 0.774, 3, 40084);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 8 Milagro B', 'melga', 0.776, 3, 39119);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 9 Milagro B', 'melga', 0.779, 3, 37071);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 10 Milagro B', 'melga', 0.856, 3, 45295);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 11 Milagro B', 'melga', 0.796, 3, 34202);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 12 Milagro B', 'melga', 0.704, 3, 47182);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 13 Milagro B', 'melga', 0.773, 3, 34450);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 14 Milagro B', 'melga', 0.803, 3, 42198);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 15 Milagro B', 'melga', 0.735, 3, 40179);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 16 Milagro B', 'melga', 0.741, 3, 35056);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 17 Milagro B', 'melga', 0.471, 3, 25694);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 18 Milagro B', 'melga', 0.062, 3, 3444);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 19 Milagro B', 'melga', 0.243, 3, 12749);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 20 Milagro B', 'melga', 0.762, 3, 43670);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 21 Milagro B', 'melga', 0.826, 3, 43670);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 22 Milagro B', 'melga', 0.031, 3, 6110);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 4 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 5 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 6 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 7 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 8 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 9 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 10 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 11 Rositas', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 Guadalupana', 'seccion', 10.14, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 Guadalupana', 'seccion', 9.91, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 Guadalupana', 'seccion', 9.92, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 4 Guadalupana', 'seccion', 9.92, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 San Jorge', 'seccion', 7.22, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 San Jorge', 'seccion', 7.22, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 San Jorge', 'seccion', 7.21, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 4 San Jorge', 'seccion', 7.21, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 1 El Llanito', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 2 El Llanito', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 3 El Llanito', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Seccion 4 El Llanito', 'seccion', 0, 2, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 1 Papaloapan', 'tabla', 3.2862, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 2 Papaloapan', 'tabla', 3.4216, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 3 Papaloapan', 'tabla', 3.2221, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 4 Papaloapan', 'tabla', 3.2612, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 5 Papaloapan', 'tabla', 3.2203, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 6 Papaloapan', 'tabla', 3.2594, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 7 Papaloapan', 'tabla', 3.1893, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 8 Papaloapan', 'tabla', 3.2212, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 9 Papaloapan', 'tabla', 3.2785, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 10 Papaloapan', 'tabla', 3.3683, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 11 Papaloapan', 'tabla', 3.2334, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 12 Papaloapan', 'tabla', 4.2547, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 13 Papaloapan', 'tabla', 2.023, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 14 Papaloapan', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 15 Papaloapan', 'tabla', 2.1869, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 16 Papaloapan', 'tabla', 4.4139, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 1 San Luis', 'tabla', 3.5721, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 2 San Luis', 'tabla', 3.4956, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 3 San Luis', 'tabla', 3.0031, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 4 San Luis', 'tabla', 3.4609, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 5 San Luis', 'tabla', 3.2054, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 6 San Luis', 'tabla', 3.4096, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 7 San Luis', 'tabla', 3.4112, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 8 San Luis', 'tabla', 3.5248, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 9 San Luis', 'tabla', 3.687, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 10 San Luis', 'tabla', 3.7135, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 11 San Luis', 'tabla', 3.6455, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 12 San Luis', 'tabla', 0, 15, 0);
    INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Tabla 13 San Luis', 'tabla', 0, 15, 0);

 ✔ Cambio en catalogos de salida seleccion multiple @done (18-12-04 20:21) pcc|san|pct|lap
   UPDATE public.privilegios SET nombre='Cultivo / Actividad / Producto' WHERE id = 15;
   UPDATE public.privilegios SET nombre='Areas / Ranchos / Lineas' WHERE id = 470;
   CREATE TABLE public.compras_salidas_centro_costo
      (
        id_centro_costo bigint NOT NULL,
        id_salida bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de centro de costo asignados a la salida
        CONSTRAINT compras_salidas_centro_costo_pkey PRIMARY KEY (id_centro_costo, id_salida),
        CONSTRAINT compras_salidas_centro_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
            REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_salidas_centro_costo_id_salida_fkey FOREIGN KEY (id_salida)
            REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_salidas_centro_costo
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_salidas_centro_costo.num IS 'numero de centro de costo asignados a la salida';
   CREATE TABLE public.compras_salidas_rancho
      (
        id_rancho bigint NOT NULL,
        id_salida bigint NOT NULL,
        num integer NOT NULL DEFAULT 1, -- numero de ranchos asignados a la salida
        CONSTRAINT compras_salidas_rancho_pkey PRIMARY KEY (id_rancho, id_salida),
        CONSTRAINT compras_salidas_rancho_id_rancho_fkey FOREIGN KEY (id_rancho)
            REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT compras_salidas_rancho_id_salida_fkey FOREIGN KEY (id_salida)
            REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.compras_salidas_rancho
        OWNER TO programa;
      COMMENT ON COLUMN public.compras_salidas_rancho.num IS 'numero de ranchos asignados a la salida';
      COMMENT ON COLUMN public.compras_salidas_rancho.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
   INSERT INTO compras_salidas_rancho (id_salida, id_rancho) (SELECT id_salida, id_rancho FROM compras_salidas WHERE id_rancho IS NOT NULL);
   INSERT INTO compras_salidas_centro_costo (id_salida, id_centro_costo) (SELECT id_salida, id_centro_costo FROM compras_salidas WHERE id_centro_costo IS NOT NULL);
   --> ALTER TABLE public.compras_salidas DROP COLUMN id_rancho;
   --> ALTER TABLE public.compras_salidas DROP COLUMN id_centro_costo;
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Limon Materia Prima', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Piña Miel Materia Prima', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Coco Jimado Materia Prima', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Cajas de Carton para Empaque', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Cajas de Plastico para Empaque', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Arpillas', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Malla Verde CIU (Malladora)', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Film Generico (CIU)', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Bolsa Plana Empaque ', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Bolsa de Plastico para Arpilla', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Separador Perforado Plastico', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Papel', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Progib', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Resistol o Silicato', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Cinta Flexo Piñas', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Esquineros', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Cera', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Fleje', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Etiquetas', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Sellos', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Material de Empaque Diverso', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Tarimas de Madera', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Tarimas de Plastico', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Tarima Certificada', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Agroquímicos y Fertilizantes Nutrientes', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Agroquímicos y Fertilizantes Plagas y Enfermedades', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Bolsa Para Racimo Tratada', 'costosventa');
    INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('Rafia', 'costosventa');



 ✔ Cambios caja chica @done (18-11-27 19:11) pcc|pct|san|lap
    ALTER TABLE public.cajachica_deudores ADD COLUMN tipo character varying(30) NOT NULL DEFAULT 'otros'::character varying;
    COMMENT ON COLUMN public.cajachica_deudores.tipo IS 'otros: cualquier otro deudor, caja_limon: caja de rosy';

    INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('EMPAQUE','ot',TRUE,FALSE);
    INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('APLICACION GENERAL','ot',TRUE,FALSE);

 ✔ Balance general @done (18-08-28 12:59) pct|pcc|lap|san
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Contabilidad',361,TRUE,'#','list',TRUE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Balance General',468,TRUE,'reportes/balance_general/','print',TRUE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Estado de resultado',468,TRUE,'reportes/estado_resultado/','print',TRUE);
    ALTER TABLE public.banco_cuentas ADD COLUMN contable boolean NOT NULL DEFAULT true;
    COMMENT ON COLUMN public.banco_cuentas.contable IS 'si es true esa cuenta se considera en los reportes de balance, etc';

✔ Agregar catalogos a caja chica gastos @done (18-10-08 21:42) pcc|lap|san|pct
     ALTER TABLE otros.bodega_gastos ADD COLUMN id_areac integer;
     ALTER TABLE otros.bodega_gastos ADD COLUMN id_rancho bigint;
     ALTER TABLE otros.bodega_gastos ADD COLUMN id_centro_costo bigint;
     ALTER TABLE otros.bodega_gastos ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN otros.bodega_gastos.id_areac IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN otros.bodega_gastos.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_areac_fkey FOREIGN KEY (id_areac) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
 ✔ Apartado de traspaso en bodega y caja chica @done (18-11-07 12:27) lap|pcc|san|pct
     CREATE TABLE otros.bodega_traspasos
        (
          id_traspaso bigserial NOT NULL,
          concepto character varying(500) NOT NULL,
          monto double precision NOT NULL DEFAULT (0)::double precision,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          no_impresiones integer NOT NULL DEFAULT 0,
          id_usuario bigint,
          fecha_creacion timestamp without time zone DEFAULT now(),
          tipo boolean NOT NULL DEFAULT true, -- true: ingreso, false: retiro
          CONSTRAINT bodega_traspasos_pkey PRIMARY KEY (id_traspaso),
          CONSTRAINT bodega_traspasos_id_usuario_fkey FOREIGN KEY (id_usuario)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE );
        ALTER TABLE otros.bodega_traspasos OWNER TO programa;
        COMMENT ON COLUMN otros.bodega_traspasos.tipo IS 'true: ingreso, false: retiro';
     CREATE TABLE public.cajachica_traspasos
        (
          id_traspaso bigserial NOT NULL,
          concepto character varying(500) NOT NULL,
          monto double precision NOT NULL DEFAULT (0)::double precision,
          fecha date NOT NULL,
          no_caja integer NOT NULL DEFAULT 1,
          no_impresiones integer NOT NULL DEFAULT 0,
          id_usuario bigint,
          fecha_creacion timestamp without time zone DEFAULT now(),
          tipo boolean NOT NULL DEFAULT true, -- true: ingreso, false: retiro
          CONSTRAINT cajachica_traspasos_pkey PRIMARY KEY (id_traspaso),
          CONSTRAINT cajachica_traspasos_id_usuario_fkey FOREIGN KEY (id_usuario)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE );
        ALTER TABLE public.cajachica_traspasos OWNER TO programa;
        COMMENT ON COLUMN public.cajachica_traspasos.tipo IS 'true: ingreso, false: retiro';
 ✔ Agregar nuevos cultivos o aras y agregarlo a empleados @done (18-11-06 21:14) pcc|pct|lap|san
     ALTER TABLE public.usuarios ADD COLUMN id_area integer;
     ALTER TABLE public.usuarios ADD CONSTRAINT usuarios_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('PLASTICOS','ot',TRUE,FALSE);
     INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('BODEGA GDL','ot',TRUE,FALSE);
     INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('INTANGIBLES','ot',TRUE,FALSE);
     --INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('ADMINISTRATIVOS','ot',TRUE,FALSE);
     INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('FLETES','ot',TRUE,FALSE);
✔ Cambios en centros de costo @done (18-10-20 13:55) pct|pcc|lap|san
     Nota: en la tabla cajachica_categorias solo tiene que haber una categoria ligada a 1 empresa con status activo
     ALTER TABLE nomina_prestamos ADD COLUMN id_movimiento bigint;
     ALTER TABLE nomina_prestamos ADD CONSTRAINT nomina_prestamos_id_movimiento_fkey FOREIGN KEY (id_movimiento) REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
✔ Prestamos nomina @done (18-11-05 14:28) lap|pct|pcc|san
     COMMENT ON COLUMN public.nomina_prestamos.tipo IS 'fi: fiscal (solo de nomina), ef: efectivo (mostrar en caja), mt: materiales';
✔ Cambios en centros de costo @done (18-10-20 13:55) pct|lap|pcc|san
     ALTER TABLE otros.polizas_movimientos ADD COLUMN id_movimiento bigint;
     ALTER TABLE otros.polizas_movimientos ADD CONSTRAINT polizas_movimientos_id_movimiento_fkey FOREIGN KEY (id_movimiento) REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
 ✔ Cambios en centros de costo y movimientos directos @done (18-10-20 13:55) lap|pct|pcc|san
     ALTER TABLE otros.centro_costo ADD COLUMN cuenta_cpi character varying(15);
     ALTER TABLE otros.polizas_movimientos ADD COLUMN cuenta_cpi character varying(15);
 ✔ Cambio en activos @done (18-10-23 12:55) lap|pct|pcc|san
     ALTER TABLE public.productos ADD COLUMN monto double precision NOT NULL DEFAULT 0;
 ✔ Caja chica de rosy poner saldo y no agregar gastos @done (18-10-29 16:26) pct|lap|pcc|san
    CREATE TABLE public.cajachicas
      (
        id serial NOT NULL,
        no_caja character varying(15) NOT NULL,
        nombre character varying(80) NOT NULL,
        presupuesto double precision NOT NULL DEFAULT 0,
        CONSTRAINT cajachicas_pkey PRIMARY KEY (id)
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.cajachicas OWNER TO programa;
      INSERT INTO public.cajachicas (no_caja, nombre, presupuesto) VALUES ('1', 'Caja Limon', 150000);
      INSERT INTO public.cajachicas (no_caja, nombre, presupuesto) VALUES ('2', 'Caja Gastos', 0);
      INSERT INTO public.cajachicas (no_caja, nombre, presupuesto) VALUES ('3', 'Caja Coco', 0);
      INSERT INTO public.cajachicas (no_caja, nombre, presupuesto) VALUES ('4', 'Caja Venta de Contado', 0);
      INSERT INTO public.cajachicas (no_caja, nombre, presupuesto) VALUES ('prest1', 'Caja prestamos', 0);
 ✔ Bascula intangilbes @done (18-10-24 20:50) pcc|pct|lap|san
     ALTER TABLE public.bascula ADD COLUMN intangible boolean NOT NULL DEFAULT false;
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Boletas intangibles',42,TRUE,'bascula/aintangibles/','file-text-alt',FALSE);
 ✔ Modulo de Registro de movimientos (Plizas) @done (18-10-22 14:54) pct|pcc|lap|san
     CREATE TABLE otros.polizas
        (
          id bigserial NOT NULL,
          id_empresa integer NOT NULL,
          fecha date NOT NULL,
          folio integer NOT NULL,
          concepto character varying(250),
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT polizas_pkey PRIMARY KEY (id),
          CONSTRAINT polizas_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE ); ALTER TABLE otros.polizas OWNER TO programa;
     CREATE TABLE otros.polizas_movimientos
        (
          id_poliza bigint NOT NULL,
          "row" integer NOT NULL,
          id_centro_costo bigint NOT NULL,
          tipo boolean, -- true: suma o incrementa, false: resta o decrementa
          monto double precision NOT NULL DEFAULT 0,
          CONSTRAINT polizas_movimientos_pkey PRIMARY KEY (id_poliza, "row"),
          CONSTRAINT polizas_movimientos_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
              REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT polizas_movimientos_id_poliza_fkey FOREIGN KEY (id_poliza)
              REFERENCES otros.polizas (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        ) WITH ( OIDS=FALSE ); ALTER TABLE otros.polizas_movimientos OWNER TO programa;
        COMMENT ON COLUMN otros.polizas_movimientos.tipo IS 'true: suma o incrementa, false: resta o decrementa';
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Registro manual de movimientos',0,TRUE,'registro_movimientos/','file-text-alt',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',480,TRUE,'registro_movimientos/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',480,FALSE,'registro_movimientos/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',480,FALSE,'registro_movimientos/cancelar/','ban-circle',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',480,FALSE,'registro_movimientos/imprimir/','print',FALSE);
 ✔ Cambios en centros de costo @done (18-10-20 13:55) pcc|pct|lap|san
     ALTER TABLE otros.centro_costo ADD COLUMN cuenta_cpi character varying(15);
     ALTER TABLE otros.centro_costo ADD COLUMN anios_credito integer;
     ALTER TABLE otros.centro_costo ADD COLUMN id_cuenta integer;
     ALTER TABLE otros.centro_costo ADD CONSTRAINT centro_costo_id_cuenta_fkey FOREIGN KEY (id_cuenta) REFERENCES public.banco_cuentas (id_cuenta) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
✔ Agregar catalogos a caja chica gastos @done (18-10-08 21:42) pct|pcc|lap|san
     ALTER TABLE public.cajachica_gastos ADD COLUMN id_areac integer;
     ALTER TABLE public.cajachica_gastos ADD COLUMN id_rancho bigint;
     ALTER TABLE public.cajachica_gastos ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.cajachica_gastos ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.cajachica_gastos.id_areac IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.cajachica_gastos.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_areac_fkey FOREIGN KEY (id_areac) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
✔ Agregar catalogos a retiros de banco @done (18-10-08 21:42) pct|lap|san
     ALTER TABLE public.banco_movimientos ADD COLUMN id_area integer;
     ALTER TABLE public.banco_movimientos ADD COLUMN id_rancho bigint;
     ALTER TABLE public.banco_movimientos ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.banco_movimientos ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.banco_movimientos.id_area IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.banco_movimientos.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.banco_movimientos ADD CONSTRAINT banco_movimientos_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.banco_movimientos ADD CONSTRAINT banco_movimientos_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.banco_movimientos ADD CONSTRAINT banco_movimientos_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.banco_movimientos ADD CONSTRAINT banco_movimientos_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
✔ Seeder catalogo centro de costos @done (18-10-16 10:22) pct|pcc|san
      DELETE FROM otros.centro_costo;
      ALTER SEQUENCE otros.centro_costo_id_centro_costo_seq RESTART WITH 1;
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR PAGOS PROVISIONALES', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR RETENCIONES BANCO', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR SALDO A FAVOR', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IEPS PAGADO', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IVA ACREDITABLE', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SUBSIDIO PARA EL EMPLEO', 'impuestoafavor');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IMSS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('INFONAVIT', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RCV', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR POR SALARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RETENCION IVA 4%', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RETENCION IVA 10.67% HONORARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RETENCION ISR 10% HONORARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RETENCION IVA 10.67% ARRENDAMIENTO', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RETENCION ISR 10% ARRENDAMIENTO', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR POR ASIMILABLES A SALARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR ANUAL', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PTU ANUAL', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('2% SOBRE NOMINAS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PROVISION RETENCION ISR 10% HONORARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PROVISION RETENCION IVA 10.67% HONORARIOS', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PROVISION RETENCION ISR 10% ARRENDAMIENTO', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PROVISION RETENCION IVA 10.67% ARRENDAMIENTO', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PROVISION RETENCION IVA 4%', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IVA TRASLADADO', 'impuestoxpagar');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('APOYOS RECIBIDOS', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SEGUROS Y FIANZAS', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CERTIFICADOS FITOSANITARIOS', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('REVISION DE CARGA', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('BULTOS MAQUILADOS', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('OTROS INGRESOS VARIOS', 'otrosingresos');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RENDIMIENTOS BANCARIOS (INTERESES)', 'productofinanc');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GANANCIA CAMBIARIA', 'productofinanc');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SUELDOS Y SALARIOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('AGUINALDO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('VACACIONES', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PRIMA VACACIONAL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('DESPENSA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('P PUNTUALIDAD', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('P ASISTENCIA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('HORAS EXTRAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('INDEMNIZACION CONSTITUCIONAL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PRIMA DE ANTIGUEDAD', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('BONIFICACION LABORAL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IMSS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('INFONAVIT', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RCV', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('2% SOBRE NOMINAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('IMPUESTOS Y DERECHOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RECARGOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ARRENDAMIENTO P FISICA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ARRENDAMIENTO P MORAL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('HONORARIOS P FISICA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('HONORARIOS P MORAL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('DEPRECIACIONES', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GASOLINA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('DIESEL', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GAS L.P.', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ENERGIA ELECTRICA (LUZ)', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('AGUA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('TELEFONO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('TELEFONO CELULAR', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PAPELERIA Y ART. DE OFICINA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('VIATICOS Y GASTOS DE VIAJE', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MENSAJERIA Y PAQUETERIA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PUBLICIDAD', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('UNIFORMES', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SEGURIDAD Y VIGILANCIA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SEGUROS Y FIANZAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ARTICULOS DE LIMPIEZA Y ASEO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MATERIAL Y HERRAMIENTAS DE TRABAJO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RENTA DE MAQUINARIA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MAQUINARIA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('RENTA DE TERRENOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CUOTAS, SUBCRIPCIONES Y MEMBRESIAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CAPACITACION Y ADIESTRAMIENTO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GASTOS DE REPRESENTACION', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('COMISIONES PAGADAS POR VENTAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('FLETES Y ACARREOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('COMISION Y REPRESENTACION DE VENTAS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GASTOS DE CERTIFICACIÓN ', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ESTUDIOS Y ANALISIS DE SUELO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CONSTANCIAS DE MOVILIZACIÓN', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('FUMIGACIONES', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CUENTAS INCOBRABLES', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('DESPACHO ADUANAL Y/O OTROS CA', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('CONEXION DE REFRIGERADO', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('SERVICIOS DE FACTURACION (TIMBRADO)', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('DONATIVOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('GASTOS VARIOS', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('ISR', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PTU', 'gasto');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO DE SITIO WEB Y SISTEMAS INFORMATICOS', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO. DE EQUIPO DE TRANSPORTE', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO. DE EQUIPO DE COMPUTO', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO DE MOBILIARIO Y EQUIPO', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO. DE EDIFICIOS E INSTALACIONES', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO. DE MAQUINARIA Y EQUIPO', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('MANTTO. DE EQUIPO DE RIEGO', 'servicio');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('COMISIONES BANCARIAS', 'gastofinanciero');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('INTERESES ORDINARIOS', 'gastofinanciero');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('INTERESES MORATORIOS', 'gastofinanciero');
      INSERT INTO otros.centro_costo(nombre, tipo) VALUES ('PERDIDA CAMBIARIA', 'gastofinanciero');
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 1', 'melga', 0.661, 3, 37464);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 2', 'melga', 0.584, 3, 34672);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 3', 'melga', 0.662, 3, 36717);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 4', 'melga', 0.672, 3, 33610);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 5', 'melga', 0.576, 3, 33761);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 6', 'melga', 0.711, 3, 35503);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 7', 'melga', 0.516, 3, 36224);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 8', 'melga', 0.474, 3, 25695);
      INSERT INTO otros.centro_costo(nombre, tipo, hectareas, id_area, no_plantas) VALUES ('Melga 9', 'melga', 0.045, 3, 2618);
✔ Tipo de activos en productos @done (18-10-16 20:46) pcc|pct|san
   ALTER TABLE public.productos ADD COLUMN tipo_activo character varying(5);
   COMMENT ON COLUMN public.productos.tipo_activo IS 'et: Equipo de Transporte, ec: Equipo de Computo, meo: Mobiliario y Equipo de Oficina, me: Maquinaria y Equipo, e: Edificios, t: Terrenos';
   ALTER TABLE public.compras ADD COLUMN intangible boolean DEFAULT false;
   COMMENT ON COLUMN public.compras.intangible IS 'true: son gastos por fuera o de facturas';
✔ Agregar catalogos a salidas @done (18-10-08 21:42) pcc|pct|san
     ALTER TABLE public.compras_salidas ADD COLUMN id_area integer;
     ALTER TABLE public.compras_salidas ADD COLUMN id_rancho bigint;
     ALTER TABLE public.compras_salidas ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.compras_salidas ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.compras_salidas.id_area IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.compras_salidas.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
✔ Agregar catalogos a gastos @done (18-10-08 21:42) pcc|pct|san
     ALTER TABLE public.compras ADD COLUMN id_area integer;
     ALTER TABLE public.compras ADD COLUMN id_rancho bigint;
     ALTER TABLE public.compras ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.compras ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.compras.id_area IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.compras.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.compras ADD CONSTRAINT compras_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras ADD CONSTRAINT compras_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras ADD CONSTRAINT compras_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras ADD CONSTRAINT compras_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
✔ Agregar catalogos a ordenes de compra @done (18-10-08 21:42) pcc|pct|san
     ALTER TABLE public.compras_ordenes ADD COLUMN id_area integer;
     ALTER TABLE public.compras_ordenes ADD COLUMN id_rancho bigint;
     ALTER TABLE public.compras_ordenes ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.compras_ordenes ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.compras_ordenes.id_area IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.compras_ordenes.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     COMMENT ON COLUMN public.compras_ordenes.tipo_orden IS 'p:productos (inventario), d:descripciones (servicios gasto), f:fletes (gasto), oc: Gastos, a: Activos';
 ✔ Agregar catalogos a ordenes de requisicion @done (18-10-08 21:42) pcc|lap|pct|san
     ALTER TABLE public.compras_requisicion ADD COLUMN id_area integer;
     ALTER TABLE public.compras_requisicion ADD COLUMN id_rancho bigint;
     ALTER TABLE public.compras_requisicion ADD COLUMN id_centro_costo bigint;
     ALTER TABLE public.compras_requisicion ADD COLUMN id_activo bigint;
     COMMENT ON COLUMN public.compras_requisicion.id_area IS 'Area de bascula = Cultivos';
     COMMENT ON COLUMN public.compras_requisicion.id_rancho IS 'Areas de aplicacion = ranchos, lineas, etc';
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_area_fkey FOREIGN KEY (id_area) REFERENCES public.areas (id_area) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_centro_costo_fkey FOREIGN KEY (id_centro_costo) REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_rancho_fkey FOREIGN KEY (id_rancho) REFERENCES otros.ranchos (id_rancho) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL;
     ALTER TABLE public.compras_requisicion ADD CONSTRAINT compras_requisicion_id_activo_fkey FOREIGN KEY (id_activo) REFERENCES public.productos (id_producto) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL; CREATE TABLE otros.ranchos
        (
          id_rancho bigserial NOT NULL,
          id_empresa integer NOT NULL,
          id_area integer NOT NULL, -- el area son los cultivos
          nombre character varying(150) NOT NULL,
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT ranchos_pkey PRIMARY KEY (id_rancho),
          CONSTRAINT ranchos_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT ranchos_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.ranchos
          OWNER TO programa;
        COMMENT ON COLUMN otros.ranchos.id_area IS 'el area son los cultivos';
     CREATE TABLE otros.centro_costo
        (
          id_centro_costo bigserial NOT NULL,
          id_area integer,
          nombre character varying(100) NOT NULL,
          tipo character varying(15) NOT NULL DEFAULT 'gasto'::character varying, -- gasto (compras), banco (bancos), melga (piña), tabla (platano), seccion (limon)
          hectareas double precision NOT NULL DEFAULT 0,
          no_plantas integer NOT NULL DEFAULT 0,
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT centro_costo_pkey PRIMARY KEY (id_centro_costo),
          CONSTRAINT centro_costo_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE SET NULL
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.centro_costo
          OWNER TO programa;
        COMMENT ON TABLE otros.centro_costo
          IS 'donde se asigna el gasto, donde se aplican los productos, etc';
     COMMENT ON COLUMN otros.centro_costo.tipo IS 'gasto (compras), servicio (compras servicios), banco (bancos), melga (piña), tabla (platano), seccion (limon)';
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Areas',0,TRUE,'ranchos/','magnet',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',470,TRUE,'ranchos/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',470,FALSE,'ranchos/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',470,FALSE,'ranchos/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',470,FALSE,'ranchos/activar/','ok',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Centros de costo',0,TRUE,'centro_costo/','magnet',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',475,TRUE,'centro_costo/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',475,FALSE,'centro_costo/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',475,FALSE,'centro_costo/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',475,FALSE,'centro_costo/activar/','ok',FALSE);
     CREATE TABLE otros.proveedores_centros_costo
        (
          id_proveedor bigint NOT NULL,
          id_centro_costo bigint NOT NULL,
          CONSTRAINT proveedores_centros_costo_pkey PRIMARY KEY (id_proveedor, id_centro_costo),
          CONSTRAINT proveedores_centros_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
              REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT proveedores_centros_costo_id_proveedor_fkey FOREIGN KEY (id_proveedor)
              REFERENCES public.proveedores (id_proveedor) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.proveedores_centros_costo
          OWNER TO programa;
 ✔ Catalogo Ranchos y centros de costo @done (18-10-01 10:59) pct|pcc|lap|san
     CREATE TABLE otros.ranchos
        (
          id_rancho bigserial NOT NULL,
          id_empresa integer NOT NULL,
          id_area integer NOT NULL, -- el area son los cultivos
          nombre character varying(150) NOT NULL,
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT ranchos_pkey PRIMARY KEY (id_rancho),
          CONSTRAINT ranchos_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT ranchos_id_empresa_fkey FOREIGN KEY (id_empresa)
              REFERENCES public.empresas (id_empresa) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.ranchos
          OWNER TO programa;
        COMMENT ON COLUMN otros.ranchos.id_area IS 'el area son los cultivos';
     CREATE TABLE otros.centro_costo
        (
          id_centro_costo bigserial NOT NULL,
          id_area integer,
          nombre character varying(100) NOT NULL,
          tipo character varying(15) NOT NULL DEFAULT 'gasto'::character varying, -- gasto (compras), banco (bancos), melga (piña), tabla (platano), seccion (limon)
          hectareas double precision NOT NULL DEFAULT 0,
          no_plantas integer NOT NULL DEFAULT 0,
          status boolean NOT NULL DEFAULT true,
          CONSTRAINT centro_costo_pkey PRIMARY KEY (id_centro_costo),
          CONSTRAINT centro_costo_id_area_fkey FOREIGN KEY (id_area)
              REFERENCES public.areas (id_area) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE SET NULL
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.centro_costo
          OWNER TO programa;
        COMMENT ON TABLE otros.centro_costo
          IS 'donde se asigna el gasto, donde se aplican los productos, etc';
     COMMENT ON COLUMN otros.centro_costo.tipo IS 'gasto (compras), servicio (compras servicios), banco (bancos), melga (piña), tabla (platano), seccion (limon)';
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Areas',0,TRUE,'ranchos/','magnet',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',470,TRUE,'ranchos/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',470,FALSE,'ranchos/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',470,FALSE,'ranchos/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',470,FALSE,'ranchos/activar/','ok',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Centros de costo',0,TRUE,'centro_costo/','magnet',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',475,TRUE,'centro_costo/agregar/','plus',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',475,FALSE,'centro_costo/modificar/','edit',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',475,FALSE,'centro_costo/eliminar/','remove',FALSE);
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',475,FALSE,'centro_costo/activar/','ok',FALSE);
     CREATE TABLE otros.proveedores_centros_costo
        (
          id_proveedor bigint NOT NULL,
          id_centro_costo bigint NOT NULL,
          CONSTRAINT proveedores_centros_costo_pkey PRIMARY KEY (id_proveedor, id_centro_costo),
          CONSTRAINT proveedores_centros_costo_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
              REFERENCES otros.centro_costo (id_centro_costo) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,
          CONSTRAINT proveedores_centros_costo_id_proveedor_fkey FOREIGN KEY (id_proveedor)
              REFERENCES public.proveedores (id_proveedor) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (
          OIDS=FALSE
        );
        ALTER TABLE otros.proveedores_centros_costo
          OWNER TO programa;

 ✔ Familia activos y tipo de productos @done (18-09-26 20:54) pcc|pct|lap|san
   ALTER TABLE public.productos ADD COLUMN tipo character varying(5);
   COMMENT ON COLUMN public.productos.tipo IS 'v: verde (organico), a: amarillo (organico opc), r: rojo (no organico)';
   COMMENT ON COLUMN public.productos_familias.tipo IS 'p:productos (inventario), d:descripciones (servicios), f:fletes, a: activos';
   CREATE TABLE public.areas_empresas
      (
        id_area integer NOT NULL,
        id_empresa integer NOT NULL,
        CONSTRAINT areas_empresas_pkey PRIMARY KEY (id_area, id_empresa),
        CONSTRAINT areas_empresas_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES public.areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT areas_empresas_id_empresa_fkey FOREIGN KEY (id_empresa)
            REFERENCES public.empresas (id_empresa) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.areas_empresas
        OWNER TO programa;
   CREATE TABLE public.productos_piezas
      (
        id_pieza bigserial NOT NULL,
        id_producto bigint,
        nombre character varying(25),
        cantidad double precision DEFAULT 0,
        status character varying(2) NOT NULL DEFAULT 'ac'::character varying, -- Corresponde al status activo o eliminado ('ac',  'e')
        CONSTRAINT productos_piezas_pkey PRIMARY KEY (id_pieza),
        CONSTRAINT productos_piezas_id_producto_fkey FOREIGN KEY (id_producto)
            REFERENCES public.productos (id_producto) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.productos_piezas
        OWNER TO programa;
      COMMENT ON COLUMN public.productos_piezas.status IS 'Corresponde al status activo o eliminado (''ac'',  ''e'')';

 ✔ Descuento de cocina en nomina @done (18-09-19 12:39) pct|pcc|san|lap
   ALTER TABLE public.nomina_fiscal_presave ADD COLUMN desc_cocina double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.nomina_fiscal ADD COLUMN descuento_cocina double precision NOT NULL DEFAULT 0;
   CREATE MATERIALIZED VIEW public.existencia_productos AS
     SELECT pf.id_familia,
        pf.nombre,
        p.id_producto,
        p.id_empresa,
        p.nombre AS nombre_producto,
        pu.abreviatura,
        COALESCE(co.cantidad, 0::double precision) AS entradas,
        COALESCE(sa.cantidad, 0::double precision) AS salidas,
        0 AS saldo_anterior,
        p.stock_min,
        COALESCE(co.cantidad, 0::double precision) - COALESCE(sa.cantidad, 0::double precision) AS existencia
       FROM productos p
         JOIN productos_familias pf ON pf.id_familia = p.id_familia
         JOIN productos_unidades pu ON pu.id_unidad = p.id_unidad
         LEFT JOIN ( SELECT cp.id_producto,
                sum(cp.cantidad) AS cantidad
               FROM compras_ordenes co_1
                 JOIN compras_productos cp ON cp.id_orden = co_1.id_orden
              WHERE co_1.status::text <> 'ca'::text AND (co_1.tipo_orden::text = ANY (ARRAY['p'::character varying, 't'::character varying]::text[])) AND cp.status::text = 'a'::text AND date(cp.fecha_aceptacion) <= date(now()) AND co_1.id_almacen = 1
              GROUP BY cp.id_producto) co ON co.id_producto = p.id_producto
         LEFT JOIN ( SELECT sp.id_producto,
                sum(sp.cantidad) AS cantidad
               FROM compras_salidas sa_1
                 JOIN compras_salidas_productos sp ON sp.id_salida = sa_1.id_salida
              WHERE sa_1.status::text <> 'ca'::text AND sp.tipo_orden::text = 'p'::text AND date(sa_1.fecha_registro) <= date(now()) AND sa_1.id_almacen = 1
              GROUP BY sp.id_producto) sa ON sa.id_producto = p.id_producto
      WHERE p.status::text = 'ac'::text AND pf.status::text = 'ac'::text AND pf.tipo::text = 'p'::text
      ORDER BY pf.nombre, p.nombre
    WITH DATA; ALTER TABLE public.existencia_productos OWNER TO programa;
 ✔ Cambios en caja chica @done (18-09-10 19:07) pcc|pct|san|lap
     INSERT INTO public.cajachica_nomenclaturas(nombre, nomenclatura, status) VALUES ('INTANGIBLES','11',TRUE);
     INSERT INTO public.cajachica_nomenclaturas(nombre, nomenclatura, status) VALUES ('NOMINA REEMBOLSADA','12',TRUE);
     CREATE TABLE public.cajachica_deudores
        (
          id_deudor bigserial NOT NULL,
          fecha date NOT NULL,
          nombre character varying(150) NOT NULL,
          concepto character varying(250) NOT NULL,
          monto double precision NOT NULL DEFAULT (0)::double precision,
          no_caja integer NOT NULL DEFAULT 1,
          no_impresiones integer NOT NULL DEFAULT 0,
          id_usuario bigint,
          fecha_creacion timestamp without time zone DEFAULT now(),
          CONSTRAINT cajachica_deudores_pkey PRIMARY KEY (id_deudor),
          CONSTRAINT cajachica_deudores_id_usuario_fkey FOREIGN KEY (id_usuario)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (OIDS=FALSE );
        ALTER TABLE public.cajachica_deudores OWNER TO programa;
     CREATE TABLE public.cajachica_deudores_pagos
        (
          id_deudor bigint NOT NULL,
          fecha_creacion timestamp without time zone DEFAULT now(),
          fecha date NOT NULL,
          monto double precision NOT NULL DEFAULT (0)::double precision,
          no_caja integer NOT NULL DEFAULT 1,
          id_usuario bigint,
          CONSTRAINT cajachica_deudores_pagos_pkey PRIMARY KEY (id_deudor, fecha_creacion),
          CONSTRAINT cajachica_deudores_pagos_id_usuario_fkey FOREIGN KEY (id_usuario)
              REFERENCES public.usuarios (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        )
        WITH (OIDS=FALSE );
        ALTER TABLE public.cajachica_deudores_pagos OWNER TO programa;

 ✔ Precio salida almacen @done (18-09-11 21:19) pcc|pct|san|lap
   ALTER TABLE public.productos ADD COLUMN last_precio double precision NOT NULL DEFAULT 0;
   UPDATE productos SET last_precio = t.precio_unitario
      FROM (
        SELECT distinct on(id_producto) id_producto, precio_unitario
        FROM compras_productos
        ORDER BY id_producto ASC, id_orden DESC
      ) t
      WHERE productos.id_producto = t.id_producto


 ✔ Calculo costo promedio @done (18-09-11 21:36) pcc|san|lap
   UPDATE productos SET precio_promedio = t.costo
        FROM (
          SELECT p.id_producto, p.nombre, Round(pc.costo::decimal, 2) AS costo
          FROM productos p
            INNER JOIN productos_familias pf ON pf.id_familia = p.id_familia
            INNER JOIN (
              SELECT id_producto, (Sum(importe) / (CASE Sum(cantidad) WHEN 0 THEN 1 ELSE Sum(cantidad) END)) AS costo
              FROM compras_productos
              WHERE id_producto > 0 AND status = 'a' AND id_compra IS NOT NULL
              GROUP BY id_producto
            ) pc ON p.id_producto = pc.id_producto
          WHERE pf.tipo = 'p' AND p.status = 'ac'
        ) t
        WHERE productos.id_producto = t.id_producto
 ✔ Privilegios en caja chica @done (18-08-24 12:44) pcc|san|pct
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar gastos',247,FALSE,'caja_chica/modificar_gastos/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar ingresos',247,FALSE,'caja_chica/modificar_ingresos/','edit',FALSE);

 ✔ Cambios en clasificaciones y polizas @done (18-08-13 15:34) pct|pcc|lap|san
   ALTER TABLE public.clasificaciones ALTER COLUMN cuenta_cpi2 TYPE character varying(1000);
 ✔ Canbios en boleta @done (18-07-27 13:41) pct|pcc|san|lap
   ALTER TABLE public.bascula ADD COLUMN fecha_imp_orig timestamp without time zone;
   ALTER TABLE public.usuarios ADD COLUMN no_checador bigint;
   CREATE INDEX usuarios_no_checador_idx ON public.usuarios USING btree (no_checador);
   ALTER TABLE public.bascula_pagos_basculas ADD COLUMN monto double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.bascula_pagos ADD COLUMN usuario_creo bigint;
   ALTER TABLE public.bascula_pagos ADD CONSTRAINT bascula_pagos_usuario_creo_fkey FOREIGN KEY (usuario_creo) REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.bascula ADD COLUMN metodo_pago character varying(10);
   COMMENT ON COLUMN public.bascula.metodo_pago IS 'co: contado, ot: otro';
   ALTER TABLE nomina_prestamos ADD COLUMN close boolean NOT NULL DEFAULT false;

 ✔ Correciones de nomina @done (18-03-26 22:10) pcc|pct|san|lap
   ALTER TABLE public.nomina_asistencia ADD COLUMN id_registro bigint;
   COMMENT ON COLUMN public.nomina_asistencia.id_registro IS 'id del usuario que registro las asistencias';

 ✔ Restructuracion de las cuentas contpaq para polizas @done (18-03-17 11:16) lap|pcc|pct|san
   ALTER TABLE public.cuentas_contpaq ADD COLUMN tipo_cuenta character varying(40);

 ✔ Comercio exterior 3.3 @done (18-07-27 13:41)
   - Cargar el archivo faccion_arancelariaV2.backup
    ALTER TABLE public.fraccion_arancelaria OWNER TO programa;
    REVOKE ALL ON TABLE public.fraccion_arancelaria FROM facturar_factura;
    REVOKE ALL ON TABLE public.fraccion_arancelaria FROM facturar;
    DROP TABLE otros.c_fraccion_arancelaria;
    ALTER TABLE fraccion_arancelaria SET SCHEMA otros;
    ALTER TABLE otros.fraccion_arancelaria RENAME TO c_fraccion_arancelaria;
    ALTER TABLE public.facturacion_ce ADD COLUMN motivo_traslado character varying(10);
    ALTER TABLE public.facturacion_ce ADD COLUMN extras json;

 ✔ CFDI 3.3 @done (17-11-27 13:05) pct|pcc|san
   - Cargar catalogos catalogos33.backup, Agregar una serie T para traslados
    ALTER TABLE c_clave_prodservs SET SCHEMA otros;
    ALTER TABLE c_clave_unidades SET SCHEMA otros;
    ALTER TABLE c_regimen_fiscal SET SCHEMA otros;
    ALTER TABLE public.clasificaciones ADD COLUMN clave_prod_serv character varying(30);
    ALTER TABLE public.clasificaciones ADD COLUMN clave_unidad character varying(15);
    UPDATE public.empresas SET cfdi_version='3.3';
    ALTER TABLE public.facturacion ADD COLUMN cfdi_ext json;
    ALTER TABLE public.facturacion ALTER COLUMN sello TYPE character varying(400);
    ALTER TABLE public.banco_bancos ADD COLUMN rfc character varying(20);
    UPDATE public.banco_bancos SET rfc='BAF950102JP5' WHERE Lower(nombre) LIKE Lower('%Afirme%');
    UPDATE public.banco_bancos SET rfc='BBA940707IE1' WHERE Lower(nombre) LIKE Lower('%BanBajio%');
    UPDATE public.banco_bancos SET rfc='BMN930209927' WHERE Lower(nombre) LIKE Lower('%Banorte%');
    UPDATE public.banco_bancos SET rfc='BNM840515VB1' WHERE Lower(nombre) LIKE Lower('%Banamex%');
    UPDATE public.banco_bancos SET rfc='BSM970519DU8' WHERE Lower(nombre) LIKE Lower('%Santander%');
    UPDATE public.banco_bancos SET rfc='BBA830831LJ2' WHERE Lower(nombre) LIKE Lower('%BBVA Bancomer%');
    UPDATE public.banco_bancos SET rfc='HMI950125KG8' WHERE Lower(nombre) LIKE Lower('%HSBC%');
    UPDATE public.banco_bancos SET rfc='BSI061110963' WHERE Lower(nombre) LIKE Lower('%BanCoppel%');
    UPDATE public.banco_bancos SET rfc='SIN9412025I4' WHERE Lower(nombre) LIKE Lower('%Scotiabank%');
    INSERT INTO public.banco_bancos (nombre, codigo, rfc) VALUES ('INBURSA', '', 'BII931004P61'),
      ('FAMSA', '', 'BAF060524EV6');
    CREATE TABLE public.clientes_cuentas
    (
      id_cuenta bigserial NOT NULL,
      id_cliente bigint NOT NULL,
      alias character varying(60) NOT NULL,
      cuenta character varying(19) NOT NULL,
      status boolean NOT NULL DEFAULT true,
      id_banco integer NOT NULL DEFAULT 1,
      CONSTRAINT clientes_cuentas_pkey PRIMARY KEY (id_cuenta),
      CONSTRAINT clientes_cuentas_id_banco_fkey FOREIGN KEY (id_banco)
          REFERENCES public.banco_bancos (id_banco) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT clientes_cuentas_id_cliente_fkey FOREIGN KEY (id_cliente)
          REFERENCES public.clientes (id_cliente) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    ) WITH (OIDS=FALSE); ALTER TABLE public.clientes_cuentas OWNER TO programa;
    CREATE TABLE public.banco_movimientos_com_pagos
    (
      id bigserial NOT NULL,
      id_movimiento bigint NOT NULL,
      fecha timestamp with time zone NOT NULL,
      serie character varying(10),
      folio bigint NOT NULL,
      xml text,
      uuid character varying(50),
      cfdi_ext json,
      sello text,
      cadena_original text,
      status character varying(20) NOT NULL DEFAULT 'facturada'::character varying, -- facturada, cancelada
      version character varying(5),
      CONSTRAINT banco_movimientos_com_pagos_pkey PRIMARY KEY (id),
      CONSTRAINT banco_movimientos_com_pagos_id_movimiento_fkey FOREIGN KEY (id_movimiento)
          REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE NO ACTION
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.banco_movimientos_com_pagos OWNER TO programa;
    COMMENT ON COLUMN public.banco_movimientos_com_pagos.status IS 'facturada, cancelada';
    CREATE TABLE public.facturacion_com_pagos
    (
      id_movimiento bigint NOT NULL,
      id_factura bigint NOT NULL,
      CONSTRAINT facturacion_com_pagos_pkey PRIMARY KEY (id_movimiento, id_factura)
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.facturacion_com_pagos OWNER TO programa;
    ALTER TABLE public.banco_movimientos_com_pagos ADD COLUMN id_empresa bigint NOT NULL;
    ALTER TABLE public.banco_movimientos_com_pagos ADD CONSTRAINT banco_movimientos_com_pagos_id_empresa_fkey FOREIGN KEY (id_empresa)
      REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE public.banco_movimientos_com_pagos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
    ALTER TABLE public.facturacion_productos ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_fiscal ADD COLUMN cfdi_ext json;
    ALTER TABLE public.finiquito ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_aguinaldo ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_ptu ADD COLUMN cfdi_ext json;



 ✔ Reporte de estado de cuenta @done (17-09-12 16:19) pct|pcc|lap|san|lap|gdl
   CREATE MATERIALIZED VIEW public.estado_cuenta_abonos AS
       SELECT dd.id_factura,
          COALESCE(dd.id_abono, 0::bigint) AS a_id_abono,
          COALESCE(dd.serie, '-'::character varying) AS a_serie,
          COALESCE(dd.folio, 0::bigint) AS a_folio,
          dd.fecha AS a_fecha,
          COALESCE(dd.concepto, '-'::text) AS a_concepto,
          COALESCE(dd.abono, 0::double precision) AS a_abono
         FROM ( SELECT ff.id_factura,
                  ff.id_abono,
                  ff.serie,
                  ff.folio,
                  ff.fecha,
                  ff.concepto,
                  ff.abono
                 FROM ( SELECT fa.id_factura,
                          fa.id_abono,
                              CASE
                                  WHEN abs.num = 1 THEN ''::text::character varying
                                  ELSE f.serie
                              END AS serie,
                              CASE
                                  WHEN abs.num = 1 THEN fa.id_abono
                                  ELSE f.folio
                              END AS folio,
                          date(fa.fecha) AS fecha,
                              CASE
                                  WHEN abs.num = 1 OR abs.is_factura = false THEN ('Pago del cliente ('::text || fa.ref_movimiento::text) || ')'::text
                                  ELSE 'Pago en parcialidades'::text
                              END AS concepto,
                          fa.total AS abono
                         FROM facturacion_abonos fa
                           LEFT JOIN ( SELECT f_1.id_factura,
                                  count(fa_1.id_abono) AS num,
                                  f_1.is_factura
                                 FROM facturacion f_1
                                   JOIN facturacion_abonos fa_1 ON f_1.id_factura = fa_1.id_factura
                                WHERE date(fa_1.fecha) <= now()
                                GROUP BY f_1.id_factura) abs ON abs.id_factura = fa.id_factura
                           LEFT JOIN facturacion f ON fa.id_abono = f.id_abono_factura
                        WHERE date(fa.fecha) <= now()
                      UNION
                       SELECT facturacion.id_nc AS id_factura,
                          facturacion.id_factura AS id_abono,
                          facturacion.serie,
                          facturacion.folio,
                          date(facturacion.fecha) AS fecha,
                          'NOTA CREDITO DIGITAL'::text AS concepto,
                          facturacion.total AS abono
                         FROM facturacion
                        WHERE facturacion.status::text <> 'ca'::text AND facturacion.status::text <> 'b'::text AND facturacion.id_nc IS NOT NULL AND facturacion.id_abono_factura IS NULL AND date(facturacion.fecha) <= now()) ff) dd
      WITH DATA;
      ALTER TABLE public.estado_cuenta_abonos OWNER TO programa;
   CREATE MATERIALIZED VIEW public.estado_cuenta AS
       SELECT c.id_cliente,
          c.nombre_fiscal,
          c.cuenta_cpi,
          c.dias_credito,
          f.id_factura,
          f.id_empresa,
          date(f.fecha) AS fecha,
          f.serie,
          f.folio,
              CASE f.is_factura
                  WHEN true THEN 'FACTURA ELECTRONICA'::text
                  ELSE 'REMISION'::text
              END AS concepto,
          f.subtotal,
          f.importe_iva,
          f.total,
          f.total / f.tipo_cambio AS total_cambio,
          f.tipo_cambio,
          f.is_factura,
          date(f.fecha + ((f.plazo_credito || ' days'::text)::interval)) AS fecha_vencimiento,
          ab.a_id_abono,
          ab.a_serie,
          ab.a_folio,
          ab.a_fecha,
          ab.a_concepto,
          ab.a_abono
         FROM clientes c
           LEFT JOIN facturacion f ON c.id_cliente = f.id_cliente
           LEFT JOIN ( SELECT remisiones_historial.id_remision,
                  remisiones_historial.id_factura,
                  remisiones_historial.status
                 FROM remisiones_historial
                WHERE remisiones_historial.status::text <> 'ca'::text AND remisiones_historial.status::text <> 'b'::text) fh ON f.id_factura = fh.id_remision
           LEFT JOIN estado_cuenta_abonos ab ON f.id_factura = ab.id_factura
        WHERE c.status::text = 'ac'::text AND f.status::text <> 'ca'::text AND f.status::text <> 'b'::text AND f.id_nc IS NULL AND f.id_abono_factura IS NULL AND COALESCE(fh.id_remision, 0::bigint) = 0
        ORDER BY c.id_cliente, (date(f.fecha)), f.folio, ab.a_fecha
      WITH DATA;
      ALTER TABLE public.estado_cuenta OWNER TO programa;
  ✔ @done (17-09-12 22:23) pcc|san|pct
   CREATE OR REPLACE FUNCTION public.refreshallmaterializedviews(schema_arg text DEFAULT 'public'::text)
        RETURNS integer AS
      $BODY$
        DECLARE
          r RECORD;
        BEGIN
          RAISE NOTICE 'Refreshing materialized view in schema %', schema_arg;
          FOR r IN SELECT matviewname FROM pg_matviews WHERE schemaname = schema_arg ORDER BY matviewname DESC
          LOOP
            RAISE NOTICE 'Refreshing %.%', schema_arg, r.matviewname;
            EXECUTE 'REFRESH MATERIALIZED VIEW ' || schema_arg || '.' || r.matviewname;
          END LOOP;

          RETURN 1;
        END
      $BODY$
        LANGUAGE plpgsql VOLATILE COST 100;
      ALTER FUNCTION public.refreshallmaterializedviews(text) OWNER TO programa;

 ✔ Crear listado de cuentas de proveedores @done (17-09-11 13:06) pct|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte listado de cuentas',10,TRUE,'proveedores/rpt_listado_cuentas/','print',TRUE);
 ✔ Caja 4 @done (17-09-08 00:51) lap|san|pcc
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Caja chica 4',247,TRUE,'caja_chica/caja4/','usd',TRUE);
 ✔ El nuevo reporte de banc @done (17-08-10 16:11) lap|pcc|pct|san
    ALTER TABLE public.banco_movimientos ADD COLUMN fecha_aplico date; COMMENT ON COLUMN public.banco_movimientos.fecha_aplico IS 'Fecha en que se aplico en el banco real (retiro o deposito)';
 ✔ Cambiar sistema de privilegios por emplesa y usuarios @done (17-08-05 10:30) pct|pct|san|lap
   ALTER TABLE public.usuarios_privilegios ADD COLUMN id_empresa integer NOT NULL DEFAULT 2;
   ALTER TABLE public.usuarios_privilegios ADD CONSTRAINT usuarios_privilegios_id_empresa_fkey FOREIGN KEY (id_empresa)
      REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.usuarios_privilegios DROP CONSTRAINT usuarios_privilegios_pkey;
   ALTER TABLE public.usuarios_privilegios ADD CONSTRAINT usuarios_privilegios_pkey PRIMARY KEY(usuario_id, privilegio_id, id_empresa);

 ✔ Entradas, clintes @done (17-06-14 08:59) pcc|san|pct|lap
   ALTER TABLE public.compras_ordenes ADD COLUMN id_registra bigint;
   ALTER TABLE public.clientes ADD COLUMN show_saldo boolean NOT NULL DEFAULT false;

  ✔ No interior clientes @done (17-06-01 10:56) pcc|san|pct|lap
    ALTER TABLE public.clientes ALTER COLUMN no_interior TYPE character varying(20);
 ✔ Reporte @done (17-04-04 15:29) pcc|san|lap|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de saldos bancarios',104,TRUE,'banco/rpt_saldos_bancarios/','print',TRUE);
 ✔ Tickets de ordenes y boletas @done (17-03-22 13:06) pct|pcc|san|lap
    -- Insumo MT
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 20KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CAJA MADERA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 15KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 23KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PRODUCTO DE LIMPIEZA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CERA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TARIMA NAC', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TARIMA CER', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PAPEL', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ARPILLA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ESQUINEROS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'GRAPAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PLASTICO VITAFILM', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FLEJE SEM', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ENGRAPADORA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'SURTIDORES P GRAPA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PELIC ESTIRABLE', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FLEJE MANUAL 5/8', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TAPA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ETIQUETAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FICHAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJA PLASTI 25KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'BOLSA/rpilla', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CAJA DE PLASTICO 28KG', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FIL', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'BACATE DESENGRASANTE', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TAPA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'DESENGRASANTE', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ROLLOS DE MAYA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ENGRAPADORA NEUMATICA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PINZAS PARA GRAPA', 0, TRUE, '0');
    ALTER TABLE public.compras_ordenes ADD COLUMN cont_x_dia integer NOT NULL DEFAULT 0;
    CREATE TABLE public.bascula_lig_orden
    (
      id_bascula bigint NOT NULL,
      id_orden bigint NOT NULL,
      recicio character varying(200),
      entrego character varying(200),
      CONSTRAINT bascula_lig_orden_pkey PRIMARY KEY (id_bascula, id_orden),
      CONSTRAINT bascula_lig_orden_id_bascula_fkey FOREIGN KEY (id_bascula)
          REFERENCES public.bascula (id_bascula) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bascula_lig_orden_id_orden_fkey FOREIGN KEY (id_orden)
          REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE public.bascula_lig_orden OWNER TO programa;

 ✔ Caja de prestamos @done (17-03-11 09:48) pct|pcc|san|lap
   CREATE TABLE otros.cajaprestamo_fondo
      (
        id_fondo bigserial NOT NULL,
        id_empleado bigint,
        id_categoria integer NOT NULL,
        fecha date NOT NULL,
        referencia character varying(70),
        tipo_movimiento boolean NOT NULL DEFAULT true, -- true: ingreso, false: egreso
        no_caja integer NOT NULL DEFAULT 1,
        monto double precision NOT NULL DEFAULT 0,
        no_impresiones smallint NOT NULL DEFAULT 0,
        CONSTRAINT cajaprestamo_fondo_pkey PRIMARY KEY (id_fondo),
        CONSTRAINT cajaprestamo_fondo_id_categoria_fkey FOREIGN KEY (id_categoria)
            REFERENCES public.cajachica_categorias (id_categoria) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT cajaprestamo_fondo_id_empleado_fkey FOREIGN KEY (id_empleado)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE ); ALTER TABLE otros.cajaprestamo_fondo OWNER TO programa;
      COMMENT ON COLUMN otros.cajaprestamo_fondo.tipo_movimiento IS 'true: ingreso, false: egreso';
   ALTER TABLE public.nomina_prestamos ADD COLUMN tipo character varying(4);
   ALTER TABLE public.nomina_prestamos ADD COLUMN referencia character varying(100);
   ALTER TABLE public.nomina_fiscal_prestamos ADD COLUMN no_ticket bigserial NOT NULL;
   ALTER TABLE otros.cajaprestamo_pagos ALTER COLUMN id_nomenclatura DROP NOT NULL;
   ALTER TABLE otros.cajaprestamo_pagos ADD COLUMN id_prestamo_caja bigint;
   ALTER TABLE otros.cajaprestamo_pagos ADD CONSTRAINT cajaprestamo_pagos_id_prestamo_caja_fkey FOREIGN KEY (id_prestamo_caja) REFERENCES otros.cajaprestamo_prestamos (id_prestamo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
 ✔ Fletes de venta @done (17-03-09 13:36) pcc|lap|pct|san
    ALTER TABLE public.compras_requisicion ADD COLUMN flete_de character varying(5) NOT NULL DEFAULT 'v'::character varying;
    COMMENT ON COLUMN public.compras_requisicion.flete_de IS 'v: fletes de venta, c: Fletes de compra';
    ALTER TABLE public.compras_ordenes ADD COLUMN flete_de character varying(5) NOT NULL DEFAULT 'v'::character varying;
    COMMENT ON COLUMN public.compras_ordenes.flete_de IS 'v: fletes de venta, c: Fletes de compra';
    ALTER TABLE public.compras_requisicion ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('INSUMOS MT','in',TRUE,FALSE);
 ✔ Reporte de banco @done (17-02-25 12:33) pcc|san|pct|lap
   ALTER TABLE public.banco_cuentas ADD COLUMN tipo character varying(10) NOT NULL DEFAULT 'M.N.'::character varying;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Acumulado Por Empresa 2',104,TRUE,'banco/rpt_acumulado_empresa/','print',TRUE);
   ALTER TABLE public.compras_salidas ADD COLUMN no_receta character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN etapa character varying(30);
   ALTER TABLE public.compras_salidas ADD COLUMN rancho bigint;
    COMMENT ON COLUMN public.compras_salidas.rancho IS 'del catalogo de codigos los ranchos';
   ALTER TABLE public.compras_salidas ADD COLUMN centro_costo bigint;
    COMMENT ON COLUMN public.compras_salidas.centro_costo IS 'del catalogo de codigos, es el mismo que tiene los productos de la salida';
   ALTER TABLE public.compras_salidas ADD COLUMN hectareas real;
   ALTER TABLE public.compras_salidas ADD COLUMN grupo character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN no_secciones character varying(20);
    COMMENT ON COLUMN public.compras_salidas.no_secciones IS 'secciones / melgas';
   ALTER TABLE public.compras_salidas ADD COLUMN dias_despues_de real;
   ALTER TABLE public.compras_salidas ADD COLUMN metodo_aplicacion character varying(30);
   ALTER TABLE public.compras_salidas ADD COLUMN ciclo character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN tipo_aplicacion character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN observaciones character varying(220);
   ALTER TABLE public.compras_salidas ADD COLUMN fecha_aplicacion date DEFAULT now();
 ✔ Privilegio reporte bodega @done (17-02-22 10:36) pcc|san|pct|gdl
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Mostrar totales en corte',379,FALSE,'bodega_guadalajara/show_totales_c/','copy',FALSE);
 ✔ Imprimir almacen en salidas @done (17-02-15 22:46) pcc|san|pct|gdl|lap
   ALTER TABLE public.compras_salidas ADD COLUMN id_traspaso bigint;
 ✔ Caja chica remisiones @done (17-02-07 21:50) pcc|san|pct|gdl|lap
    DROP MATERIALIZED VIEW public.saldos_facturas_remisiones;
    CREATE MATERIALIZED VIEW public.saldos_facturas_remisiones AS
     SELECT f.id_factura,
        f.serie,
        f.folio,
        c.id_cliente,
        c.nombre_fiscal,
        e.id_empresa,
        e.nombre_fiscal AS empresa,
        f.total,
        f.importe_iva AS iva,
        COALESCE(faa.abonos, 0::double precision) AS abonos,
        COALESCE(f.total - COALESCE(faa.abonos, 0::double precision), 0::double precision)::numeric(12,2) AS saldo,
        'f'::text AS tipo,
        f.is_factura,
        date(f.fecha) AS fecha,
        COALESCE(fp.cantidad_productos, 0::real) AS cantidad_productos,
        f.subtotal
       FROM clientes c
         JOIN facturacion f ON c.id_cliente = f.id_cliente
         JOIN empresas e ON e.id_empresa = f.id_empresa
         LEFT JOIN ( SELECT d.id_cliente,
                d.id_factura,
                d.id_empresa,
                sum(d.abonos) AS abonos
               FROM ( SELECT f_1.id_cliente,
                        f_1.id_factura,
                        f_1.id_empresa,
                        sum(fa.total) AS abonos
                       FROM facturacion f_1
                         JOIN facturacion_abonos fa ON f_1.id_factura = fa.id_factura
                      WHERE f_1.status::text <> 'ca'::text AND f_1.status::text <> 'b'::text AND f_1.id_abono_factura IS NULL AND date(fa.fecha) <= date(now())
                      GROUP BY f_1.id_cliente, f_1.id_factura, f_1.id_empresa
                    UNION
                     SELECT f_1.id_cliente,
                        f_1.id_nc AS id_factura,
                        f_1.id_empresa,
                        sum(f_1.total) AS abonos
                       FROM facturacion f_1
                      WHERE f_1.status::text <> 'ca'::text AND f_1.status::text <> 'b'::text AND f_1.id_nc IS NOT NULL AND f_1.id_abono_factura IS NULL AND date(f_1.fecha) <= date(now())
                      GROUP BY f_1.id_cliente, f_1.id_factura, f_1.id_empresa) d
              GROUP BY d.id_cliente, d.id_factura, d.id_empresa) faa ON f.id_cliente = faa.id_cliente AND f.id_factura = faa.id_factura
         LEFT JOIN ( SELECT remisiones_historial.id_remision,
                remisiones_historial.id_factura,
                remisiones_historial.status
               FROM remisiones_historial
              WHERE remisiones_historial.status::text <> 'ca'::text AND remisiones_historial.status::text <> 'b'::text) fh ON f.id_factura = fh.id_remision
         LEFT JOIN ( SELECT facturacion_productos.id_factura,
                sum(facturacion_productos.cantidad) AS cantidad_productos
               FROM facturacion_productos
              GROUP BY facturacion_productos.id_factura) fp ON f.id_factura = fp.id_factura
      WHERE f.status::text <> 'ca'::text AND f.status::text <> 'b'::text AND f.id_abono_factura IS NULL AND f.id_nc IS NULL AND date(f.fecha) <= date(now()) AND COALESCE(fh.id_remision, 0::bigint) = 0
      ORDER BY f.id_factura
    WITH DATA;
    ALTER TABLE public.saldos_facturas_remisiones OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Codigos Salidas',405,TRUE,'catalogos_sft/rpt_codigos_cuentas_salidas/','print',TRUE);

 ✔ Produccion y regresar productos @done (17-01-31 20:38) pct|pcc|gdl|san|lap
    CREATE TABLE otros.produccion_historial
    (
      id bigserial NOT NULL,
      id_clasificacion integer NOT NULL,
      id_empresa integer NOT NULL,
      id_empleado bigint NOT NULL,
      fecha timestamp with time zone NOT NULL DEFAULT now(),
      fecha_produccion timestamp with time zone NOT NULL,
      cantidad double precision NOT NULL DEFAULT 0,
      costo_materiap double precision NOT NULL DEFAULT 0,
      costo_adicional double precision NOT NULL DEFAULT 0,
      costo double precision NOT NULL DEFAULT 0,
      precio_venta real NOT NULL DEFAULT 0,
      status boolean NOT NULL DEFAULT true, -- true: activo, false: cancelado
      tipo boolean NOT NULL DEFAULT true, -- true: produccion (entrada), false: venta (salida)
      id_salida bigint,
      id_factura bigint,
      CONSTRAINT produccion_historial_pkey PRIMARY KEY (id),
      CONSTRAINT produccion_historial_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_empleado_fkey FOREIGN KEY (id_empleado)
          REFERENCES public.usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES public.empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY IMMEDIATE,
      CONSTRAINT produccion_historial_id_factura_fkey FOREIGN KEY (id_factura)
          REFERENCES public.facturacion (id_factura) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_salida_fkey FOREIGN KEY (id_salida)
          REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE otros.produccion_historial OWNER TO programa;
    COMMENT ON COLUMN otros.produccion_historial.status IS 'true: activo, false: cancelado';
    COMMENT ON COLUMN otros.produccion_historial.tipo IS 'true: produccion (entrada), false: venta (salida)';
    ALTER TABLE public.clasificaciones ADD COLUMN inventario boolean NOT NULL DEFAULT false;
    ALTER TABLE public.compras_ordenes ADD COLUMN regresa_product boolean NOT NULL DEFAULT false;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Regresar productos almacen',128,TRUE,'productos_regreso/','repeat',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',451,TRUE,'productos_regreso/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',451,FALSE,'productos_regreso/cancelar/','ban-circle',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',451,FALSE,'productos_regreso/imprimir/','print',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',451,FALSE,'productos_regreso/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Ver',451,FALSE,'productos_regreso/ver/','eye-open',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Produccion',0,TRUE,'produccion/','briefcase',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',457,TRUE,'produccion/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',457,FALSE,'produccion/cancelar/','ban-circle',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte inventario',457,TRUE,'produccion/inventario/','print',TRUE);

 ✔ nomina prestamos @done (17-01-24 20:53) pcc|san|pct|gdl|lap
   ALTER TABLE public.nomina_fiscal_prestamos ADD COLUMN saldado boolean NOT NULL DEFAULT false;
 ✔ Bodega y  @done (17-01-18 14:02) pcc|pct|san|gdl|lap
    alter table otros.bodega_prestamos alter column tipo type character varying(5) using tipo::character varying;
    COMMENT ON COLUMN otros.bodega_prestamos.tipo IS 'true: prestamo (resta la existencia), false: pago del prestamo (incremente la existencia), dev: devolucion (resta la existencia)';
    ALTER TABLE otros.bodega_prestamos ALTER COLUMN tipo SET DEFAULT 'true';
    ALTER TABLE public.nomina_prestamos ADD COLUMN tipo character varying(4) NOT NULL DEFAULT 'fi'::character varying;
    COMMENT ON COLUMN public.nomina_prestamos.tipo IS 'fi: fiscal (solo de nomina), ef: efectivo (mostrar en caja)';

 ✔ Bodega @done (17-01-17 21:40) pcc|san|pct|gdl|lap
    ALTER TABLE public.facturacion_abonos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_bultos_vendidos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_kilos_vendidos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_gastos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_utilidad double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN costo_venta double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN utilidad double precision NOT NULL DEFAULT 0;

 ☐ Nomina 1.2
   ✔ @done (17-01-12 14:53) pcc|lap|san|pct|gdl
     ALTER TABLE public.empresas ADD COLUMN curp character varying(50);
     ALTER TABLE public.empresas ADD COLUMN registro_patronal character varying(20);
     ALTER TABLE public.usuarios ADD COLUMN tipo_contrato character varying(80);
     ALTER TABLE public.usuarios DROP COLUMN regimen_contratacion;
     ALTER TABLE public.usuarios ADD COLUMN regimen_contratacion character varying(40) NOT NULL DEFAULT '02';
     ALTER TABLE public.usuarios ADD COLUMN tipo_jornada character varying(30);
     ALTER TABLE public.usuarios ADD COLUMN riesgo_puesto character varying(30);
     UPDATE public.nomina_sat_claves SET clave='01' WHERE tipo='in' and clave='1';
     UPDATE public.nomina_sat_claves SET clave='02' WHERE tipo='in' and clave='2';
     UPDATE public.nomina_sat_claves SET clave='03' WHERE tipo='in' and clave='3';


 ✔ Almacenes @done (17-01-02 19:58) pcc|pct|san|lap
   CREATE TABLE public.compras_almacenes
    (
      id_almacen serial NOT NULL,
      nombre character varying(60) NOT NULL,
      status boolean NOT NULL DEFAULT true,
      CONSTRAINT compras_almacenes_pkey PRIMARY KEY (id_almacen)
    ) WITH ( OIDS=FALSE );
    ALTER TABLE public.compras_almacenes OWNER TO programa;
    INSERT INTO public.compras_almacenes(nombre) VALUES ('Matriz');
    ALTER TABLE public.compras_salidas ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_almacen_fkey FOREIGN KEY (id_almacen)
      REFERENCES public.compras_almacenes (id_almacen) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE public.compras_ordenes ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_almacen_fkey FOREIGN KEY (id_almacen)
      REFERENCES public.compras_almacenes (id_almacen) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    CREATE TABLE public.compras_transferencias
    (
      id_salida integer NOT NULL,
      id_orden bigint NOT NULL,
      CONSTRAINT compras_transferencias_pkey PRIMARY KEY (id_salida, id_orden),
      CONSTRAINT compras_transferencias_id_orden_fkey FOREIGN KEY (id_orden)
          REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT compras_transferencias_id_salida_fkey FOREIGN KEY (id_salida)
          REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.compras_transferencias OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Almacenes',128,TRUE,'almacenes/','barcode',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar almacen',444,TRUE,'almacenes/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',444,FALSE,'almacenes/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',444,FALSE,'almacenes/activar/','ok',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',444,FALSE,'almacenes/eliminar/','remove',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Historial de traspasos',444,TRUE,'almacenes/historial/','time',FALSE);

 ✔ Imprimir ticket orden de compra entrada @done (16-12-27 19:37) pcc|san|pct|lap
   ALTER TABLE public.compras_ordenes ADD COLUMN no_impresiones_tk smallint DEFAULT 0;

 ✔ Bodega ingresos @done (16-12-27 08:29) pct|sang|san|lap
   CREATE TABLE otros.bodega_ingresos
    (
      id_ingresos bigserial NOT NULL,
      concepto character varying(500) NOT NULL,
      fecha date NOT NULL,
      monto double precision NOT NULL DEFAULT (0)::double precision,
      otro boolean NOT NULL DEFAULT false,
      id_movimiento bigint,
      id_categoria integer NOT NULL,
      id_nomenclatura integer,
      poliza character varying(100) DEFAULT NULL::character varying,
      no_caja integer NOT NULL DEFAULT 1,
      no_impresiones integer NOT NULL DEFAULT 0,
      id_usuario bigint,
      fecha_creacion timestamp without time zone DEFAULT now(),
      CONSTRAINT bodega_ingresos_pkey PRIMARY KEY (id_ingresos),
      CONSTRAINT bodega_ingresos_id_categoria_fkey FOREIGN KEY (id_categoria)
          REFERENCES public.cajachica_categorias (id_categoria) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_movimiento_fkey FOREIGN KEY (id_movimiento)
          REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_nomenclatura_fkey FOREIGN KEY (id_nomenclatura)
          REFERENCES public.cajachica_nomenclaturas (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES public.usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE otros.bodega_ingresos OWNER TO programa;

 ✔ Caja chica ticket ingresos @done (16-12-12 10:59) pct|pcc|san
   ALTER TABLE public.cajachica_ingresos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE public.cajachica_ingresos ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_ingresos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_ingresos ADD CONSTRAINT cajachica_ingresos_id_usuario_fkey
     FOREIGN KEY (id_usuario) REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de ingresos/gastos',247,TRUE,'caja_chica/rpt_ingresos_gastos/','print',TRUE);

 ✔ Salidas productos original y copia @done (16-10-31 12:54) pct|san|pcc
   ALTER TABLE public.compras_salidas ADD COLUMN no_impresiones smallint DEFAULT 0;
   ALTER TABLE public.compras_salidas ADD COLUMN no_impresiones_tk smallint DEFAULT 0;

✔ Catalogo de productores @done (16-10-13 12:15) san|cpt|cpl|cpc
  ALTER TABLE otros.productor ADD COLUMN no_coeplim character varying(55);
  ALTER TABLE otros.productor ADD COLUMN hectareas double precision DEFAULT 0;
  ALTER TABLE otros.productor ADD COLUMN pequena_propiedad character varying(55);
  ALTER TABLE otros.productor ADD COLUMN propietario character varying(150);
  ALTER TABLE public.usuarios ALTER COLUMN banco TYPE character varying(15);

 ✔ Bodega gdl @done (16-09-30 11:33)
   ALTER TABLE public.facturacion_series_folios ADD COLUMN default_serie boolean NOT NULL DEFAULT false;
   ALTER TABLE public.facturacion ADD COLUMN no_impresiones_tk integer NOT NULL DEFAULT 0;
 ✔ Entrega de fruta @done (16-09-30 11:33)
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_bascula bigint;
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_recibe bigint;

 ✔ No impreciones boleta recepcion @done (16-09-22 11:05)
   ALTER TABLE public.bascula ADD COLUMN no_imp_recepcion smallint NOT NULL DEFAULT 0;
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('BanCoppel','ac','137');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Inbursa','ac','36');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Bajio','ac','30');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Afirme','ac','62');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Azteca','ac','127');
   ALTER TABLE public.facturacion_productos ADD COLUMN unidad_c real;
   update facturacion_productos AS fp set unidad_c = sq.cantidad FROM (SELECT id_unidad, cantidad FROM unidades where cantidad > 0) AS sq WHERE fp.id_unidad = sq.id_unidad;
   ALTER TABLE compras_salidas_labores ADD COLUMN costo double precision NOT NULL DEFAULT 0;


 ✔ Caja bodega guadalajara @done (16-07-26 09:53)
   ALTER TABLE otros.bodega_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE otros.bodega_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE otros.bodega_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;

 ✔ Productos especiales en facturacion y reporte de cuentas x pagar @done (16-07-21 14:06)
   ALTER TABLE facturacion_seg_cert ADD COLUMN num_operacion character varying(30);
   ALTER TABLE facturacion_seg_cert ADD COLUMN nrow integer NOT NULL DEFAULT 0;
   ALTER TABLE facturacion_seg_cert DROP CONSTRAINT facturacion_seg_cert_pkey;
   ALTER TABLE facturacion_seg_cert ADD CONSTRAINT facturacion_seg_cert_pkey PRIMARY KEY(id_factura, id_clasificacion, nrow);

 ✔ Comercio exterior @done (16-07-17 10:45)
   ALTER TABLE public.facturacion_productos ADD COLUMN no_identificacion character varying(50);
   CREATE TABLE public.facturacion_ce
      (
        id bigserial NOT NULL,
        id_factura bigint NOT NULL,
        version character varying(5) NOT NULL,
        tipo_operacion character varying(5) NOT NULL,
        clave_pedimento character varying(5),
        certificado_origen character varying(5),
        num_certificado_origen character varying(40),
        numero_exportador_confiable character varying(50),
        incoterm character varying(5),
        subdivision character varying(5),
        observaciones character varying(300),
        "tipocambio_USD" double precision NOT NULL DEFAULT (0)::double precision,
        "total_USD" double precision NOT NULL DEFAULT (0)::double precision,
        emisor_curp character varying(18),
        receptor_numregidtrib character varying(40),
        receptor_curp character varying(18),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_pkey PRIMARY KEY (id),
        CONSTRAINT facturacion_ce_factura_id_foreign FOREIGN KEY (id_factura)
            REFERENCES public.facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce TO programa;

      CREATE TABLE public.facturacion_ce_destinatario
      (
        comercio_exterior_id bigint NOT NULL,
        numregidtrib character varying(40),
        rfc character varying(15),
        curp character varying(18),
        nombre character varying(300),
        calle character varying(100) NOT NULL,
        numero_exterior character varying(55),
        numero_interior character varying(55),
        colonia character varying(120),
        localidad character varying(120),
        referencia character varying(250) NOT NULL DEFAULT '0'::character varying,
        municipio character varying(120) NOT NULL DEFAULT '0'::character varying,
        estado character varying(30) NOT NULL,
        pais character varying(10),
        codigo_postal character varying(12),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_destinatario_pkey PRIMARY KEY (comercio_exterior_id),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_destinatario
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_destinatario TO programa;

      CREATE TABLE public.facturacion_ce_mercancias
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        noidentificacion character varying(100) NOT NULL,
        fraccionar_ancelaria character varying(20),
        cantidad_aduana double precision,
        unidad_aduana character varying(10),
        valor_unitario_aduana double precision,
        valor_dolares double precision NOT NULL,
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_pkey PRIMARY KEY (comercio_exterior_id, "row"),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_mercancias TO programa;

      CREATE TABLE public.facturacion_ce_mercancias_esp
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        row2 integer NOT NULL,
        marca character varying(35) NOT NULL,
        modelo character varying(80),
        submodelo double precision,
        numeroserie character varying(40),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_esp_pkey PRIMARY KEY (comercio_exterior_id, "row", row2),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias_esp
        OWNER TO programa;

 ✔ Privilegio modificar kilos @done (16-07-17 10:45)
  INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar kilos bruto y tara',70,FALSE,'bascula/modificar_kilosbt/','pencil',FALSE);

 ✔ Usuario y fecha de creacion en los gastos y abonos de cajas chica @done (16-07-04 16:05)
   ALTER TABLE public.cajachica_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_remisiones ADD CONSTRAINT cajachica_remisiones_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Reporte de productos facturados 2 con los datos de calidad, tamaño @done (16-06-23 10:19)
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Productos Facturados con Kilos',362,TRUE,'facturacion/prodfact2/','print',TRUE);

 ✔ SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE state = 'idle' AND state_change < current_timestamp - INTERVAL '15' MINUTE; @done (16-06-09 22:26)
   update clientes set metodo_pago = '98' where lower(trim(metodo_pago)) = 'no identificado';
   update clientes set metodo_pago = '03' where lower(trim(metodo_pago)) = 'transferencia';

 ✔ INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Calidades Ventas', 15, FALSE, 'areas_otros/calidades/', 'list', FALSE); @done (16-04-30 10:44)
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar calidad', 431, FALSE, 'areas_otros/agregar_calidad/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 431, FALSE, 'areas_otros/activar_calidad/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 431, FALSE, 'areas_otros/modificar_calidad/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 431, FALSE, 'areas_otros/eliminar_calidad/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Tamaños Ventas', 15, FALSE, 'areas_otros/tamanos/', 'list', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar tamaño', 436, FALSE, 'areas_otros/agregar_tamano/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 436, FALSE, 'areas_otros/activar_tamano/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 436, FALSE, 'areas_otros/modificar_tamano/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 436, FALSE, 'areas_otros/eliminar_tamano/', 'remove', FALSE);

    CREATE TABLE otros.areas_calidades
      (
        id_calidad bigserial NOT NULL,
        id_area integer NOT NULL,
        status boolean NOT NULL DEFAULT true,
        nombre character varying(20) NOT NULL,
        CONSTRAINT areas_calidades_pkey PRIMARY KEY (id_calidad),
        CONSTRAINT areas_calidades_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_calidades
        OWNER TO programa;
    CREATE TABLE otros.areas_tamanios
      (
        id_tamanio bigserial NOT NULL,
        id_area integer NOT NULL,
        nombre character varying(30) NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT areas_tamanios_pkey PRIMARY KEY (id_tamanio),
        CONSTRAINT areas_tamanios_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_tamanios
        OWNER TO programa;
    ALTER TABLE facturacion_productos ADD COLUMN id_calidad bigint;
    ALTER TABLE facturacion_productos ADD COLUMN id_tamanio bigint;
    ALTER TABLE facturacion_productos ADD COLUMN descripcion2 character varying(200);
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_calidad_fkey FOREIGN KEY (id_calidad)
      REFERENCES otros.areas_calidades (id_calidad) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_tamanio_fkey FOREIGN KEY (id_tamanio)
      REFERENCES otros.areas_tamanios (id_tamanio) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;


 ✔ ALTER TABLE facturacion ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0; @done (16-03-31 13:28)
   ALTER TABLE cajachica_remisiones ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_remisiones ALTER COLUMN "row" TYPE bigint;
   ALTER TABLE cajachica_remisiones ADD COLUMN folio bigint;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Control de acceso', 0, TRUE, 'control_acceso/', 'resize-horizontal', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrada y Salida', 427, TRUE, 'control_acceso/entrada_salida/', 'plus', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 427, FALSE, 'control_acceso/modificar/', 'edit', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Remision y/o factura', 70, FALSE, 'documentos/remision_factura/', 'copy', FALSE);

   UPDATE rastria_documentos SET orden=orden+1;
   INSERT INTO rastria_documentos(nombre, url_form, url_print, status, orden) VALUES ('REMISION Y/O FACTURA', 'panel/documentos/remision_factura', '', TRUE, 1);
   CREATE OR REPLACE VIEW embarque_pallets_libres AS
       SELECT rp.id_pallet,
          rp.no_cajas,
          rp.kilos_pallet,
          string_agg(clasi.nombre::text, ', '::text) AS clasificaciones,
          rp.folio,
          cali.calibres,
          ( SELECT string_agg(etiq.nombre::text, ', '::text) AS etiquetas
                 FROM rastria_pallets rp2
                   JOIN ( SELECT rpr.id_pallet,
                          et.nombre
                         FROM rastria_pallets_rendimiento rpr
                           JOIN etiquetas et ON rpr.id_etiqueta = et.id_etiqueta
                        GROUP BY rpr.id_pallet, rpr.id_etiqueta, et.nombre
                        ORDER BY rpr.id_pallet) etiq ON etiq.id_pallet = rp2.id_pallet
                WHERE etiq.id_pallet = rp.id_pallet) AS etiquetas,
          rp.fecha
         FROM rastria_pallets rp
           LEFT JOIN facturacion_doc_embarque_pallets fdp ON fdp.id_pallet = rp.id_pallet
           JOIN ( SELECT rpr.id_pallet,
                  cl.nombre
                 FROM rastria_pallets_rendimiento rpr
                   JOIN clasificaciones cl ON rpr.id_clasificacion = cl.id_clasificacion
                GROUP BY rpr.id_pallet, rpr.id_clasificacion, cl.nombre
                ORDER BY rpr.id_pallet) clasi ON clasi.id_pallet = rp.id_pallet
           LEFT JOIN ( SELECT rpc.id_pallet,
                  string_agg(cal.nombre::text, ', '::text) AS calibres
                 FROM rastria_pallets_calibres rpc
                   JOIN calibres cal ON rpc.id_calibre = cal.id_calibre
                GROUP BY rpc.id_pallet
                ORDER BY rpc.id_pallet) cali ON cali.id_pallet = rp.id_pallet
        WHERE fdp.id_embarque IS NULL
        GROUP BY rp.id_pallet, rp.no_cajas, rp.folio, cali.calibres, rp.kilos_pallet
        ORDER BY rp.id_pallet DESC;
        ALTER TABLE embarque_pallets_libres
          OWNER TO programa;
        COMMENT ON VIEW embarque_pallets_libres
          IS 'Muestra los pallets que no han sido colocados en embarque.';
   CREATE TABLE otros.vales_salida
      (
        id_vale_salida bigserial NOT NULL,
        tipo character varying(20) NOT NULL, -- venta,
        id_remision bigint, -- id de la remision para salidas tipo venta
        folio bigint NOT NULL,
        id_autoriza bigint, -- id del usaurio que registro el vale
        fecha timestamp with time zone NOT NULL DEFAULT now(),
        no_impresiones integer NOT NULL DEFAULT 0,
        CONSTRAINT vales_salida_pkey PRIMARY KEY (id_vale_salida),
        CONSTRAINT vales_salida_id_autoriza_fkey FOREIGN KEY (id_autoriza)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT vales_salida_id_remision_fkey FOREIGN KEY (id_remision)
            REFERENCES facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.vales_salida
        OWNER TO programa;
      COMMENT ON COLUMN otros.vales_salida.tipo IS 'venta, ';
      COMMENT ON COLUMN otros.vales_salida.id_remision IS 'id de la remision para salidas tipo venta';
      COMMENT ON COLUMN otros.vales_salida.id_autoriza IS 'id del usaurio que registro el vale';
   CREATE TABLE otros.control_acceso
      (
        id_control bigserial NOT NULL,
        id_usaurio_ent bigint NOT NULL,
        id_usuario_sal bigint,
        id_vale_salida bigint,
        nombre character varying(200) NOT NULL,
        asunto character varying(200) NOT NULL,
        departamento character varying(60) NOT NULL,
        placas character varying(15) NOT NULL,
        fecha_entrada timestamp with time zone NOT NULL DEFAULT now(),
        fecha_salida timestamp with time zone,
        CONSTRAINT control_acceso_pkey PRIMARY KEY (id_control),
        CONSTRAINT control_acceso_id_usaurio_ent_fkey FOREIGN KEY (id_usaurio_ent)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_usuario_sal_fkey FOREIGN KEY (id_usuario_sal)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_vale_salida_fkey FOREIGN KEY (id_vale_salida)
            REFERENCES otros.vales_salida (id_vale_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.control_acceso
        OWNER TO programa;


 ✔ Trabajo agricola @done (16-03-17 10:23)
    CREATE TABLE otros.trabajo_agricola
    (
      id_trabajo_agricola bigserial NOT NULL,
      id_empresa integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_cod_vehiculo bigint, -- vehiculo del catalogo de codigos
      id_operador bigint, -- id del chofer operador
      horometro_ini double precision DEFAULT 0,
      horometro_fin double precision DEFAULT 0,
      horometro_total double precision DEFAULT 0,
      hora_ini time with time zone,
      hora_fin time with time zone,
      total_hrs time with time zone,
      CONSTRAINT trabajo_agricola_pkey PRIMARY KEY (id_trabajo_agricola),
      CONSTRAINT trabajo_agricola_id_cat_cod_vehiculo_fkey FOREIGN KEY (id_cat_cod_vehiculo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_operador_fkey FOREIGN KEY (id_operador)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola
      OWNER TO programa;
    COMMENT ON COLUMN otros.trabajo_agricola.id_cat_cod_vehiculo IS 'vehiculo del catalogo de codigos';
    COMMENT ON COLUMN otros.trabajo_agricola.id_operador IS 'id del chofer operador';

    CREATE TABLE otros.trabajo_agricola_labores
    (
      id_trabajo_agricola bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_labor integer NOT NULL,
      id_centro_costo bigint NOT NULL,
      hora_ini time with time zone NOT NULL,
      CONSTRAINT trabajo_agricola_labores_pkey PRIMARY KEY (id_trabajo_agricola, "row"),
      CONSTRAINT trabajo_agricola_labores_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_labor_fkey FOREIGN KEY (id_labor)
          REFERENCES compras_salidas_labores (id_labor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_trabajo_agricola_fkey FOREIGN KEY (id_trabajo_agricola)
          REFERENCES otros.trabajo_agricola (id_trabajo_agricola) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola_labores
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Trabajo agricola',0,TRUE,'btrabajo_agricola/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',423,TRUE,'btrabajo_agricola/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',423,FALSE,'btrabajo_agricola/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',423,FALSE,'btrabajo_agricola/printEntrada/','print',FALSE);

 ✔ Entrega de fruta @done (16-03-17 10:16)
    CREATE TABLE otros.entrega_fruta
    (
      id_entrega_fruta bigserial NOT NULL,
      id_area integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_codigos_rnch bigint, -- rancho del catalogo de codigos
      id_vehiculo bigint,
      id_usuario bigint, -- id del chofer
      no character varying(10), -- No melga / No seccion
      id_encargado bigint, -- encargado
      total double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_pkey PRIMARY KEY (id_entrega_fruta),
      CONSTRAINT entrega_fruta_id_area_fkey FOREIGN KEY (id_area)
          REFERENCES areas (id_area) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_cat_codigos_rnch_fkey FOREIGN KEY (id_cat_codigos_rnch)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_encargado_fkey FOREIGN KEY (id_encargado)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_vehiculo_fkey FOREIGN KEY (id_vehiculo)
          REFERENCES compras_vehiculos (id_vehiculo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta
      OWNER TO programa;
    COMMENT ON COLUMN otros.entrega_fruta.id_cat_codigos_rnch IS 'rancho del catalogo de codigos';
    COMMENT ON COLUMN otros.entrega_fruta.id_usuario IS 'id del chofer';
    COMMENT ON COLUMN otros.entrega_fruta.no IS 'No melga / No seccion';
    COMMENT ON COLUMN otros.entrega_fruta.id_encargado IS 'encargado';

    CREATE TABLE otros.entrega_fruta_cantidad
    (
      id_entrega_fruta bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_clasificacion integer,
      piso double precision DEFAULT 0,
      estibas double precision DEFAULT 0,
      altura character varying(30),
      cantidad double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_cantidad_pkey PRIMARY KEY (id_entrega_fruta, "row"),
      CONSTRAINT entrega_fruta_cantidad_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_cantidad_id_entrega_fruta_fkey FOREIGN KEY (id_entrega_fruta)
          REFERENCES otros.entrega_fruta (id_entrega_fruta) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta_cantidad
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrega de Fruta',0,TRUE,'entrega_fruta/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',419,TRUE,'entrega_fruta/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',419,FALSE,'entrega_fruta/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',419,FALSE,'entrega_fruta/printEntrada/','print',FALSE);

 ✔ Bascula Snapshot @done (16-03-03 11:37)
   ALTER TABLE bascula_fotos DROP CONSTRAINT bascula_fotos_pkey;
   ALTER TABLE bascula_fotos ADD CONSTRAINT bascula_fotos_pkey PRIMARY KEY(id_bascula, no_camara, tipo);

 ✔ Contrarecibos @done (16-02-19 19:17)
    CREATE TABLE otros.contrarecibos
    (
      id_contrarecibo bigserial NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      folio bigint NOT NULL,
      id_proveedor bigint NOT NULL,
      total double precision NOT NULL DEFAULT 0,
      status boolean NOT NULL DEFAULT true,
      id_empresa integer NOT NULL,
      id_usuario bigint,
      CONSTRAINT contrarecibos_pkey PRIMARY KEY (id_contrarecibo),
      CONSTRAINT contrarecibos_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_proveedor_fkey FOREIGN KEY (id_proveedor)
          REFERENCES proveedores (id_proveedor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos
      OWNER TO programa;

    CREATE TABLE otros.contrarecibos_facturas
    (
      id_contrarecibo bigint NOT NULL,
      norow integer NOT NULL DEFAULT 0,
      folio character varying(15) NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      importe double precision NOT NULL DEFAULT 0,
      observacion character varying(200),
      CONSTRAINT contrarecibos_facturas_pkey PRIMARY KEY (id_contrarecibo, norow),
      CONSTRAINT contrarecibos_facturas_id_contrarecibo_fkey FOREIGN KEY (id_contrarecibo)
          REFERENCES otros.contrarecibos (id_contrarecibo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos_facturas
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Contrarecibos', 149, TRUE, 'contrarecibo/', 'th-large', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar contrarecibo', 414, TRUE, 'contrarecibo/agregar/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 414, FALSE, 'contrarecibo/modificar/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar', 414, FALSE, 'contrarecibo/cancelar/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir', 414, FALSE, 'contrarecibo/imprimir/', 'print', FALSE);
