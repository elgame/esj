
 ✔ Canbios en boleta @done (18-07-27 13:41) pct|pcc|san|lap
   ALTER TABLE public.bascula ADD COLUMN fecha_imp_orig timestamp without time zone;
   ALTER TABLE public.usuarios ADD COLUMN no_checador bigint;
   CREATE INDEX usuarios_no_checador_idx ON public.usuarios USING btree (no_checador);
   ALTER TABLE public.bascula_pagos_basculas ADD COLUMN monto double precision NOT NULL DEFAULT 0;
   ALTER TABLE public.bascula_pagos ADD COLUMN usuario_creo bigint;
   ALTER TABLE public.bascula_pagos ADD CONSTRAINT bascula_pagos_usuario_creo_fkey FOREIGN KEY (usuario_creo) REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.bascula ADD COLUMN metodo_pago character varying(10);
   COMMENT ON COLUMN public.bascula.metodo_pago IS 'co: contado, ot: otro';
   ALTER TABLE nomina_prestamos ADD COLUMN close boolean NOT NULL DEFAULT false;

 ✔ Correciones de nomina @done (18-03-26 22:10) pcc|pct|san|lap
   ALTER TABLE public.nomina_asistencia ADD COLUMN id_registro bigint;
   COMMENT ON COLUMN public.nomina_asistencia.id_registro IS 'id del usuario que registro las asistencias';

 ✔ Restructuracion de las cuentas contpaq para polizas @done (18-03-17 11:16) lap|pcc|pct|san
   ALTER TABLE public.cuentas_contpaq ADD COLUMN tipo_cuenta character varying(40);

 ✔ Comercio exterior 3.3 @done (18-07-27 13:41)
   - Cargar el archivo faccion_arancelariaV2.backup
    ALTER TABLE public.fraccion_arancelaria OWNER TO programa;
    REVOKE ALL ON TABLE public.fraccion_arancelaria FROM facturar_factura;
    REVOKE ALL ON TABLE public.fraccion_arancelaria FROM facturar;
    DROP TABLE otros.c_fraccion_arancelaria;
    ALTER TABLE fraccion_arancelaria SET SCHEMA otros;
    ALTER TABLE otros.fraccion_arancelaria RENAME TO c_fraccion_arancelaria;
    ALTER TABLE public.facturacion_ce ADD COLUMN motivo_traslado character varying(10);
    ALTER TABLE public.facturacion_ce ADD COLUMN extras json;

 ✔ CFDI 3.3 @done (17-11-27 13:05) pct|pcc|san
   - Cargar catalogos catalogos33.backup, Agregar una serie T para traslados
    ALTER TABLE c_clave_prodservs SET SCHEMA otros;
    ALTER TABLE c_clave_unidades SET SCHEMA otros;
    ALTER TABLE c_regimen_fiscal SET SCHEMA otros;
    ALTER TABLE public.clasificaciones ADD COLUMN clave_prod_serv character varying(30);
    ALTER TABLE public.clasificaciones ADD COLUMN clave_unidad character varying(15);
    UPDATE public.empresas SET cfdi_version='3.3';
    ALTER TABLE public.facturacion ADD COLUMN cfdi_ext json;
    ALTER TABLE public.facturacion ALTER COLUMN sello TYPE character varying(400);
    ALTER TABLE public.banco_bancos ADD COLUMN rfc character varying(20);
    UPDATE public.banco_bancos SET rfc='BAF950102JP5' WHERE Lower(nombre) LIKE Lower('%Afirme%');
    UPDATE public.banco_bancos SET rfc='BBA940707IE1' WHERE Lower(nombre) LIKE Lower('%BanBajio%');
    UPDATE public.banco_bancos SET rfc='BMN930209927' WHERE Lower(nombre) LIKE Lower('%Banorte%');
    UPDATE public.banco_bancos SET rfc='BNM840515VB1' WHERE Lower(nombre) LIKE Lower('%Banamex%');
    UPDATE public.banco_bancos SET rfc='BSM970519DU8' WHERE Lower(nombre) LIKE Lower('%Santander%');
    UPDATE public.banco_bancos SET rfc='BBA830831LJ2' WHERE Lower(nombre) LIKE Lower('%BBVA Bancomer%');
    UPDATE public.banco_bancos SET rfc='HMI950125KG8' WHERE Lower(nombre) LIKE Lower('%HSBC%');
    UPDATE public.banco_bancos SET rfc='BSI061110963' WHERE Lower(nombre) LIKE Lower('%BanCoppel%');
    UPDATE public.banco_bancos SET rfc='SIN9412025I4' WHERE Lower(nombre) LIKE Lower('%Scotiabank%');
    INSERT INTO public.banco_bancos (nombre, codigo, rfc) VALUES ('INBURSA', '', 'BII931004P61'),
      ('FAMSA', '', 'BAF060524EV6');
    CREATE TABLE public.clientes_cuentas
    (
      id_cuenta bigserial NOT NULL,
      id_cliente bigint NOT NULL,
      alias character varying(60) NOT NULL,
      cuenta character varying(19) NOT NULL,
      status boolean NOT NULL DEFAULT true,
      id_banco integer NOT NULL DEFAULT 1,
      CONSTRAINT clientes_cuentas_pkey PRIMARY KEY (id_cuenta),
      CONSTRAINT clientes_cuentas_id_banco_fkey FOREIGN KEY (id_banco)
          REFERENCES public.banco_bancos (id_banco) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT clientes_cuentas_id_cliente_fkey FOREIGN KEY (id_cliente)
          REFERENCES public.clientes (id_cliente) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    ) WITH (OIDS=FALSE); ALTER TABLE public.clientes_cuentas OWNER TO programa;
    CREATE TABLE public.banco_movimientos_com_pagos
    (
      id bigserial NOT NULL,
      id_movimiento bigint NOT NULL,
      fecha timestamp with time zone NOT NULL,
      serie character varying(10),
      folio bigint NOT NULL,
      xml text,
      uuid character varying(50),
      cfdi_ext json,
      sello text,
      cadena_original text,
      status character varying(20) NOT NULL DEFAULT 'facturada'::character varying, -- facturada, cancelada
      version character varying(5),
      CONSTRAINT banco_movimientos_com_pagos_pkey PRIMARY KEY (id),
      CONSTRAINT banco_movimientos_com_pagos_id_movimiento_fkey FOREIGN KEY (id_movimiento)
          REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE NO ACTION
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.banco_movimientos_com_pagos OWNER TO programa;
    COMMENT ON COLUMN public.banco_movimientos_com_pagos.status IS 'facturada, cancelada';
    CREATE TABLE public.facturacion_com_pagos
    (
      id_movimiento bigint NOT NULL,
      id_factura bigint NOT NULL,
      CONSTRAINT facturacion_com_pagos_pkey PRIMARY KEY (id_movimiento, id_factura)
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.facturacion_com_pagos OWNER TO programa;
    ALTER TABLE public.banco_movimientos_com_pagos ADD COLUMN id_empresa bigint NOT NULL;
    ALTER TABLE public.banco_movimientos_com_pagos ADD CONSTRAINT banco_movimientos_com_pagos_id_empresa_fkey FOREIGN KEY (id_empresa)
      REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE public.banco_movimientos_com_pagos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
    ALTER TABLE public.facturacion_productos ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_fiscal ADD COLUMN cfdi_ext json;
    ALTER TABLE public.finiquito ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_aguinaldo ADD COLUMN cfdi_ext json;
    ALTER TABLE public.nomina_ptu ADD COLUMN cfdi_ext json;



 ✔ Reporte de estado de cuenta @done (17-09-12 16:19) pct|pcc|lap|san|lap|gdl
   CREATE MATERIALIZED VIEW public.estado_cuenta_abonos AS
       SELECT dd.id_factura,
          COALESCE(dd.id_abono, 0::bigint) AS a_id_abono,
          COALESCE(dd.serie, '-'::character varying) AS a_serie,
          COALESCE(dd.folio, 0::bigint) AS a_folio,
          dd.fecha AS a_fecha,
          COALESCE(dd.concepto, '-'::text) AS a_concepto,
          COALESCE(dd.abono, 0::double precision) AS a_abono
         FROM ( SELECT ff.id_factura,
                  ff.id_abono,
                  ff.serie,
                  ff.folio,
                  ff.fecha,
                  ff.concepto,
                  ff.abono
                 FROM ( SELECT fa.id_factura,
                          fa.id_abono,
                              CASE
                                  WHEN abs.num = 1 THEN ''::text::character varying
                                  ELSE f.serie
                              END AS serie,
                              CASE
                                  WHEN abs.num = 1 THEN fa.id_abono
                                  ELSE f.folio
                              END AS folio,
                          date(fa.fecha) AS fecha,
                              CASE
                                  WHEN abs.num = 1 OR abs.is_factura = false THEN ('Pago del cliente ('::text || fa.ref_movimiento::text) || ')'::text
                                  ELSE 'Pago en parcialidades'::text
                              END AS concepto,
                          fa.total AS abono
                         FROM facturacion_abonos fa
                           LEFT JOIN ( SELECT f_1.id_factura,
                                  count(fa_1.id_abono) AS num,
                                  f_1.is_factura
                                 FROM facturacion f_1
                                   JOIN facturacion_abonos fa_1 ON f_1.id_factura = fa_1.id_factura
                                WHERE date(fa_1.fecha) <= now()
                                GROUP BY f_1.id_factura) abs ON abs.id_factura = fa.id_factura
                           LEFT JOIN facturacion f ON fa.id_abono = f.id_abono_factura
                        WHERE date(fa.fecha) <= now()
                      UNION
                       SELECT facturacion.id_nc AS id_factura,
                          facturacion.id_factura AS id_abono,
                          facturacion.serie,
                          facturacion.folio,
                          date(facturacion.fecha) AS fecha,
                          'NOTA CREDITO DIGITAL'::text AS concepto,
                          facturacion.total AS abono
                         FROM facturacion
                        WHERE facturacion.status::text <> 'ca'::text AND facturacion.status::text <> 'b'::text AND facturacion.id_nc IS NOT NULL AND facturacion.id_abono_factura IS NULL AND date(facturacion.fecha) <= now()) ff) dd
      WITH DATA;
      ALTER TABLE public.estado_cuenta_abonos OWNER TO programa;
   CREATE MATERIALIZED VIEW public.estado_cuenta AS
       SELECT c.id_cliente,
          c.nombre_fiscal,
          c.cuenta_cpi,
          c.dias_credito,
          f.id_factura,
          f.id_empresa,
          date(f.fecha) AS fecha,
          f.serie,
          f.folio,
              CASE f.is_factura
                  WHEN true THEN 'FACTURA ELECTRONICA'::text
                  ELSE 'REMISION'::text
              END AS concepto,
          f.subtotal,
          f.importe_iva,
          f.total,
          f.total / f.tipo_cambio AS total_cambio,
          f.tipo_cambio,
          f.is_factura,
          date(f.fecha + ((f.plazo_credito || ' days'::text)::interval)) AS fecha_vencimiento,
          ab.a_id_abono,
          ab.a_serie,
          ab.a_folio,
          ab.a_fecha,
          ab.a_concepto,
          ab.a_abono
         FROM clientes c
           LEFT JOIN facturacion f ON c.id_cliente = f.id_cliente
           LEFT JOIN ( SELECT remisiones_historial.id_remision,
                  remisiones_historial.id_factura,
                  remisiones_historial.status
                 FROM remisiones_historial
                WHERE remisiones_historial.status::text <> 'ca'::text AND remisiones_historial.status::text <> 'b'::text) fh ON f.id_factura = fh.id_remision
           LEFT JOIN estado_cuenta_abonos ab ON f.id_factura = ab.id_factura
        WHERE c.status::text = 'ac'::text AND f.status::text <> 'ca'::text AND f.status::text <> 'b'::text AND f.id_nc IS NULL AND f.id_abono_factura IS NULL AND COALESCE(fh.id_remision, 0::bigint) = 0
        ORDER BY c.id_cliente, (date(f.fecha)), f.folio, ab.a_fecha
      WITH DATA;
      ALTER TABLE public.estado_cuenta OWNER TO programa;
  ✔ @done (17-09-12 22:23) pcc|san|pct
   CREATE OR REPLACE FUNCTION public.refreshallmaterializedviews(schema_arg text DEFAULT 'public'::text)
        RETURNS integer AS
      $BODY$
        DECLARE
          r RECORD;
        BEGIN
          RAISE NOTICE 'Refreshing materialized view in schema %', schema_arg;
          FOR r IN SELECT matviewname FROM pg_matviews WHERE schemaname = schema_arg ORDER BY matviewname DESC
          LOOP
            RAISE NOTICE 'Refreshing %.%', schema_arg, r.matviewname;
            EXECUTE 'REFRESH MATERIALIZED VIEW ' || schema_arg || '.' || r.matviewname;
          END LOOP;

          RETURN 1;
        END
      $BODY$
        LANGUAGE plpgsql VOLATILE COST 100;
      ALTER FUNCTION public.refreshallmaterializedviews(text) OWNER TO programa;

 ✔ Crear listado de cuentas de proveedores @done (17-09-11 13:06) pct|san|pcc
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte listado de cuentas',10,TRUE,'proveedores/rpt_listado_cuentas/','print',TRUE);
 ✔ Caja 4 @done (17-09-08 00:51) lap|san|pcc
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Caja chica 4',247,TRUE,'caja_chica/caja4/','usd',TRUE);
 ✔ El nuevo reporte de banc @done (17-08-10 16:11) lap|pcc|pct|san
    ALTER TABLE public.banco_movimientos ADD COLUMN fecha_aplico date; COMMENT ON COLUMN public.banco_movimientos.fecha_aplico IS 'Fecha en que se aplico en el banco real (retiro o deposito)';
 ✔ Cambiar sistema de privilegios por emplesa y usuarios @done (17-08-05 10:30) pct|pct|san|lap
   ALTER TABLE public.usuarios_privilegios ADD COLUMN id_empresa integer NOT NULL DEFAULT 2;
   ALTER TABLE public.usuarios_privilegios ADD CONSTRAINT usuarios_privilegios_id_empresa_fkey FOREIGN KEY (id_empresa)
      REFERENCES public.empresas (id_empresa) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.usuarios_privilegios DROP CONSTRAINT usuarios_privilegios_pkey;
   ALTER TABLE public.usuarios_privilegios ADD CONSTRAINT usuarios_privilegios_pkey PRIMARY KEY(usuario_id, privilegio_id, id_empresa);

 ✔ Entradas, clintes @done (17-06-14 08:59) pcc|san|pct|lap
   ALTER TABLE public.compras_ordenes ADD COLUMN id_registra bigint;
   ALTER TABLE public.clientes ADD COLUMN show_saldo boolean NOT NULL DEFAULT false;

  ✔ No interior clientes @done (17-06-01 10:56) pcc|san|pct|lap
    ALTER TABLE public.clientes ALTER COLUMN no_interior TYPE character varying(20);
 ✔ Reporte @done (17-04-04 15:29) pcc|san|lap|pct
     INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de saldos bancarios',104,TRUE,'banco/rpt_saldos_bancarios/','print',TRUE);
 ✔ Tickets de ordenes y boletas @done (17-03-22 13:06) pct|pcc|san|lap
    -- Insumo MT
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 20KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CAJA MADERA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 15KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJAS DE 23KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PRODUCTO DE LIMPIEZA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CERA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TARIMA NAC', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TARIMA CER', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PAPEL', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ARPILLA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ESQUINEROS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'GRAPAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PLASTICO VITAFILM', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FLEJE SEM', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ENGRAPADORA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'SURTIDORES P GRAPA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PELIC ESTIRABLE', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FLEJE MANUAL 5/8', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TAPA', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ETIQUETAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FICHAS', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CJA PLASTI 25KG', 0, TRUE, '43000010');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'BOLSA/rpilla', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'CAJA DE PLASTICO 28KG', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FIL', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'BACATE DESENGRASANTE', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'FERTILIZANTES', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'TAPA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'DESENGRASANTE', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ROLLOS DE MAYA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'ENGRAPADORA NEUMATICA', 0, TRUE, '0');
    INSERT INTO public.calidades(id_area, nombre, precio_compra, status, cuenta_cpi) VALUES (14, 'PINZAS PARA GRAPA', 0, TRUE, '0');
    ALTER TABLE public.compras_ordenes ADD COLUMN cont_x_dia integer NOT NULL DEFAULT 0;
    CREATE TABLE public.bascula_lig_orden
    (
      id_bascula bigint NOT NULL,
      id_orden bigint NOT NULL,
      recicio character varying(200),
      entrego character varying(200),
      CONSTRAINT bascula_lig_orden_pkey PRIMARY KEY (id_bascula, id_orden),
      CONSTRAINT bascula_lig_orden_id_bascula_fkey FOREIGN KEY (id_bascula)
          REFERENCES public.bascula (id_bascula) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bascula_lig_orden_id_orden_fkey FOREIGN KEY (id_orden)
          REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE public.bascula_lig_orden OWNER TO programa;

 ✔ Caja de prestamos @done (17-03-11 09:48) pct|pcc|san|lap
   CREATE TABLE otros.cajaprestamo_fondo
      (
        id_fondo bigserial NOT NULL,
        id_empleado bigint,
        id_categoria integer NOT NULL,
        fecha date NOT NULL,
        referencia character varying(70),
        tipo_movimiento boolean NOT NULL DEFAULT true, -- true: ingreso, false: egreso
        no_caja integer NOT NULL DEFAULT 1,
        monto double precision NOT NULL DEFAULT 0,
        no_impresiones smallint NOT NULL DEFAULT 0,
        CONSTRAINT cajaprestamo_fondo_pkey PRIMARY KEY (id_fondo),
        CONSTRAINT cajaprestamo_fondo_id_categoria_fkey FOREIGN KEY (id_categoria)
            REFERENCES public.cajachica_categorias (id_categoria) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT cajaprestamo_fondo_id_empleado_fkey FOREIGN KEY (id_empleado)
            REFERENCES public.usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      ) WITH ( OIDS=FALSE ); ALTER TABLE otros.cajaprestamo_fondo OWNER TO programa;
      COMMENT ON COLUMN otros.cajaprestamo_fondo.tipo_movimiento IS 'true: ingreso, false: egreso';
   ALTER TABLE public.nomina_prestamos ADD COLUMN tipo character varying(4);
   ALTER TABLE public.nomina_prestamos ADD COLUMN referencia character varying(100);
   ALTER TABLE public.nomina_fiscal_prestamos ADD COLUMN no_ticket bigserial NOT NULL;
   ALTER TABLE otros.cajaprestamo_pagos ALTER COLUMN id_nomenclatura DROP NOT NULL;
   ALTER TABLE otros.cajaprestamo_pagos ADD COLUMN id_prestamo_caja bigint;
   ALTER TABLE otros.cajaprestamo_pagos ADD CONSTRAINT cajaprestamo_pagos_id_prestamo_caja_fkey FOREIGN KEY (id_prestamo_caja) REFERENCES otros.cajaprestamo_prestamos (id_prestamo) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
 ✔ Fletes de venta @done (17-03-09 13:36) pcc|lap|pct|san
    ALTER TABLE public.compras_requisicion ADD COLUMN flete_de character varying(5) NOT NULL DEFAULT 'v'::character varying;
    COMMENT ON COLUMN public.compras_requisicion.flete_de IS 'v: fletes de venta, c: Fletes de compra';
    ALTER TABLE public.compras_ordenes ADD COLUMN flete_de character varying(5) NOT NULL DEFAULT 'v'::character varying;
    COMMENT ON COLUMN public.compras_ordenes.flete_de IS 'v: fletes de venta, c: Fletes de compra';
    ALTER TABLE public.compras_requisicion ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    INSERT INTO public.areas(nombre, tipo, status, predeterminado) VALUES ('INSUMOS MT','in',TRUE,FALSE);
 ✔ Reporte de banco @done (17-02-25 12:33) pcc|san|pct|lap
   ALTER TABLE public.banco_cuentas ADD COLUMN tipo character varying(10) NOT NULL DEFAULT 'M.N.'::character varying;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Acumulado Por Empresa 2',104,TRUE,'banco/rpt_acumulado_empresa/','print',TRUE);
   ALTER TABLE public.compras_salidas ADD COLUMN no_receta character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN etapa character varying(30);
   ALTER TABLE public.compras_salidas ADD COLUMN rancho bigint;
    COMMENT ON COLUMN public.compras_salidas.rancho IS 'del catalogo de codigos los ranchos';
   ALTER TABLE public.compras_salidas ADD COLUMN centro_costo bigint;
    COMMENT ON COLUMN public.compras_salidas.centro_costo IS 'del catalogo de codigos, es el mismo que tiene los productos de la salida';
   ALTER TABLE public.compras_salidas ADD COLUMN hectareas real;
   ALTER TABLE public.compras_salidas ADD COLUMN grupo character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN no_secciones character varying(20);
    COMMENT ON COLUMN public.compras_salidas.no_secciones IS 'secciones / melgas';
   ALTER TABLE public.compras_salidas ADD COLUMN dias_despues_de real;
   ALTER TABLE public.compras_salidas ADD COLUMN metodo_aplicacion character varying(30);
   ALTER TABLE public.compras_salidas ADD COLUMN ciclo character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN tipo_aplicacion character varying(20);
   ALTER TABLE public.compras_salidas ADD COLUMN observaciones character varying(220);
   ALTER TABLE public.compras_salidas ADD COLUMN fecha_aplicacion date DEFAULT now();
 ✔ Privilegio reporte bodega @done (17-02-22 10:36) pcc|san|pct|gdl
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Mostrar totales en corte',379,FALSE,'bodega_guadalajara/show_totales_c/','copy',FALSE);
 ✔ Imprimir almacen en salidas @done (17-02-15 22:46) pcc|san|pct|gdl|lap
   ALTER TABLE public.compras_salidas ADD COLUMN id_traspaso bigint;
 ✔ Caja chica remisiones @done (17-02-07 21:50) pcc|san|pct|gdl|lap
    DROP MATERIALIZED VIEW public.saldos_facturas_remisiones;
    CREATE MATERIALIZED VIEW public.saldos_facturas_remisiones AS
     SELECT f.id_factura,
        f.serie,
        f.folio,
        c.id_cliente,
        c.nombre_fiscal,
        e.id_empresa,
        e.nombre_fiscal AS empresa,
        f.total,
        f.importe_iva AS iva,
        COALESCE(faa.abonos, 0::double precision) AS abonos,
        COALESCE(f.total - COALESCE(faa.abonos, 0::double precision), 0::double precision)::numeric(12,2) AS saldo,
        'f'::text AS tipo,
        f.is_factura,
        date(f.fecha) AS fecha,
        COALESCE(fp.cantidad_productos, 0::real) AS cantidad_productos,
        f.subtotal
       FROM clientes c
         JOIN facturacion f ON c.id_cliente = f.id_cliente
         JOIN empresas e ON e.id_empresa = f.id_empresa
         LEFT JOIN ( SELECT d.id_cliente,
                d.id_factura,
                d.id_empresa,
                sum(d.abonos) AS abonos
               FROM ( SELECT f_1.id_cliente,
                        f_1.id_factura,
                        f_1.id_empresa,
                        sum(fa.total) AS abonos
                       FROM facturacion f_1
                         JOIN facturacion_abonos fa ON f_1.id_factura = fa.id_factura
                      WHERE f_1.status::text <> 'ca'::text AND f_1.status::text <> 'b'::text AND f_1.id_abono_factura IS NULL AND date(fa.fecha) <= date(now())
                      GROUP BY f_1.id_cliente, f_1.id_factura, f_1.id_empresa
                    UNION
                     SELECT f_1.id_cliente,
                        f_1.id_nc AS id_factura,
                        f_1.id_empresa,
                        sum(f_1.total) AS abonos
                       FROM facturacion f_1
                      WHERE f_1.status::text <> 'ca'::text AND f_1.status::text <> 'b'::text AND f_1.id_nc IS NOT NULL AND f_1.id_abono_factura IS NULL AND date(f_1.fecha) <= date(now())
                      GROUP BY f_1.id_cliente, f_1.id_factura, f_1.id_empresa) d
              GROUP BY d.id_cliente, d.id_factura, d.id_empresa) faa ON f.id_cliente = faa.id_cliente AND f.id_factura = faa.id_factura
         LEFT JOIN ( SELECT remisiones_historial.id_remision,
                remisiones_historial.id_factura,
                remisiones_historial.status
               FROM remisiones_historial
              WHERE remisiones_historial.status::text <> 'ca'::text AND remisiones_historial.status::text <> 'b'::text) fh ON f.id_factura = fh.id_remision
         LEFT JOIN ( SELECT facturacion_productos.id_factura,
                sum(facturacion_productos.cantidad) AS cantidad_productos
               FROM facturacion_productos
              GROUP BY facturacion_productos.id_factura) fp ON f.id_factura = fp.id_factura
      WHERE f.status::text <> 'ca'::text AND f.status::text <> 'b'::text AND f.id_abono_factura IS NULL AND f.id_nc IS NULL AND date(f.fecha) <= date(now()) AND COALESCE(fh.id_remision, 0::bigint) = 0
      ORDER BY f.id_factura
    WITH DATA;
    ALTER TABLE public.saldos_facturas_remisiones OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Codigos Salidas',405,TRUE,'catalogos_sft/rpt_codigos_cuentas_salidas/','print',TRUE);

 ✔ Produccion y regresar productos @done (17-01-31 20:38) pct|pcc|gdl|san|lap
    CREATE TABLE otros.produccion_historial
    (
      id bigserial NOT NULL,
      id_clasificacion integer NOT NULL,
      id_empresa integer NOT NULL,
      id_empleado bigint NOT NULL,
      fecha timestamp with time zone NOT NULL DEFAULT now(),
      fecha_produccion timestamp with time zone NOT NULL,
      cantidad double precision NOT NULL DEFAULT 0,
      costo_materiap double precision NOT NULL DEFAULT 0,
      costo_adicional double precision NOT NULL DEFAULT 0,
      costo double precision NOT NULL DEFAULT 0,
      precio_venta real NOT NULL DEFAULT 0,
      status boolean NOT NULL DEFAULT true, -- true: activo, false: cancelado
      tipo boolean NOT NULL DEFAULT true, -- true: produccion (entrada), false: venta (salida)
      id_salida bigint,
      id_factura bigint,
      CONSTRAINT produccion_historial_pkey PRIMARY KEY (id),
      CONSTRAINT produccion_historial_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES public.clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_empleado_fkey FOREIGN KEY (id_empleado)
          REFERENCES public.usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES public.empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY IMMEDIATE,
      CONSTRAINT produccion_historial_id_factura_fkey FOREIGN KEY (id_factura)
          REFERENCES public.facturacion (id_factura) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT produccion_historial_id_salida_fkey FOREIGN KEY (id_salida)
          REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE otros.produccion_historial OWNER TO programa;
    COMMENT ON COLUMN otros.produccion_historial.status IS 'true: activo, false: cancelado';
    COMMENT ON COLUMN otros.produccion_historial.tipo IS 'true: produccion (entrada), false: venta (salida)';
    ALTER TABLE public.clasificaciones ADD COLUMN inventario boolean NOT NULL DEFAULT false;
    ALTER TABLE public.compras_ordenes ADD COLUMN regresa_product boolean NOT NULL DEFAULT false;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Regresar productos almacen',128,TRUE,'productos_regreso/','repeat',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',451,TRUE,'productos_regreso/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',451,FALSE,'productos_regreso/cancelar/','ban-circle',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',451,FALSE,'productos_regreso/imprimir/','print',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',451,FALSE,'productos_regreso/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Ver',451,FALSE,'productos_regreso/ver/','eye-open',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Produccion',0,TRUE,'produccion/','briefcase',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar',457,TRUE,'produccion/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar',457,FALSE,'produccion/cancelar/','ban-circle',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte inventario',457,TRUE,'produccion/inventario/','print',TRUE);

 ✔ nomina prestamos @done (17-01-24 20:53) pcc|san|pct|gdl|lap
   ALTER TABLE public.nomina_fiscal_prestamos ADD COLUMN saldado boolean NOT NULL DEFAULT false;
 ✔ Bodega y  @done (17-01-18 14:02) pcc|pct|san|gdl|lap
    alter table otros.bodega_prestamos alter column tipo type character varying(5) using tipo::character varying;
    COMMENT ON COLUMN otros.bodega_prestamos.tipo IS 'true: prestamo (resta la existencia), false: pago del prestamo (incremente la existencia), dev: devolucion (resta la existencia)';
    ALTER TABLE otros.bodega_prestamos ALTER COLUMN tipo SET DEFAULT 'true';
    ALTER TABLE public.nomina_prestamos ADD COLUMN tipo character varying(4) NOT NULL DEFAULT 'fi'::character varying;
    COMMENT ON COLUMN public.nomina_prestamos.tipo IS 'fi: fiscal (solo de nomina), ef: efectivo (mostrar en caja)';

 ✔ Bodega @done (17-01-17 21:40) pcc|san|pct|gdl|lap
    ALTER TABLE public.facturacion_abonos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_bultos_vendidos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_kilos_vendidos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_gastos double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN a_utilidad double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN costo_venta double precision NOT NULL DEFAULT 0;
    ALTER TABLE otros.bodega_efectivo ADD COLUMN utilidad double precision NOT NULL DEFAULT 0;

 ☐ Nomina 1.2
   ✔ @done (17-01-12 14:53) pcc|lap|san|pct|gdl
     ALTER TABLE public.empresas ADD COLUMN curp character varying(50);
     ALTER TABLE public.empresas ADD COLUMN registro_patronal character varying(20);
     ALTER TABLE public.usuarios ADD COLUMN tipo_contrato character varying(80);
     ALTER TABLE public.usuarios DROP COLUMN regimen_contratacion;
     ALTER TABLE public.usuarios ADD COLUMN regimen_contratacion character varying(40) NOT NULL DEFAULT '02';
     ALTER TABLE public.usuarios ADD COLUMN tipo_jornada character varying(30);
     ALTER TABLE public.usuarios ADD COLUMN riesgo_puesto character varying(30);
     UPDATE public.nomina_sat_claves SET clave='01' WHERE tipo='in' and clave='1';
     UPDATE public.nomina_sat_claves SET clave='02' WHERE tipo='in' and clave='2';
     UPDATE public.nomina_sat_claves SET clave='03' WHERE tipo='in' and clave='3';


 ✔ Almacenes @done (17-01-02 19:58) pcc|pct|san|lap
   CREATE TABLE public.compras_almacenes
    (
      id_almacen serial NOT NULL,
      nombre character varying(60) NOT NULL,
      status boolean NOT NULL DEFAULT true,
      CONSTRAINT compras_almacenes_pkey PRIMARY KEY (id_almacen)
    ) WITH ( OIDS=FALSE );
    ALTER TABLE public.compras_almacenes OWNER TO programa;
    INSERT INTO public.compras_almacenes(nombre) VALUES ('Matriz');
    ALTER TABLE public.compras_salidas ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    ALTER TABLE public.compras_salidas ADD CONSTRAINT compras_salidas_id_almacen_fkey FOREIGN KEY (id_almacen)
      REFERENCES public.compras_almacenes (id_almacen) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE public.compras_ordenes ADD COLUMN id_almacen integer NOT NULL DEFAULT 1;
    ALTER TABLE public.compras_ordenes ADD CONSTRAINT compras_ordenes_id_almacen_fkey FOREIGN KEY (id_almacen)
      REFERENCES public.compras_almacenes (id_almacen) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    CREATE TABLE public.compras_transferencias
    (
      id_salida integer NOT NULL,
      id_orden bigint NOT NULL,
      CONSTRAINT compras_transferencias_pkey PRIMARY KEY (id_salida, id_orden),
      CONSTRAINT compras_transferencias_id_orden_fkey FOREIGN KEY (id_orden)
          REFERENCES public.compras_ordenes (id_orden) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT compras_transferencias_id_salida_fkey FOREIGN KEY (id_salida)
          REFERENCES public.compras_salidas (id_salida) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    ) WITH ( OIDS=FALSE ); ALTER TABLE public.compras_transferencias OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Almacenes',128,TRUE,'almacenes/','barcode',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar almacen',444,TRUE,'almacenes/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',444,FALSE,'almacenes/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar',444,FALSE,'almacenes/activar/','ok',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar',444,FALSE,'almacenes/eliminar/','remove',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Historial de traspasos',444,TRUE,'almacenes/historial/','time',FALSE);

 ✔ Imprimir ticket orden de compra entrada @done (16-12-27 19:37) pcc|san|pct|lap
   ALTER TABLE public.compras_ordenes ADD COLUMN no_impresiones_tk smallint DEFAULT 0;

 ✔ Bodega ingresos @done (16-12-27 08:29) pct|sang|san|lap
   CREATE TABLE otros.bodega_ingresos
    (
      id_ingresos bigserial NOT NULL,
      concepto character varying(500) NOT NULL,
      fecha date NOT NULL,
      monto double precision NOT NULL DEFAULT (0)::double precision,
      otro boolean NOT NULL DEFAULT false,
      id_movimiento bigint,
      id_categoria integer NOT NULL,
      id_nomenclatura integer,
      poliza character varying(100) DEFAULT NULL::character varying,
      no_caja integer NOT NULL DEFAULT 1,
      no_impresiones integer NOT NULL DEFAULT 0,
      id_usuario bigint,
      fecha_creacion timestamp without time zone DEFAULT now(),
      CONSTRAINT bodega_ingresos_pkey PRIMARY KEY (id_ingresos),
      CONSTRAINT bodega_ingresos_id_categoria_fkey FOREIGN KEY (id_categoria)
          REFERENCES public.cajachica_categorias (id_categoria) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_movimiento_fkey FOREIGN KEY (id_movimiento)
          REFERENCES public.banco_movimientos (id_movimiento) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_nomenclatura_fkey FOREIGN KEY (id_nomenclatura)
          REFERENCES public.cajachica_nomenclaturas (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT bodega_ingresos_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES public.usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH ( OIDS=FALSE );
    ALTER TABLE otros.bodega_ingresos OWNER TO programa;

 ✔ Caja chica ticket ingresos @done (16-12-12 10:59) pct|pcc|san
   ALTER TABLE public.cajachica_ingresos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE public.cajachica_ingresos ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_ingresos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_ingresos ADD CONSTRAINT cajachica_ingresos_id_usuario_fkey
     FOREIGN KEY (id_usuario) REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte de ingresos/gastos',247,TRUE,'caja_chica/rpt_ingresos_gastos/','print',TRUE);

 ✔ Salidas productos original y copia @done (16-10-31 12:54) pct|san|pcc
   ALTER TABLE public.compras_salidas ADD COLUMN no_impresiones smallint DEFAULT 0;
   ALTER TABLE public.compras_salidas ADD COLUMN no_impresiones_tk smallint DEFAULT 0;

✔ Catalogo de productores @done (16-10-13 12:15) san|cpt|cpl|cpc
  ALTER TABLE otros.productor ADD COLUMN no_coeplim character varying(55);
  ALTER TABLE otros.productor ADD COLUMN hectareas double precision DEFAULT 0;
  ALTER TABLE otros.productor ADD COLUMN pequena_propiedad character varying(55);
  ALTER TABLE otros.productor ADD COLUMN propietario character varying(150);
  ALTER TABLE public.usuarios ALTER COLUMN banco TYPE character varying(15);

 ✔ Bodega gdl @done (16-09-30 11:33)
   ALTER TABLE public.facturacion_series_folios ADD COLUMN default_serie boolean NOT NULL DEFAULT false;
   ALTER TABLE public.facturacion ADD COLUMN no_impresiones_tk integer NOT NULL DEFAULT 0;
 ✔ Entrega de fruta @done (16-09-30 11:33)
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_bascula bigint;
   ALTER TABLE otros.entrega_fruta ADD COLUMN id_recibe bigint;

 ✔ No impreciones boleta recepcion @done (16-09-22 11:05)
   ALTER TABLE public.bascula ADD COLUMN no_imp_recepcion smallint NOT NULL DEFAULT 0;
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('BanCoppel','ac','137');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Inbursa','ac','36');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Bajio','ac','30');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Afirme','ac','62');
   INSERT INTO banco_bancos(nombre, status, codigo) VALUES ('Azteca','ac','127');
   ALTER TABLE public.facturacion_productos ADD COLUMN unidad_c real;
   update facturacion_productos AS fp set unidad_c = sq.cantidad FROM (SELECT id_unidad, cantidad FROM unidades where cantidad > 0) AS sq WHERE fp.id_unidad = sq.id_unidad;
   ALTER TABLE compras_salidas_labores ADD COLUMN costo double precision NOT NULL DEFAULT 0;


 ✔ Caja bodega guadalajara @done (16-07-26 09:53)
   ALTER TABLE otros.bodega_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE otros.bodega_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE otros.bodega_gastos ADD CONSTRAINT bodega_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE otros.bodega_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;

 ✔ Productos especiales en facturacion y reporte de cuentas x pagar @done (16-07-21 14:06)
   ALTER TABLE facturacion_seg_cert ADD COLUMN num_operacion character varying(30);
   ALTER TABLE facturacion_seg_cert ADD COLUMN nrow integer NOT NULL DEFAULT 0;
   ALTER TABLE facturacion_seg_cert DROP CONSTRAINT facturacion_seg_cert_pkey;
   ALTER TABLE facturacion_seg_cert ADD CONSTRAINT facturacion_seg_cert_pkey PRIMARY KEY(id_factura, id_clasificacion, nrow);

 ✔ Comercio exterior @done (16-07-17 10:45)
   ALTER TABLE public.facturacion_productos ADD COLUMN no_identificacion character varying(50);
   CREATE TABLE public.facturacion_ce
      (
        id bigserial NOT NULL,
        id_factura bigint NOT NULL,
        version character varying(5) NOT NULL,
        tipo_operacion character varying(5) NOT NULL,
        clave_pedimento character varying(5),
        certificado_origen character varying(5),
        num_certificado_origen character varying(40),
        numero_exportador_confiable character varying(50),
        incoterm character varying(5),
        subdivision character varying(5),
        observaciones character varying(300),
        "tipocambio_USD" double precision NOT NULL DEFAULT (0)::double precision,
        "total_USD" double precision NOT NULL DEFAULT (0)::double precision,
        emisor_curp character varying(18),
        receptor_numregidtrib character varying(40),
        receptor_curp character varying(18),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_pkey PRIMARY KEY (id),
        CONSTRAINT facturacion_ce_factura_id_foreign FOREIGN KEY (id_factura)
            REFERENCES public.facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce TO programa;

      CREATE TABLE public.facturacion_ce_destinatario
      (
        comercio_exterior_id bigint NOT NULL,
        numregidtrib character varying(40),
        rfc character varying(15),
        curp character varying(18),
        nombre character varying(300),
        calle character varying(100) NOT NULL,
        numero_exterior character varying(55),
        numero_interior character varying(55),
        colonia character varying(120),
        localidad character varying(120),
        referencia character varying(250) NOT NULL DEFAULT '0'::character varying,
        municipio character varying(120) NOT NULL DEFAULT '0'::character varying,
        estado character varying(30) NOT NULL,
        pais character varying(10),
        codigo_postal character varying(12),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_destinatario_pkey PRIMARY KEY (comercio_exterior_id),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_destinatario
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_destinatario TO programa;

      CREATE TABLE public.facturacion_ce_mercancias
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        noidentificacion character varying(100) NOT NULL,
        fraccionar_ancelaria character varying(20),
        cantidad_aduana double precision,
        unidad_aduana character varying(10),
        valor_unitario_aduana double precision,
        valor_dolares double precision NOT NULL,
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_pkey PRIMARY KEY (comercio_exterior_id, "row"),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias
        OWNER TO programa;
      GRANT ALL ON TABLE public.facturacion_ce_mercancias TO programa;

      CREATE TABLE public.facturacion_ce_mercancias_esp
      (
        comercio_exterior_id bigint NOT NULL,
        "row" integer NOT NULL,
        row2 integer NOT NULL,
        marca character varying(35) NOT NULL,
        modelo character varying(80),
        submodelo double precision,
        numeroserie character varying(40),
        created_at timestamp without time zone NOT NULL,
        updated_at timestamp without time zone NOT NULL,
        CONSTRAINT facturacion_ce_mercancias_esp_pkey PRIMARY KEY (comercio_exterior_id, "row", row2),
        CONSTRAINT facturacion_ce_id_foreign FOREIGN KEY (comercio_exterior_id)
            REFERENCES public.facturacion_ce (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.facturacion_ce_mercancias_esp
        OWNER TO programa;

 ✔ Privilegio modificar kilos @done (16-07-17 10:45)
  INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar kilos bruto y tara',70,FALSE,'bascula/modificar_kilosbt/','pencil',FALSE);

 ✔ Usuario y fecha de creacion en los gastos y abonos de cajas chica @done (16-07-04 16:05)
   ALTER TABLE public.cajachica_gastos ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_gastos ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_gastos ADD CONSTRAINT cajachica_gastos_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN id_usuario bigint;
   ALTER TABLE public.cajachica_remisiones ADD COLUMN fecha_creacion timestamp without time zone DEFAULT now();
   ALTER TABLE public.cajachica_remisiones ADD CONSTRAINT cajachica_remisiones_id_usuario_fkey FOREIGN KEY (id_usuario)
      REFERENCES public.usuarios (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;

 ✔ Reporte de productos facturados 2 con los datos de calidad, tamaño @done (16-06-23 10:19)
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Reporte Productos Facturados con Kilos',362,TRUE,'facturacion/prodfact2/','print',TRUE);

 ✔ SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE state = 'idle' AND state_change < current_timestamp - INTERVAL '15' MINUTE; @done (16-06-09 22:26)
   update clientes set metodo_pago = '98' where lower(trim(metodo_pago)) = 'no identificado';
   update clientes set metodo_pago = '03' where lower(trim(metodo_pago)) = 'transferencia';

 ✔ INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Calidades Ventas', 15, FALSE, 'areas_otros/calidades/', 'list', FALSE); @done (16-04-30 10:44)
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar calidad', 431, FALSE, 'areas_otros/agregar_calidad/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 431, FALSE, 'areas_otros/activar_calidad/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 431, FALSE, 'areas_otros/modificar_calidad/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 431, FALSE, 'areas_otros/eliminar_calidad/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Tamaños Ventas', 15, FALSE, 'areas_otros/tamanos/', 'list', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar tamaño', 436, FALSE, 'areas_otros/agregar_tamano/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Activar', 436, FALSE, 'areas_otros/activar_tamano/', 'ok', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 436, FALSE, 'areas_otros/modificar_tamano/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Eliminar', 436, FALSE, 'areas_otros/eliminar_tamano/', 'remove', FALSE);

    CREATE TABLE otros.areas_calidades
      (
        id_calidad bigserial NOT NULL,
        id_area integer NOT NULL,
        status boolean NOT NULL DEFAULT true,
        nombre character varying(20) NOT NULL,
        CONSTRAINT areas_calidades_pkey PRIMARY KEY (id_calidad),
        CONSTRAINT areas_calidades_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_calidades
        OWNER TO programa;
    CREATE TABLE otros.areas_tamanios
      (
        id_tamanio bigserial NOT NULL,
        id_area integer NOT NULL,
        nombre character varying(30) NOT NULL,
        status boolean NOT NULL DEFAULT true,
        CONSTRAINT areas_tamanios_pkey PRIMARY KEY (id_tamanio),
        CONSTRAINT areas_tamanios_id_area_fkey FOREIGN KEY (id_area)
            REFERENCES areas (id_area) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.areas_tamanios
        OWNER TO programa;
    ALTER TABLE facturacion_productos ADD COLUMN id_calidad bigint;
    ALTER TABLE facturacion_productos ADD COLUMN id_tamanio bigint;
    ALTER TABLE facturacion_productos ADD COLUMN descripcion2 character varying(200);
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_calidad_fkey FOREIGN KEY (id_calidad)
      REFERENCES otros.areas_calidades (id_calidad) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
    ALTER TABLE facturacion_productos ADD CONSTRAINT facturacion_productos_id_tamanio_fkey FOREIGN KEY (id_tamanio)
      REFERENCES otros.areas_tamanios (id_tamanio) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;


 ✔ ALTER TABLE facturacion ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0; @done (16-03-31 13:28)
   ALTER TABLE cajachica_remisiones ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_gastos ADD COLUMN no_impresiones integer NOT NULL DEFAULT 0;
   ALTER TABLE cajachica_remisiones ALTER COLUMN "row" TYPE bigint;
   ALTER TABLE cajachica_remisiones ADD COLUMN folio bigint;
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Control de acceso', 0, TRUE, 'control_acceso/', 'resize-horizontal', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrada y Salida', 427, TRUE, 'control_acceso/entrada_salida/', 'plus', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 427, FALSE, 'control_acceso/modificar/', 'edit', FALSE);
   INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Remision y/o factura', 70, FALSE, 'documentos/remision_factura/', 'copy', FALSE);

   UPDATE rastria_documentos SET orden=orden+1;
   INSERT INTO rastria_documentos(nombre, url_form, url_print, status, orden) VALUES ('REMISION Y/O FACTURA', 'panel/documentos/remision_factura', '', TRUE, 1);
   CREATE OR REPLACE VIEW embarque_pallets_libres AS
       SELECT rp.id_pallet,
          rp.no_cajas,
          rp.kilos_pallet,
          string_agg(clasi.nombre::text, ', '::text) AS clasificaciones,
          rp.folio,
          cali.calibres,
          ( SELECT string_agg(etiq.nombre::text, ', '::text) AS etiquetas
                 FROM rastria_pallets rp2
                   JOIN ( SELECT rpr.id_pallet,
                          et.nombre
                         FROM rastria_pallets_rendimiento rpr
                           JOIN etiquetas et ON rpr.id_etiqueta = et.id_etiqueta
                        GROUP BY rpr.id_pallet, rpr.id_etiqueta, et.nombre
                        ORDER BY rpr.id_pallet) etiq ON etiq.id_pallet = rp2.id_pallet
                WHERE etiq.id_pallet = rp.id_pallet) AS etiquetas,
          rp.fecha
         FROM rastria_pallets rp
           LEFT JOIN facturacion_doc_embarque_pallets fdp ON fdp.id_pallet = rp.id_pallet
           JOIN ( SELECT rpr.id_pallet,
                  cl.nombre
                 FROM rastria_pallets_rendimiento rpr
                   JOIN clasificaciones cl ON rpr.id_clasificacion = cl.id_clasificacion
                GROUP BY rpr.id_pallet, rpr.id_clasificacion, cl.nombre
                ORDER BY rpr.id_pallet) clasi ON clasi.id_pallet = rp.id_pallet
           LEFT JOIN ( SELECT rpc.id_pallet,
                  string_agg(cal.nombre::text, ', '::text) AS calibres
                 FROM rastria_pallets_calibres rpc
                   JOIN calibres cal ON rpc.id_calibre = cal.id_calibre
                GROUP BY rpc.id_pallet
                ORDER BY rpc.id_pallet) cali ON cali.id_pallet = rp.id_pallet
        WHERE fdp.id_embarque IS NULL
        GROUP BY rp.id_pallet, rp.no_cajas, rp.folio, cali.calibres, rp.kilos_pallet
        ORDER BY rp.id_pallet DESC;
        ALTER TABLE embarque_pallets_libres
          OWNER TO programa;
        COMMENT ON VIEW embarque_pallets_libres
          IS 'Muestra los pallets que no han sido colocados en embarque.';
   CREATE TABLE otros.vales_salida
      (
        id_vale_salida bigserial NOT NULL,
        tipo character varying(20) NOT NULL, -- venta,
        id_remision bigint, -- id de la remision para salidas tipo venta
        folio bigint NOT NULL,
        id_autoriza bigint, -- id del usaurio que registro el vale
        fecha timestamp with time zone NOT NULL DEFAULT now(),
        no_impresiones integer NOT NULL DEFAULT 0,
        CONSTRAINT vales_salida_pkey PRIMARY KEY (id_vale_salida),
        CONSTRAINT vales_salida_id_autoriza_fkey FOREIGN KEY (id_autoriza)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT vales_salida_id_remision_fkey FOREIGN KEY (id_remision)
            REFERENCES facturacion (id_factura) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.vales_salida
        OWNER TO programa;
      COMMENT ON COLUMN otros.vales_salida.tipo IS 'venta, ';
      COMMENT ON COLUMN otros.vales_salida.id_remision IS 'id de la remision para salidas tipo venta';
      COMMENT ON COLUMN otros.vales_salida.id_autoriza IS 'id del usaurio que registro el vale';
   CREATE TABLE otros.control_acceso
      (
        id_control bigserial NOT NULL,
        id_usaurio_ent bigint NOT NULL,
        id_usuario_sal bigint,
        id_vale_salida bigint,
        nombre character varying(200) NOT NULL,
        asunto character varying(200) NOT NULL,
        departamento character varying(60) NOT NULL,
        placas character varying(15) NOT NULL,
        fecha_entrada timestamp with time zone NOT NULL DEFAULT now(),
        fecha_salida timestamp with time zone,
        CONSTRAINT control_acceso_pkey PRIMARY KEY (id_control),
        CONSTRAINT control_acceso_id_usaurio_ent_fkey FOREIGN KEY (id_usaurio_ent)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_usuario_sal_fkey FOREIGN KEY (id_usuario_sal)
            REFERENCES usuarios (id) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE,
        CONSTRAINT control_acceso_id_vale_salida_fkey FOREIGN KEY (id_vale_salida)
            REFERENCES otros.vales_salida (id_vale_salida) MATCH SIMPLE
            ON UPDATE CASCADE ON DELETE CASCADE
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE otros.control_acceso
        OWNER TO programa;


 ✔ Trabajo agricola @done (16-03-17 10:23)
    CREATE TABLE otros.trabajo_agricola
    (
      id_trabajo_agricola bigserial NOT NULL,
      id_empresa integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_cod_vehiculo bigint, -- vehiculo del catalogo de codigos
      id_operador bigint, -- id del chofer operador
      horometro_ini double precision DEFAULT 0,
      horometro_fin double precision DEFAULT 0,
      horometro_total double precision DEFAULT 0,
      hora_ini time with time zone,
      hora_fin time with time zone,
      total_hrs time with time zone,
      CONSTRAINT trabajo_agricola_pkey PRIMARY KEY (id_trabajo_agricola),
      CONSTRAINT trabajo_agricola_id_cat_cod_vehiculo_fkey FOREIGN KEY (id_cat_cod_vehiculo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_id_operador_fkey FOREIGN KEY (id_operador)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola
      OWNER TO programa;
    COMMENT ON COLUMN otros.trabajo_agricola.id_cat_cod_vehiculo IS 'vehiculo del catalogo de codigos';
    COMMENT ON COLUMN otros.trabajo_agricola.id_operador IS 'id del chofer operador';

    CREATE TABLE otros.trabajo_agricola_labores
    (
      id_trabajo_agricola bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_labor integer NOT NULL,
      id_centro_costo bigint NOT NULL,
      hora_ini time with time zone NOT NULL,
      CONSTRAINT trabajo_agricola_labores_pkey PRIMARY KEY (id_trabajo_agricola, "row"),
      CONSTRAINT trabajo_agricola_labores_id_centro_costo_fkey FOREIGN KEY (id_centro_costo)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_labor_fkey FOREIGN KEY (id_labor)
          REFERENCES compras_salidas_labores (id_labor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT trabajo_agricola_labores_id_trabajo_agricola_fkey FOREIGN KEY (id_trabajo_agricola)
          REFERENCES otros.trabajo_agricola (id_trabajo_agricola) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.trabajo_agricola_labores
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Trabajo agricola',0,TRUE,'btrabajo_agricola/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',423,TRUE,'btrabajo_agricola/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',423,FALSE,'btrabajo_agricola/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',423,FALSE,'btrabajo_agricola/printEntrada/','print',FALSE);

 ✔ Entrega de fruta @done (16-03-17 10:16)
    CREATE TABLE otros.entrega_fruta
    (
      id_entrega_fruta bigserial NOT NULL,
      id_area integer NOT NULL,
      folio integer NOT NULL DEFAULT 0,
      fecha_registro date NOT NULL DEFAULT now(),
      fecha_captura date,
      id_cat_codigos_rnch bigint, -- rancho del catalogo de codigos
      id_vehiculo bigint,
      id_usuario bigint, -- id del chofer
      no character varying(10), -- No melga / No seccion
      id_encargado bigint, -- encargado
      total double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_pkey PRIMARY KEY (id_entrega_fruta),
      CONSTRAINT entrega_fruta_id_area_fkey FOREIGN KEY (id_area)
          REFERENCES areas (id_area) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_cat_codigos_rnch_fkey FOREIGN KEY (id_cat_codigos_rnch)
          REFERENCES otros.cat_codigos (id_cat_codigos) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_encargado_fkey FOREIGN KEY (id_encargado)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_id_vehiculo_fkey FOREIGN KEY (id_vehiculo)
          REFERENCES compras_vehiculos (id_vehiculo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta
      OWNER TO programa;
    COMMENT ON COLUMN otros.entrega_fruta.id_cat_codigos_rnch IS 'rancho del catalogo de codigos';
    COMMENT ON COLUMN otros.entrega_fruta.id_usuario IS 'id del chofer';
    COMMENT ON COLUMN otros.entrega_fruta.no IS 'No melga / No seccion';
    COMMENT ON COLUMN otros.entrega_fruta.id_encargado IS 'encargado';

    CREATE TABLE otros.entrega_fruta_cantidad
    (
      id_entrega_fruta bigint NOT NULL,
      "row" integer NOT NULL DEFAULT 0,
      id_clasificacion integer,
      piso double precision DEFAULT 0,
      estibas double precision DEFAULT 0,
      altura character varying(30),
      cantidad double precision DEFAULT 0,
      CONSTRAINT entrega_fruta_cantidad_pkey PRIMARY KEY (id_entrega_fruta, "row"),
      CONSTRAINT entrega_fruta_cantidad_id_clasificacion_fkey FOREIGN KEY (id_clasificacion)
          REFERENCES clasificaciones (id_clasificacion) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT entrega_fruta_cantidad_id_entrega_fruta_fkey FOREIGN KEY (id_entrega_fruta)
          REFERENCES otros.entrega_fruta (id_entrega_fruta) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.entrega_fruta_cantidad
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Entrega de Fruta',0,TRUE,'entrega_fruta/','folder-close',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Crear formatos',419,TRUE,'entrega_fruta/agregar/','plus',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar',419,FALSE,'entrega_fruta/modificar/','edit',FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir',419,FALSE,'entrega_fruta/printEntrada/','print',FALSE);

 ✔ Bascula Snapshot @done (16-03-03 11:37)
   ALTER TABLE bascula_fotos DROP CONSTRAINT bascula_fotos_pkey;
   ALTER TABLE bascula_fotos ADD CONSTRAINT bascula_fotos_pkey PRIMARY KEY(id_bascula, no_camara, tipo);

 ✔ Contrarecibos @done (16-02-19 19:17)
    CREATE TABLE otros.contrarecibos
    (
      id_contrarecibo bigserial NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      folio bigint NOT NULL,
      id_proveedor bigint NOT NULL,
      total double precision NOT NULL DEFAULT 0,
      status boolean NOT NULL DEFAULT true,
      id_empresa integer NOT NULL,
      id_usuario bigint,
      CONSTRAINT contrarecibos_pkey PRIMARY KEY (id_contrarecibo),
      CONSTRAINT contrarecibos_id_empresa_fkey FOREIGN KEY (id_empresa)
          REFERENCES empresas (id_empresa) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_proveedor_fkey FOREIGN KEY (id_proveedor)
          REFERENCES proveedores (id_proveedor) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE,
      CONSTRAINT contrarecibos_id_usuario_fkey FOREIGN KEY (id_usuario)
          REFERENCES usuarios (id) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos
      OWNER TO programa;

    CREATE TABLE otros.contrarecibos_facturas
    (
      id_contrarecibo bigint NOT NULL,
      norow integer NOT NULL DEFAULT 0,
      folio character varying(15) NOT NULL,
      fecha date NOT NULL DEFAULT now(),
      importe double precision NOT NULL DEFAULT 0,
      observacion character varying(200),
      CONSTRAINT contrarecibos_facturas_pkey PRIMARY KEY (id_contrarecibo, norow),
      CONSTRAINT contrarecibos_facturas_id_contrarecibo_fkey FOREIGN KEY (id_contrarecibo)
          REFERENCES otros.contrarecibos (id_contrarecibo) MATCH SIMPLE
          ON UPDATE CASCADE ON DELETE CASCADE
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE otros.contrarecibos_facturas
      OWNER TO programa;
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Contrarecibos', 149, TRUE, 'contrarecibo/', 'th-large', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Agregar contrarecibo', 414, TRUE, 'contrarecibo/agregar/', 'plus', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Modificar', 414, FALSE, 'contrarecibo/modificar/', 'edit', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Cancelar', 414, FALSE, 'contrarecibo/cancelar/', 'remove', FALSE);
    INSERT INTO "privilegios"( "nombre", "id_padre", "mostrar_menu", "url_accion", "url_icono", "target_blank") VALUES ('Imprimir', 414, FALSE, 'contrarecibo/imprimir/', 'print', FALSE);
